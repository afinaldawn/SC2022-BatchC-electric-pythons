{"backend_state":"running","connection_file":"/projects/0bcf82e6-7441-4432-a339-19b67c22cc5c/.local/share/jupyter/runtime/kernel-be041b6b-99ec-4799-a72b-bd2bc757cd54.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1658524311451,"exec_count":85,"id":"b7194b","input":"softeng = df[df['title'] == 'Software Engineer']\nplot12 = px.histogram(softeng, x='basesalary', title='Software Engineer Base Salary per State', color='state')\nplot12.show()\n","kernel":"ds_env","output":{"0":{"data":{"iframe":"2b639a14cfaea27a597fa499a81357b5731eef22"}}},"pos":26,"start":1658524311214,"state":"done","type":"cell"}
{"cell_type":"code","end":1658525133258,"exec_count":98,"id":"cfb6b1","input":"import pandas as pd\nimport numpy as np\n","kernel":"ds_env","pos":0,"start":1658525133250,"state":"done","type":"cell"}
{"cell_type":"code","end":1658525134112,"exec_count":99,"id":"2e9772","input":"df = pd.read_csv(\"Levels_Fyi_Salary_Data.csv\")","kernel":"ds_env","pos":2,"start":1658525133667,"state":"done","type":"cell"}
{"cell_type":"code","end":1658525134145,"exec_count":100,"id":"577a4a","input":"df.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>timestamp</th>\n      <th>company</th>\n      <th>level</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>location</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>tag</th>\n      <th>basesalary</th>\n      <th>...</th>\n      <th>Doctorate_Degree</th>\n      <th>Highschool</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>Race</th>\n      <th>Education</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>6/7/2017 11:33:27</td>\n      <td>Oracle</td>\n      <td>L3</td>\n      <td>Product Manager</td>\n      <td>127000</td>\n      <td>Redwood City, CA</td>\n      <td>1.5</td>\n      <td>1.5</td>\n      <td>NaN</td>\n      <td>107000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>6/10/2017 17:11:29</td>\n      <td>eBay</td>\n      <td>SE 2</td>\n      <td>Software Engineer</td>\n      <td>100000</td>\n      <td>San Francisco, CA</td>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>6/11/2017 14:53:57</td>\n      <td>Amazon</td>\n      <td>L7</td>\n      <td>Product Manager</td>\n      <td>310000</td>\n      <td>Seattle, WA</td>\n      <td>8.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>155000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>6/17/2017 0:23:14</td>\n      <td>Apple</td>\n      <td>M1</td>\n      <td>Software Engineering Manager</td>\n      <td>372000</td>\n      <td>Sunnyvale, CA</td>\n      <td>7.0</td>\n      <td>5.0</td>\n      <td>NaN</td>\n      <td>157000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>6/20/2017 10:58:51</td>\n      <td>Microsoft</td>\n      <td>60</td>\n      <td>Software Engineer</td>\n      <td>157000</td>\n      <td>Mountain View, CA</td>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 29 columns</p>\n</div>","text/plain":"            timestamp    company level                         title  \\\n0   6/7/2017 11:33:27     Oracle    L3               Product Manager   \n1  6/10/2017 17:11:29       eBay  SE 2             Software Engineer   \n2  6/11/2017 14:53:57     Amazon    L7               Product Manager   \n3   6/17/2017 0:23:14      Apple    M1  Software Engineering Manager   \n4  6/20/2017 10:58:51  Microsoft    60             Software Engineer   \n\n   totalyearlycompensation           location  yearsofexperience  \\\n0                   127000   Redwood City, CA                1.5   \n1                   100000  San Francisco, CA                5.0   \n2                   310000        Seattle, WA                8.0   \n3                   372000      Sunnyvale, CA                7.0   \n4                   157000  Mountain View, CA                5.0   \n\n   yearsatcompany  tag  basesalary  ...  Doctorate_Degree  Highschool  \\\n0             1.5  NaN    107000.0  ...                 0           0   \n1             3.0  NaN         0.0  ...                 0           0   \n2             0.0  NaN    155000.0  ...                 0           0   \n3             5.0  NaN    157000.0  ...                 0           0   \n4             3.0  NaN         0.0  ...                 0           0   \n\n  Some_College Race_Asian  Race_White  Race_Two_Or_More  Race_Black  \\\n0            0          0           0                 0           0   \n1            0          0           0                 0           0   \n2            0          0           0                 0           0   \n3            0          0           0                 0           0   \n4            0          0           0                 0           0   \n\n   Race_Hispanic  Race  Education  \n0              0   NaN        NaN  \n1              0   NaN        NaN  \n2              0   NaN        NaN  \n3              0   NaN        NaN  \n4              0   NaN        NaN  \n\n[5 rows x 29 columns]"},"exec_count":100}},"pos":3,"start":1658525134123,"state":"done","type":"cell"}
{"cell_type":"code","end":1658525134305,"exec_count":101,"id":"a1b981","input":"df['Masters_Degree'].isnull().values.any()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"False"},"exec_count":101}},"pos":4,"start":1658525134298,"state":"done","type":"cell"}
{"cell_type":"code","end":1658525134593,"exec_count":102,"id":"92ce7e","input":"df['dmaid'].isnull().sum()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"2"},"exec_count":102}},"pos":5,"start":1658525134580,"state":"done","type":"cell"}
{"cell_type":"code","end":1658525135122,"exec_count":103,"id":"dc5b50","input":"df.columns","kernel":"ds_env","output":{"0":{"data":{"text/plain":"Index(['timestamp', 'company', 'level', 'title', 'totalyearlycompensation',\n       'location', 'yearsofexperience', 'yearsatcompany', 'tag', 'basesalary',\n       'stockgrantvalue', 'bonus', 'gender', 'otherdetails', 'cityid', 'dmaid',\n       'rowNumber', 'Masters_Degree', 'Bachelors_Degree', 'Doctorate_Degree',\n       'Highschool', 'Some_College', 'Race_Asian', 'Race_White',\n       'Race_Two_Or_More', 'Race_Black', 'Race_Hispanic', 'Race', 'Education'],\n      dtype='object')"},"exec_count":103}},"pos":6,"start":1658525135114,"state":"done","type":"cell"}
{"cell_type":"code","end":1658525136277,"exec_count":105,"id":"5a2e3b","input":"df.dropna(inplace=True)","kernel":"ds_env","pos":9,"start":1658525136255,"state":"done","type":"cell"}
{"cell_type":"code","end":1658525136423,"exec_count":106,"id":"c5e90f","input":"df.reset_index(drop=True, inplace=True)","kernel":"ds_env","pos":10,"start":1658525136420,"state":"done","type":"cell"}
{"cell_type":"code","end":1658525136703,"exec_count":107,"id":"c81fca","input":"df.value_counts('Highschool')\n","kernel":"ds_env","output":{"0":{"data":{"text/plain":"Highschool\n0    42788\n1      310\ndtype: int64"},"exec_count":107}},"pos":11,"start":1658525136687,"state":"done","type":"cell"}
{"cell_type":"code","end":1658525137047,"exec_count":108,"id":"4bf6cd","input":"def get_state(x):\n    words = x.split(', ')\n    state = words[1]\n    if state == 'CA':\n        return 'CA'\n    elif state == 'WA':\n        return 'WA'\n    elif state == 'NY':\n        return 'NY'\n    else:\n        return 'Other'","kernel":"ds_env","pos":12,"start":1658525137035,"state":"done","type":"cell"}
{"cell_type":"code","end":1658525137444,"exec_count":109,"id":"bfa769","input":"df['state'] = df['location'].apply(get_state)\ndf.drop(['location'], axis = 1, inplace = True)","kernel":"ds_env","pos":13,"start":1658525137417,"state":"done","type":"cell"}
{"cell_type":"code","end":1658525139751,"exec_count":112,"id":"d7380a","input":"top_15_popular = list(df['company'].value_counts().index)[:15]\ndef in_popular(x):\n    if x in top_15_popular:\n        return True\n    else:\n        return False\n    \ndf['in_top_15'] = df['company'].apply(in_popular)","kernel":"ds_env","pos":15,"start":1658525139726,"state":"done","type":"cell"}
{"cell_type":"code","end":1658525141534,"exec_count":115,"id":"fd1dff","input":"df.head","kernel":"ds_env","output":{"0":{"data":{"text/plain":"<bound method NDFrame.head of           company              title  totalyearlycompensation  \\\n0      GE Digital  Software Engineer                   140000   \n1          Amazon  Software Engineer                   172000   \n2            Uber  Software Engineer                   325000   \n3       Microsoft  Software Engineer                   150000   \n4          Google  Software Engineer                   640000   \n...           ...                ...                      ...   \n43093      Amazon  Software Engineer                   135000   \n43094      Amazon  Software Engineer                   350000   \n43095   Microsoft    Product Manager                   305000   \n43096      Amazon  Software Engineer                   152000   \n43097       apple  Software Engineer                   200000   \n\n       yearsofexperience  yearsatcompany  basesalary  stockgrantvalue  \\\n0                    4.0             4.0    130000.0              0.0   \n1                   12.0             2.0    142000.0          30000.0   \n2                    7.0             2.0    161000.0         140000.0   \n3                    4.0             0.0    118000.0           5000.0   \n4                   11.0             4.0    210000.0         380000.0   \n...                  ...             ...         ...              ...   \n43093                1.0             0.0    104000.0           3000.0   \n43094               14.0             1.0    160000.0         175000.0   \n43095               20.0             2.0    200000.0          75000.0   \n43096                3.0             0.0    106000.0          26000.0   \n43097                0.0             0.0    155000.0          27000.0   \n\n         bonus  gender  Masters_Degree  ...  Highschool  Some_College  \\\n0      10000.0    Male               0  ...           0             0   \n1          0.0    Male               0  ...           0             0   \n2      25000.0    Male               0  ...           0             0   \n3      12000.0    Male               0  ...           0             0   \n4      50000.0    Male               0  ...           0             0   \n...        ...     ...             ...  ...         ...           ...   \n43093  18500.0    Male               0  ...           0             0   \n43094  56250.0    Male               0  ...           0             0   \n43095  30000.0  Female               0  ...           0             0   \n43096  20000.0    Male               0  ...           0             0   \n43097  19000.0    Male               0  ...           0             0   \n\n       Race_Asian  Race_White  Race_Two_Or_More  Race_Black  Race_Hispanic  \\\n0               0           0                 0           0              0   \n1               0           0                 0           0              0   \n2               0           0                 0           0              0   \n3               0           0                 0           0              0   \n4               0           0                 0           0              0   \n...           ...         ...               ...         ...            ...   \n43093           0           0                 0           0              0   \n43094           0           0                 0           0              0   \n43095           0           0                 0           0              0   \n43096           0           0                 0           0              0   \n43097           0           0                 0           0              0   \n\n       state  education in_top_15  \n0         CA    Missing     False  \n1         WA    Missing      True  \n2         CA    Missing      True  \n3         WA    Missing      True  \n4         CA    Missing      True  \n...      ...        ...       ...  \n43093     WA    Missing      True  \n43094  Other    Missing      True  \n43095     WA    Missing      True  \n43096     WA    Missing      True  \n43097     CA    Missing     False  \n\n[43098 rows x 22 columns]>"},"exec_count":115}},"pos":16,"start":1658525141512,"state":"done","type":"cell"}
{"cell_type":"code","end":1658525141563,"exec_count":116,"id":"9bbf3c","input":"df.groupby(by='gender')['basesalary'].mean()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"gender\nFemale                             133823.203315\nMale                               136322.098381\nOther                              141050.000000\nTitle: Senior Software Engineer    177000.000000\nName: basesalary, dtype: float64"},"exec_count":116}},"pos":17,"start":1658525141547,"state":"done","type":"cell"}
{"cell_type":"code","end":1658525141583,"exec_count":117,"id":"394b16","input":"df.groupby('title')['yearsofexperience'].mean()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"title\nBusiness Analyst                 5.812144\nData Scientist                   4.913218\nHardware Engineer                7.902423\nHuman Resources                 10.526570\nManagement Consultant            7.338710\nMarketing                        9.248227\nMechanical Engineer              6.115132\nProduct Designer                 7.584427\nProduct Manager                  9.084068\nRecruiter                        8.135036\nSales                            8.814286\nSoftware Engineer                6.027325\nSoftware Engineering Manager    14.123154\nSolution Architect              12.717662\nTechnical Program Manager       12.272116\nName: yearsofexperience, dtype: float64"},"exec_count":117}},"pos":18,"scrolled":true,"start":1658525141574,"state":"done","type":"cell"}
{"cell_type":"code","end":1658525141590,"exec_count":118,"id":"a4fe2f","input":"import plotly.express as px\n","kernel":"ds_env","pos":19,"start":1658525141587,"state":"done","type":"cell"}
{"cell_type":"code","end":1658525141892,"exec_count":119,"id":"dc5096","input":"plot2 = px.histogram(df, x = 'yearsatcompany', y = 'totalyearlycompensation', title = 'FUN', color = 'in_top_15')\nplot2.show()\n","kernel":"ds_env","output":{"0":{"data":{"iframe":"2c3912add450bba2b6541c3089596ad062e2cd1f"}}},"pos":20,"scrolled":true,"start":1658525141604,"state":"done","type":"cell"}
{"cell_type":"code","end":1658525142611,"exec_count":120,"id":"e4a58e","input":"plot2 = px.pie(df,'gender', title = ' Other FUN', color = 'in_top_15')\nplot2.show()","kernel":"ds_env","output":{"0":{"data":{"iframe":"b847474f19c2a98e5492db3a71b4529f079dcdc2"}}},"pos":21,"start":1658525141899,"state":"done","type":"cell"}
{"cell_type":"code","end":1658525143139,"exec_count":121,"id":"e4d754","input":"plot8 = px.histogram(df, x = 'totalyearlycompensation', title = 'total yearly salary', color = 'in_top_15')\nplot8.show()","kernel":"ds_env","output":{"0":{"data":{"iframe":"d93db3baa8aa2e845fa591a8b47c00363f97c4a6"}}},"pos":22,"start":1658525142618,"state":"done","type":"cell"}
{"cell_type":"code","end":1658525143313,"exec_count":122,"id":"64d531","input":"plot7 = px.pie(df, 'Masters_Degree')\nplot7.show()\n","kernel":"ds_env","output":{"0":{"data":{"iframe":"0465621ca2c8262e5a27b81eb383f8ddb7ae05b9"}}},"pos":23,"start":1658525143159,"state":"done","type":"cell"}
{"cell_type":"code","end":1658525143460,"exec_count":123,"id":"0c8970","input":"companys = df.groupby(by = 'company').count().reset_index().sort_values(by = 'title', ascending = False).head(10)\ncompanys\n","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>...</th>\n      <th>Highschool</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>state</th>\n      <th>education</th>\n      <th>in_top_15</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>61</th>\n      <td>Amazon</td>\n      <td>5525</td>\n      <td>5525</td>\n      <td>5525</td>\n      <td>5525</td>\n      <td>5525</td>\n      <td>5525</td>\n      <td>5525</td>\n      <td>5525</td>\n      <td>5525</td>\n      <td>...</td>\n      <td>5525</td>\n      <td>5525</td>\n      <td>5525</td>\n      <td>5525</td>\n      <td>5525</td>\n      <td>5525</td>\n      <td>5525</td>\n      <td>5525</td>\n      <td>5525</td>\n      <td>5525</td>\n    </tr>\n    <tr>\n      <th>769</th>\n      <td>Microsoft</td>\n      <td>3641</td>\n      <td>3641</td>\n      <td>3641</td>\n      <td>3641</td>\n      <td>3641</td>\n      <td>3641</td>\n      <td>3641</td>\n      <td>3641</td>\n      <td>3641</td>\n      <td>...</td>\n      <td>3641</td>\n      <td>3641</td>\n      <td>3641</td>\n      <td>3641</td>\n      <td>3641</td>\n      <td>3641</td>\n      <td>3641</td>\n      <td>3641</td>\n      <td>3641</td>\n      <td>3641</td>\n    </tr>\n    <tr>\n      <th>523</th>\n      <td>Google</td>\n      <td>2978</td>\n      <td>2978</td>\n      <td>2978</td>\n      <td>2978</td>\n      <td>2978</td>\n      <td>2978</td>\n      <td>2978</td>\n      <td>2978</td>\n      <td>2978</td>\n      <td>...</td>\n      <td>2978</td>\n      <td>2978</td>\n      <td>2978</td>\n      <td>2978</td>\n      <td>2978</td>\n      <td>2978</td>\n      <td>2978</td>\n      <td>2978</td>\n      <td>2978</td>\n      <td>2978</td>\n    </tr>\n    <tr>\n      <th>432</th>\n      <td>Facebook</td>\n      <td>2118</td>\n      <td>2118</td>\n      <td>2118</td>\n      <td>2118</td>\n      <td>2118</td>\n      <td>2118</td>\n      <td>2118</td>\n      <td>2118</td>\n      <td>2118</td>\n      <td>...</td>\n      <td>2118</td>\n      <td>2118</td>\n      <td>2118</td>\n      <td>2118</td>\n      <td>2118</td>\n      <td>2118</td>\n      <td>2118</td>\n      <td>2118</td>\n      <td>2118</td>\n      <td>2118</td>\n    </tr>\n    <tr>\n      <th>91</th>\n      <td>Apple</td>\n      <td>1384</td>\n      <td>1384</td>\n      <td>1384</td>\n      <td>1384</td>\n      <td>1384</td>\n      <td>1384</td>\n      <td>1384</td>\n      <td>1384</td>\n      <td>1384</td>\n      <td>...</td>\n      <td>1384</td>\n      <td>1384</td>\n      <td>1384</td>\n      <td>1384</td>\n      <td>1384</td>\n      <td>1384</td>\n      <td>1384</td>\n      <td>1384</td>\n      <td>1384</td>\n      <td>1384</td>\n    </tr>\n    <tr>\n      <th>865</th>\n      <td>Oracle</td>\n      <td>802</td>\n      <td>802</td>\n      <td>802</td>\n      <td>802</td>\n      <td>802</td>\n      <td>802</td>\n      <td>802</td>\n      <td>802</td>\n      <td>802</td>\n      <td>...</td>\n      <td>802</td>\n      <td>802</td>\n      <td>802</td>\n      <td>802</td>\n      <td>802</td>\n      <td>802</td>\n      <td>802</td>\n      <td>802</td>\n      <td>802</td>\n      <td>802</td>\n    </tr>\n    <tr>\n      <th>1004</th>\n      <td>Salesforce</td>\n      <td>695</td>\n      <td>695</td>\n      <td>695</td>\n      <td>695</td>\n      <td>695</td>\n      <td>695</td>\n      <td>695</td>\n      <td>695</td>\n      <td>695</td>\n      <td>...</td>\n      <td>695</td>\n      <td>695</td>\n      <td>695</td>\n      <td>695</td>\n      <td>695</td>\n      <td>695</td>\n      <td>695</td>\n      <td>695</td>\n      <td>695</td>\n      <td>695</td>\n    </tr>\n    <tr>\n      <th>610</th>\n      <td>Intel</td>\n      <td>693</td>\n      <td>693</td>\n      <td>693</td>\n      <td>693</td>\n      <td>693</td>\n      <td>693</td>\n      <td>693</td>\n      <td>693</td>\n      <td>693</td>\n      <td>...</td>\n      <td>693</td>\n      <td>693</td>\n      <td>693</td>\n      <td>693</td>\n      <td>693</td>\n      <td>693</td>\n      <td>693</td>\n      <td>693</td>\n      <td>693</td>\n      <td>693</td>\n    </tr>\n    <tr>\n      <th>578</th>\n      <td>IBM</td>\n      <td>676</td>\n      <td>676</td>\n      <td>676</td>\n      <td>676</td>\n      <td>676</td>\n      <td>676</td>\n      <td>676</td>\n      <td>676</td>\n      <td>676</td>\n      <td>...</td>\n      <td>676</td>\n      <td>676</td>\n      <td>676</td>\n      <td>676</td>\n      <td>676</td>\n      <td>676</td>\n      <td>676</td>\n      <td>676</td>\n      <td>676</td>\n      <td>676</td>\n    </tr>\n    <tr>\n      <th>260</th>\n      <td>Cisco</td>\n      <td>645</td>\n      <td>645</td>\n      <td>645</td>\n      <td>645</td>\n      <td>645</td>\n      <td>645</td>\n      <td>645</td>\n      <td>645</td>\n      <td>645</td>\n      <td>...</td>\n      <td>645</td>\n      <td>645</td>\n      <td>645</td>\n      <td>645</td>\n      <td>645</td>\n      <td>645</td>\n      <td>645</td>\n      <td>645</td>\n      <td>645</td>\n      <td>645</td>\n    </tr>\n  </tbody>\n</table>\n<p>10 rows Ã— 22 columns</p>\n</div>","text/plain":"         company  title  totalyearlycompensation  yearsofexperience  \\\n61        Amazon   5525                     5525               5525   \n769    Microsoft   3641                     3641               3641   \n523       Google   2978                     2978               2978   \n432     Facebook   2118                     2118               2118   \n91         Apple   1384                     1384               1384   \n865       Oracle    802                      802                802   \n1004  Salesforce    695                      695                695   \n610        Intel    693                      693                693   \n578          IBM    676                      676                676   \n260        Cisco    645                      645                645   \n\n      yearsatcompany  basesalary  stockgrantvalue  bonus  gender  \\\n61              5525        5525             5525   5525    5525   \n769             3641        3641             3641   3641    3641   \n523             2978        2978             2978   2978    2978   \n432             2118        2118             2118   2118    2118   \n91              1384        1384             1384   1384    1384   \n865              802         802              802    802     802   \n1004             695         695              695    695     695   \n610              693         693              693    693     693   \n578              676         676              676    676     676   \n260              645         645              645    645     645   \n\n      Masters_Degree  ...  Highschool  Some_College  Race_Asian  Race_White  \\\n61              5525  ...        5525          5525        5525        5525   \n769             3641  ...        3641          3641        3641        3641   \n523             2978  ...        2978          2978        2978        2978   \n432             2118  ...        2118          2118        2118        2118   \n91              1384  ...        1384          1384        1384        1384   \n865              802  ...         802           802         802         802   \n1004             695  ...         695           695         695         695   \n610              693  ...         693           693         693         693   \n578              676  ...         676           676         676         676   \n260              645  ...         645           645         645         645   \n\n      Race_Two_Or_More  Race_Black  Race_Hispanic  state  education  in_top_15  \n61                5525        5525           5525   5525       5525       5525  \n769               3641        3641           3641   3641       3641       3641  \n523               2978        2978           2978   2978       2978       2978  \n432               2118        2118           2118   2118       2118       2118  \n91                1384        1384           1384   1384       1384       1384  \n865                802         802            802    802        802        802  \n1004               695         695            695    695        695        695  \n610                693         693            693    693        693        693  \n578                676         676            676    676        676        676  \n260                645         645            645    645        645        645  \n\n[10 rows x 22 columns]"},"exec_count":123}},"pos":24,"start":1658525143320,"state":"done","type":"cell"}
{"cell_type":"code","end":1658525143481,"exec_count":124,"id":"f29a13","input":"df = df[df['basesalary'] != 0]\n","kernel":"ds_env","pos":25,"scrolled":true,"start":1658525143474,"state":"done","type":"cell"}
{"cell_type":"code","end":1658525477366,"exec_count":135,"id":"82a8dd","input":"df.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>...</th>\n      <th>Highschool</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>state</th>\n      <th>education</th>\n      <th>in_top_15</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Capital One</td>\n      <td>Data Scientist</td>\n      <td>125000</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>121000.0</td>\n      <td>0.0</td>\n      <td>4000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Other</td>\n      <td>PHD</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Bloomberg</td>\n      <td>Software Engineer</td>\n      <td>170000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>142000.0</td>\n      <td>0.0</td>\n      <td>18000.0</td>\n      <td>Male</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NY</td>\n      <td>Masters</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Amazon</td>\n      <td>Data Scientist</td>\n      <td>332000</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>185000.0</td>\n      <td>17000.0</td>\n      <td>130000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>PHD</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Apple</td>\n      <td>Software Engineer</td>\n      <td>240000</td>\n      <td>3.0</td>\n      <td>3.0</td>\n      <td>150000.0</td>\n      <td>75000.0</td>\n      <td>15000.0</td>\n      <td>Female</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>PHD</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Synopsys</td>\n      <td>Software Engineer</td>\n      <td>310000</td>\n      <td>25.0</td>\n      <td>9.0</td>\n      <td>210000.0</td>\n      <td>40000.0</td>\n      <td>60000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>PHD</td>\n      <td>False</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 22 columns</p>\n</div>","text/plain":"       company              title  totalyearlycompensation  yearsofexperience  \\\n0  Capital One     Data Scientist                   125000                1.0   \n1    Bloomberg  Software Engineer                   170000                0.0   \n2       Amazon     Data Scientist                   332000                1.0   \n3        Apple  Software Engineer                   240000                3.0   \n4     Synopsys  Software Engineer                   310000               25.0   \n\n   yearsatcompany  basesalary  stockgrantvalue     bonus  gender  \\\n0             0.0    121000.0              0.0    4000.0    Male   \n1             0.0    142000.0              0.0   18000.0    Male   \n2             0.0    185000.0          17000.0  130000.0    Male   \n3             3.0    150000.0          75000.0   15000.0  Female   \n4             9.0    210000.0          40000.0   60000.0    Male   \n\n   Masters_Degree  ...  Highschool  Some_College  Race_Asian  Race_White  \\\n0               0  ...           0             0           0           0   \n1               1  ...           0             0           0           0   \n2               0  ...           0             0           0           0   \n3               0  ...           0             0           0           0   \n4               0  ...           0             0           0           0   \n\n   Race_Two_Or_More  Race_Black  Race_Hispanic  state  education in_top_15  \n0                 0           0              0  Other        PHD      True  \n1                 0           0              0     NY    Masters     False  \n2                 0           0              0     CA        PHD      True  \n3                 0           0              0     CA        PHD      True  \n4                 0           0              0     CA        PHD     False  \n\n[5 rows x 22 columns]"},"exec_count":135}},"pos":14,"start":1658525477317,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":132,"id":"12c93f","input":"df = df.drop(['Race','otherdetails','tag','level', 'Education','dmaid', 'cityid','rowNumber', 'timestamp'], axis = 1)\\\n","kernel":"ds_env","output":{"0":{"ename":"SyntaxError","evalue":"invalid syntax (2430532711.py, line 2)","traceback":["\u001b[0;36m  Input \u001b[0;32mIn [132]\u001b[0;36m\u001b[0m\n\u001b[0;31m    df = df[df['Race'] != 'Missing']\u001b[0m\n\u001b[0m    ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}},"pos":8,"state":"done","type":"cell"}
{"cell_type":"code","id":"b1dd5b","input":"","pos":7,"type":"cell"}
{"cell_type":"markdown","id":"b7ff6e","input":"Our dataset is from: [https://www.kaggle.com/datasets/jackogozaly/data\\-science\\-and\\-stem\\-salaries?datasetId=1640011&sortBy=voteCount](https://www.kaggle.com/datasets/jackogozaly/data-science-and-stem-salaries?datasetId=1640011&sortBy=voteCount)\n","pos":1,"type":"cell"}
{"end":1658525139693,"exec_count":110,"id":"b11f7e","input":"df['education'] = df.apply(lambda x: check_education(x.Masters_Degree, x.Bachelors_Degree, x.Doctorate_Degree, x.Highschool, x.Some_College), axis=1)","kernel":"ds_env","pos":13.5,"start":1658525137964,"state":"done","type":"cell"}
{"end":1658525139778,"exec_count":113,"id":"a2a072","input":"def check_education(master, bach, doc, high, some):\n    if master == 1:\n        return \"Masters\"\n    elif bach == 1:\n        return \"Bachelors\"\n    elif doc == 1:\n        return \"PHD\"\n    elif high == 1:\n        return 'Highschool'\n    elif some == 1:\n        return \"Some\"\n    else:\n        return \"Missing\"\n","kernel":"ds_env","pos":15.5,"start":1658525139771,"state":"done","type":"cell"}
{"end":1658525141499,"exec_count":114,"id":"f09d15","input":"df['education'] = df.apply(lambda x: check_education(x.Masters_Degree, x.Bachelors_Degree, x.Doctorate_Degree, x.Highschool, x.Some_College), axis=1)","kernel":"ds_env","pos":15.75,"start":1658525139788,"state":"done","type":"cell"}
{"end":1658525220133,"exec_count":126,"id":"03fdad","input":"df.drop(['missing'], inplace = True)","kernel":"ds_env","output":{"0":{"ename":"KeyError","evalue":"\"['missing'] not found in axis\"","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","Input \u001b[0;32mIn [126]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0m \u001b[43mdf\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mdrop\u001b[49m\u001b[43m(\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mmissing\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43minplace\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mTrue\u001b[39;49;00m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/util/_decorators.py:311\u001b[0m, in \u001b[0;36mdeprecate_nonkeyword_arguments.<locals>.decorate.<locals>.wrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    305\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mlen\u001b[39m(args) \u001b[38;5;241m>\u001b[39m num_allow_args:\n\u001b[1;32m    306\u001b[0m     warnings\u001b[38;5;241m.\u001b[39mwarn(\n\u001b[1;32m    307\u001b[0m         msg\u001b[38;5;241m.\u001b[39mformat(arguments\u001b[38;5;241m=\u001b[39marguments),\n\u001b[1;32m    308\u001b[0m         \u001b[38;5;167;01mFutureWarning\u001b[39;00m,\n\u001b[1;32m    309\u001b[0m         stacklevel\u001b[38;5;241m=\u001b[39mstacklevel,\n\u001b[1;32m    310\u001b[0m     )\n\u001b[0;32m--> 311\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mfunc\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/frame.py:4954\u001b[0m, in \u001b[0;36mDataFrame.drop\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[1;32m   4806\u001b[0m \u001b[38;5;129m@deprecate_nonkeyword_arguments\u001b[39m(version\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, allowed_args\u001b[38;5;241m=\u001b[39m[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mself\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mlabels\u001b[39m\u001b[38;5;124m\"\u001b[39m])\n\u001b[1;32m   4807\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mdrop\u001b[39m(\n\u001b[1;32m   4808\u001b[0m     \u001b[38;5;28mself\u001b[39m,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   4815\u001b[0m     errors: \u001b[38;5;28mstr\u001b[39m \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mraise\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[1;32m   4816\u001b[0m ):\n\u001b[1;32m   4817\u001b[0m     \u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[1;32m   4818\u001b[0m \u001b[38;5;124;03m    Drop specified labels from rows or columns.\u001b[39;00m\n\u001b[1;32m   4819\u001b[0m \n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   4952\u001b[0m \u001b[38;5;124;03m            weight  1.0     0.8\u001b[39;00m\n\u001b[1;32m   4953\u001b[0m \u001b[38;5;124;03m    \"\"\"\u001b[39;00m\n\u001b[0;32m-> 4954\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43msuper\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mdrop\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m   4955\u001b[0m \u001b[43m        \u001b[49m\u001b[43mlabels\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlabels\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   4956\u001b[0m \u001b[43m        \u001b[49m\u001b[43maxis\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43maxis\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   4957\u001b[0m \u001b[43m        \u001b[49m\u001b[43mindex\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mindex\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   4958\u001b[0m \u001b[43m        \u001b[49m\u001b[43mcolumns\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcolumns\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   4959\u001b[0m \u001b[43m        \u001b[49m\u001b[43mlevel\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlevel\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   4960\u001b[0m \u001b[43m        \u001b[49m\u001b[43minplace\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43minplace\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   4961\u001b[0m \u001b[43m        \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43merrors\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   4962\u001b[0m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/generic.py:4267\u001b[0m, in \u001b[0;36mNDFrame.drop\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[1;32m   4265\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m axis, labels \u001b[38;5;129;01min\u001b[39;00m axes\u001b[38;5;241m.\u001b[39mitems():\n\u001b[1;32m   4266\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m labels \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m-> 4267\u001b[0m         obj \u001b[38;5;241m=\u001b[39m \u001b[43mobj\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_drop_axis\u001b[49m\u001b[43m(\u001b[49m\u001b[43mlabels\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43maxis\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlevel\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlevel\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43merrors\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   4269\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m inplace:\n\u001b[1;32m   4270\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_update_inplace(obj)\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/generic.py:4311\u001b[0m, in \u001b[0;36mNDFrame._drop_axis\u001b[0;34m(self, labels, axis, level, errors, consolidate, only_slice)\u001b[0m\n\u001b[1;32m   4309\u001b[0m         new_axis \u001b[38;5;241m=\u001b[39m axis\u001b[38;5;241m.\u001b[39mdrop(labels, level\u001b[38;5;241m=\u001b[39mlevel, errors\u001b[38;5;241m=\u001b[39merrors)\n\u001b[1;32m   4310\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m-> 4311\u001b[0m         new_axis \u001b[38;5;241m=\u001b[39m \u001b[43maxis\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mdrop\u001b[49m\u001b[43m(\u001b[49m\u001b[43mlabels\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43merrors\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   4312\u001b[0m     indexer \u001b[38;5;241m=\u001b[39m axis\u001b[38;5;241m.\u001b[39mget_indexer(new_axis)\n\u001b[1;32m   4314\u001b[0m \u001b[38;5;66;03m# Case for non-unique axis\u001b[39;00m\n\u001b[1;32m   4315\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/indexes/base.py:6644\u001b[0m, in \u001b[0;36mIndex.drop\u001b[0;34m(self, labels, errors)\u001b[0m\n\u001b[1;32m   6642\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m mask\u001b[38;5;241m.\u001b[39many():\n\u001b[1;32m   6643\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m errors \u001b[38;5;241m!=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mignore\u001b[39m\u001b[38;5;124m\"\u001b[39m:\n\u001b[0;32m-> 6644\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;132;01m{\u001b[39;00m\u001b[38;5;28mlist\u001b[39m(labels[mask])\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m not found in axis\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m   6645\u001b[0m     indexer \u001b[38;5;241m=\u001b[39m indexer[\u001b[38;5;241m~\u001b[39mmask]\n\u001b[1;32m   6646\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mdelete(indexer)\n","\u001b[0;31mKeyError\u001b[0m: \"['missing'] not found in axis\""]}},"pos":15.875,"start":1658525220047,"state":"done","type":"cell"}
{"end":1658525466761,"exec_count":134,"id":"e3b816","input":"df = df[df['education'] != 'Missing']\ndf.reset_index(drop=True, inplace=True)\n","kernel":"ds_env","pos":13.75,"start":1658525466755,"state":"done","type":"cell"}
{"exec_count":86,"id":"db4945","input":"","kernel":"ds_env","pos":27,"state":"done","type":"cell"}
{"exec_count":88,"id":"f7b0b3","input":"","kernel":"ds_env","output":{"0":{"data":{"text/plain":"0        Missing\n1        Missing\n2        Missing\n3        Missing\n4        Missing\n          ...   \n43093    Missing\n43094    Missing\n43095    Missing\n43096    Missing\n43097    Missing\nName: education, Length: 42109, dtype: object"},"exec_count":88}},"pos":29,"state":"done","type":"cell"}
{"exec_count":95,"id":"a482bf","input":"","kernel":"ds_env","output":{"0":{"name":"stderr","text":"/tmp/ipykernel_4620/2266295848.py:1: SettingWithCopyWarning:\n\n\nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n\n"}},"pos":28,"scrolled":true,"state":"done","type":"cell"}
{"id":"10542c","input":"","pos":28.5,"type":"cell"}
{"id":"15e373","input":"","pos":13.875,"type":"cell"}
{"id":"1e2cc4","input":"","pos":3.5,"type":"cell"}
{"id":"49f9cd","input":"","pos":30,"type":"cell"}
{"id":0,"time":1658520792469,"type":"user"}
{"last_load":1658509560044,"type":"file"}