{"backend_state":"init","connection_file":"/projects/0bcf82e6-7441-4432-a339-19b67c22cc5c/.local/share/jupyter/runtime/kernel-493c06eb-877e-4563-bd8c-005f18ac5e2c.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"03fdad","input":"","pos":24,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"0c8970","input":"","pos":33,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"10542c","input":"","pos":38,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"15e373","input":"","pos":19,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"1e2cc4","input":"","pos":4,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"364c4b","input":"","pos":68,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"662be6","input":"np.array(y_test) #these are what actually happened for our x_test inputs.","pos":62,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"75564b","input":"","pos":9,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"83863c","input":"","pos":10,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"91f7ab","input":"","pos":66,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"a482bf","input":"","pos":37,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"a8e8d7","input":"","pos":54,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"b11f7e","input":"","pos":17,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"b1dd5b","input":"","pos":8,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"c0f5d9","input":"","pos":67,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"cd4c49","input":"","pos":65,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"db4945","input":"","pos":36,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"e3b816","input":"","pos":18,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"f74baa","input":"","pos":64,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"f7b0b3","input":"","pos":39,"type":"cell"}
{"cell_type":"code","exec_count":10,"id":"c81fca","input":"df.value_counts('Highschool')\n","output":{"0":{"data":{"text/plain":"Highschool\n0    21221\n1      300\ndtype: int64"},"exec_count":10,"output_type":"execute_result"}},"pos":14,"type":"cell"}
{"cell_type":"code","exec_count":11,"id":"4bf6cd","input":"def get_state(x):\n    words = x.split(', ')\n    state = words[1]\n    if state == 'CA':\n        return 'CA'\n    elif state == 'WA':\n        return 'WA'\n    elif state == 'NY':\n        return 'NY'\n    else:\n        return 'Other'","pos":15,"type":"cell"}
{"cell_type":"code","exec_count":12,"id":"bfa769","input":"df['state'] = df['location'].apply(get_state)\ndf.drop(['location'], axis = 1, inplace = True)","pos":16,"type":"cell"}
{"cell_type":"code","exec_count":13,"id":"82a8dd","input":"df.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>timestamp</th>\n      <th>company</th>\n      <th>level</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>tag</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>...</th>\n      <th>Highschool</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>Race</th>\n      <th>Education</th>\n      <th>state</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1/27/2020 22:59:06</td>\n      <td>Google</td>\n      <td>L6</td>\n      <td>Software Engineer</td>\n      <td>400000</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>Distributed Systems (Back-End)</td>\n      <td>210000.0</td>\n      <td>145000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Asian</td>\n      <td>PhD</td>\n      <td>CA</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>7/3/2020 19:56:38</td>\n      <td>Microsoft</td>\n      <td>61</td>\n      <td>Software Engineer</td>\n      <td>136000</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>DevOps</td>\n      <td>124000.0</td>\n      <td>1000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Two Or More</td>\n      <td>Bachelor's Degree</td>\n      <td>WA</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>7/3/2020 20:03:57</td>\n      <td>Google</td>\n      <td>L5</td>\n      <td>Software Engineer</td>\n      <td>337000</td>\n      <td>6.0</td>\n      <td>6.0</td>\n      <td>Full Stack</td>\n      <td>177000.0</td>\n      <td>125000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Asian</td>\n      <td>Bachelor's Degree</td>\n      <td>CA</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>7/3/2020 20:05:37</td>\n      <td>Microsoft</td>\n      <td>62</td>\n      <td>Software Engineer</td>\n      <td>222000</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>API Development (Back-End)</td>\n      <td>164000.0</td>\n      <td>38000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Asian</td>\n      <td>Master's Degree</td>\n      <td>WA</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>7/3/2020 20:19:06</td>\n      <td>Blend</td>\n      <td>IC3</td>\n      <td>Software Engineer</td>\n      <td>187000</td>\n      <td>5.0</td>\n      <td>0.0</td>\n      <td>Full Stack</td>\n      <td>165000.0</td>\n      <td>22000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>White</td>\n      <td>Bachelor's Degree</td>\n      <td>CA</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 29 columns</p>\n</div>","text/plain":"            timestamp    company level              title  \\\n0  1/27/2020 22:59:06     Google    L6  Software Engineer   \n1   7/3/2020 19:56:38  Microsoft    61  Software Engineer   \n2   7/3/2020 20:03:57     Google    L5  Software Engineer   \n3   7/3/2020 20:05:37  Microsoft    62  Software Engineer   \n4   7/3/2020 20:19:06      Blend   IC3  Software Engineer   \n\n   totalyearlycompensation  yearsofexperience  yearsatcompany  \\\n0                   400000                5.0             5.0   \n1                   136000                3.0             2.0   \n2                   337000                6.0             6.0   \n3                   222000                4.0             4.0   \n4                   187000                5.0             0.0   \n\n                              tag  basesalary  stockgrantvalue  ...  \\\n0  Distributed Systems (Back-End)    210000.0         145000.0  ...   \n1                          DevOps    124000.0           1000.0  ...   \n2                      Full Stack    177000.0         125000.0  ...   \n3      API Development (Back-End)    164000.0          38000.0  ...   \n4                      Full Stack    165000.0          22000.0  ...   \n\n   Highschool Some_College Race_Asian  Race_White  Race_Two_Or_More  \\\n0           0            0          1           0                 0   \n1           0            0          0           0                 1   \n2           0            0          1           0                 0   \n3           0            0          1           0                 0   \n4           0            0          0           1                 0   \n\n   Race_Black  Race_Hispanic         Race          Education  state  \n0           0              0        Asian                PhD     CA  \n1           0              0  Two Or More  Bachelor's Degree     WA  \n2           0              0        Asian  Bachelor's Degree     CA  \n3           0              0        Asian    Master's Degree     WA  \n4           0              0        White  Bachelor's Degree     CA  \n\n[5 rows x 29 columns]"},"exec_count":13,"output_type":"execute_result"}},"pos":20,"type":"cell"}
{"cell_type":"code","exec_count":14,"id":"d7380a","input":"top_15_popular = list(df['company'].value_counts().index)[:15]\ndef in_popular(x):\n    if x in top_15_popular:\n        return True\n    else:\n        return False\n    \ndf['in_top_15'] = df['company'].apply(in_popular)","pos":21,"type":"cell"}
{"cell_type":"code","exec_count":15,"id":"a2a072","input":"def check_education(master, bach, doc, high, some):\n    if master == 1:\n        return \"Masters\"\n    elif bach == 1:\n        return \"Bachelors\"\n    elif doc == 1:\n        return \"PHD\"\n    elif high == 1:\n        return 'Highschool'\n    elif some == 1:\n        return \"Some\"\n    else:\n        return \"Missing\"\n","pos":22,"type":"cell"}
{"cell_type":"code","exec_count":16,"id":"f09d15","input":"df['education'] = df.apply(lambda x: check_education(x.Masters_Degree, x.Bachelors_Degree, x.Doctorate_Degree, x.Highschool, x.Some_College), axis=1)","pos":23,"type":"cell"}
{"cell_type":"code","exec_count":17,"id":"fd1dff","input":"df.head","output":{"0":{"data":{"text/plain":"<bound method NDFrame.head of                 timestamp    company level                         title  \\\n0      1/27/2020 22:59:06     Google    L6             Software Engineer   \n1       7/3/2020 19:56:38  Microsoft    61             Software Engineer   \n2       7/3/2020 20:03:57     Google    L5             Software Engineer   \n3       7/3/2020 20:05:37  Microsoft    62             Software Engineer   \n4       7/3/2020 20:19:06      Blend   IC3             Software Engineer   \n...                   ...        ...   ...                           ...   \n21516  2/15/2021 19:50:36   Facebook    M2  Software Engineering Manager   \n21517   3/9/2021 17:03:07     Google   L10               Product Manager   \n21518  3/25/2021 10:45:03     Zapier    L8  Software Engineering Manager   \n21519  5/18/2021 15:34:21   Facebook    D1  Software Engineering Manager   \n21520  7/30/2021 22:23:24   Facebook    E9               Product Manager   \n\n       totalyearlycompensation  yearsofexperience  yearsatcompany  \\\n0                       400000                5.0             5.0   \n1                       136000                3.0             2.0   \n2                       337000                6.0             6.0   \n3                       222000                4.0             4.0   \n4                       187000                5.0             0.0   \n...                        ...                ...             ...   \n21516                  1470000                9.0             7.0   \n21517                  4500000               20.0            14.0   \n21518                  1605000               16.0             2.0   \n21519                  2372000               22.0             2.0   \n21520                  4980000               17.0             0.0   \n\n                                  tag  basesalary  stockgrantvalue  ...  \\\n0      Distributed Systems (Back-End)    210000.0         145000.0  ...   \n1                              DevOps    124000.0           1000.0  ...   \n2                          Full Stack    177000.0         125000.0  ...   \n3          API Development (Back-End)    164000.0          38000.0  ...   \n4                          Full Stack    165000.0          22000.0  ...   \n...                               ...         ...              ...  ...   \n21516                      Full Stack    290000.0           1100.0  ...   \n21517                        Consumer    450000.0           3700.0  ...   \n21518                      Full Stack    250000.0           1305.0  ...   \n21519                         ML / AI    315000.0           1933.0  ...   \n21520                         Product    380000.0           4400.0  ...   \n\n       Race_Asian Race_White Race_Two_Or_More  Race_Black  Race_Hispanic  \\\n0               1          0                0           0              0   \n1               0          0                1           0              0   \n2               1          0                0           0              0   \n3               1          0                0           0              0   \n4               0          1                0           0              0   \n...           ...        ...              ...         ...            ...   \n21516           1          0                0           0              0   \n21517           1          0                0           0              0   \n21518           0          1                0           0              0   \n21519           0          0                0           1              0   \n21520           1          0                0           0              0   \n\n              Race          Education  state  in_top_15  education  \n0            Asian                PhD     CA       True        PHD  \n1      Two Or More  Bachelor's Degree     WA       True  Bachelors  \n2            Asian  Bachelor's Degree     CA       True  Bachelors  \n3            Asian    Master's Degree     WA       True    Masters  \n4            White  Bachelor's Degree     CA      False  Bachelors  \n...            ...                ...    ...        ...        ...  \n21516        Asian  Bachelor's Degree     CA       True  Bachelors  \n21517        Asian    Master's Degree     CA       True    Masters  \n21518        White    Master's Degree  Other      False    Masters  \n21519        Black    Master's Degree     CA       True    Masters  \n21520        Asian    Master's Degree     CA       True    Masters  \n\n[21521 rows x 31 columns]>"},"exec_count":17,"output_type":"execute_result"}},"pos":25,"type":"cell"}
{"cell_type":"code","exec_count":18,"id":"9bbf3c","input":"df.groupby(by='gender')['basesalary'].mean()","output":{"0":{"data":{"text/plain":"gender\nFemale    133432.565364\nMale      133934.951014\nOther     144970.588235\nName: basesalary, dtype: float64"},"exec_count":18,"output_type":"execute_result"}},"pos":26,"type":"cell"}
{"cell_type":"code","exec_count":19,"id":"394b16","input":"df.groupby('title')['yearsofexperience'].mean()","output":{"0":{"data":{"text/plain":"title\nBusiness Analyst                 5.901602\nData Scientist                   5.045819\nHardware Engineer                7.791293\nHuman Resources                 10.820359\nManagement Consultant            7.750557\nMarketing                        9.408964\nMechanical Engineer              5.916667\nProduct Designer                 7.573333\nProduct Manager                  8.934302\nRecruiter                        8.267606\nSales                            8.646789\nSoftware Engineer                5.979581\nSoftware Engineering Manager    14.243640\nSolution Architect              11.963325\nTechnical Program Manager       12.492891\nName: yearsofexperience, dtype: float64"},"exec_count":19,"output_type":"execute_result"}},"pos":27,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":2,"id":"2e9772","input":"df = pd.read_csv(\"Levels_Fyi_Salary_Data.csv\")","pos":2,"type":"cell"}
{"cell_type":"code","exec_count":20,"id":"a4fe2f","input":"import plotly.express as px\n","pos":28,"type":"cell"}
{"cell_type":"code","exec_count":21,"id":"dc5096","input":"plot2 = px.histogram(df, x = 'yearsatcompany', y = 'totalyearlycompensation', title = 'FUN', color = 'in_top_15')\nplot2.show()\n","output":{"0":{"data":{"iframe":"01ac6cab6c78f824d7fafb39ecab94b88911cfbe"},"exec_count":21,"output_type":"execute_result"}},"pos":29,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":22,"id":"e4a58e","input":"plot2 = px.pie(df,'gender', title = ' Other FUN', color = 'in_top_15')\nplot2.show()","output":{"0":{"data":{"iframe":"8859802cad151693c00692f87661f71a4bf81c88"},"exec_count":22,"output_type":"execute_result"}},"pos":30,"type":"cell"}
{"cell_type":"code","exec_count":23,"id":"e4d754","input":"plot8 = px.histogram(df, x = 'totalyearlycompensation', title = 'total yearly salary', color = 'in_top_15')\nplot8.show()","output":{"0":{"data":{"iframe":"1ab5c9c820ddf8ac27ac0910006d078e0b05fef7"},"exec_count":23,"output_type":"execute_result"}},"pos":31,"type":"cell"}
{"cell_type":"code","exec_count":24,"id":"64d531","input":"plot7 = px.pie(df, 'Masters_Degree')\nplot7.show()\n","output":{"0":{"data":{"iframe":"29b6f78d1267c51ac0f74485244aa1f26e44c07e"},"exec_count":24,"output_type":"execute_result"}},"pos":32,"type":"cell"}
{"cell_type":"code","exec_count":25,"id":"f29a13","input":"df = df[df['basesalary'] != 0]\n","pos":34,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":26,"id":"b7194b","input":"softeng = df[df['title'] == 'Software Engineer']\nplot12 = px.histogram(softeng, x='basesalary', title='Software Engineer Base Salary per State', color='state')\nplot12.show()\n","output":{"0":{"data":{"iframe":"c67b6462327f0a1504d3a4961bfde45127b21d29"},"exec_count":26,"output_type":"execute_result"}},"pos":35,"type":"cell"}
{"cell_type":"code","exec_count":28,"id":"9ea51a","input":"df.head","output":{"0":{"data":{"text/plain":"<bound method NDFrame.head of                 timestamp    company level                         title  \\\n0      1/27/2020 22:59:06     Google    L6             Software Engineer   \n1       7/3/2020 19:56:38  Microsoft    61             Software Engineer   \n2       7/3/2020 20:03:57     Google    L5             Software Engineer   \n3       7/3/2020 20:05:37  Microsoft    62             Software Engineer   \n4       7/3/2020 20:19:06      Blend   IC3             Software Engineer   \n...                   ...        ...   ...                           ...   \n21516  2/15/2021 19:50:36   Facebook    M2  Software Engineering Manager   \n21517   3/9/2021 17:03:07     Google   L10               Product Manager   \n21518  3/25/2021 10:45:03     Zapier    L8  Software Engineering Manager   \n21519  5/18/2021 15:34:21   Facebook    D1  Software Engineering Manager   \n21520  7/30/2021 22:23:24   Facebook    E9               Product Manager   \n\n       totalyearlycompensation  yearsofexperience  yearsatcompany  \\\n0                       400000                5.0             5.0   \n1                       136000                3.0             2.0   \n2                       337000                6.0             6.0   \n3                       222000                4.0             4.0   \n4                       187000                5.0             0.0   \n...                        ...                ...             ...   \n21516                  1470000                9.0             7.0   \n21517                  4500000               20.0            14.0   \n21518                  1605000               16.0             2.0   \n21519                  2372000               22.0             2.0   \n21520                  4980000               17.0             0.0   \n\n                                  tag  basesalary  stockgrantvalue  ...  \\\n0      Distributed Systems (Back-End)    210000.0         145000.0  ...   \n1                              DevOps    124000.0           1000.0  ...   \n2                          Full Stack    177000.0         125000.0  ...   \n3          API Development (Back-End)    164000.0          38000.0  ...   \n4                          Full Stack    165000.0          22000.0  ...   \n...                               ...         ...              ...  ...   \n21516                      Full Stack    290000.0           1100.0  ...   \n21517                        Consumer    450000.0           3700.0  ...   \n21518                      Full Stack    250000.0           1305.0  ...   \n21519                         ML / AI    315000.0           1933.0  ...   \n21520                         Product    380000.0           4400.0  ...   \n\n       Race_Asian Race_White Race_Two_Or_More  Race_Black  Race_Hispanic  \\\n0               1          0                0           0              0   \n1               0          0                1           0              0   \n2               1          0                0           0              0   \n3               1          0                0           0              0   \n4               0          1                0           0              0   \n...           ...        ...              ...         ...            ...   \n21516           1          0                0           0              0   \n21517           1          0                0           0              0   \n21518           0          1                0           0              0   \n21519           0          0                0           1              0   \n21520           1          0                0           0              0   \n\n              Race          Education  state  in_top_15  education  \n0            Asian                PhD     CA       True        PHD  \n1      Two Or More  Bachelor's Degree     WA       True  Bachelors  \n2            Asian  Bachelor's Degree     CA       True  Bachelors  \n3            Asian    Master's Degree     WA       True    Masters  \n4            White  Bachelor's Degree     CA      False  Bachelors  \n...            ...                ...    ...        ...        ...  \n21516        Asian  Bachelor's Degree     CA       True  Bachelors  \n21517        Asian    Master's Degree     CA       True    Masters  \n21518        White    Master's Degree  Other      False    Masters  \n21519        Black    Master's Degree     CA       True    Masters  \n21520        Asian    Master's Degree     CA       True    Masters  \n\n[21521 rows x 31 columns]>"},"exec_count":28,"output_type":"execute_result"}},"pos":42,"type":"cell"}
{"cell_type":"code","exec_count":29,"id":"b081b5","input":"print(df['gender'].unique())","output":{"0":{"name":"stdout","output_type":"stream","text":"['Male' 'Female' 'Other']\n"}},"pos":43,"type":"cell"}
{"cell_type":"code","exec_count":3,"id":"577a4a","input":"df.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>timestamp</th>\n      <th>company</th>\n      <th>level</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>location</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>tag</th>\n      <th>basesalary</th>\n      <th>...</th>\n      <th>Doctorate_Degree</th>\n      <th>Highschool</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>Race</th>\n      <th>Education</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>6/7/2017 11:33:27</td>\n      <td>Oracle</td>\n      <td>L3</td>\n      <td>Product Manager</td>\n      <td>127000</td>\n      <td>Redwood City, CA</td>\n      <td>1.5</td>\n      <td>1.5</td>\n      <td>NaN</td>\n      <td>107000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>6/10/2017 17:11:29</td>\n      <td>eBay</td>\n      <td>SE 2</td>\n      <td>Software Engineer</td>\n      <td>100000</td>\n      <td>San Francisco, CA</td>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>6/11/2017 14:53:57</td>\n      <td>Amazon</td>\n      <td>L7</td>\n      <td>Product Manager</td>\n      <td>310000</td>\n      <td>Seattle, WA</td>\n      <td>8.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>155000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>6/17/2017 0:23:14</td>\n      <td>Apple</td>\n      <td>M1</td>\n      <td>Software Engineering Manager</td>\n      <td>372000</td>\n      <td>Sunnyvale, CA</td>\n      <td>7.0</td>\n      <td>5.0</td>\n      <td>NaN</td>\n      <td>157000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>6/20/2017 10:58:51</td>\n      <td>Microsoft</td>\n      <td>60</td>\n      <td>Software Engineer</td>\n      <td>157000</td>\n      <td>Mountain View, CA</td>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 29 columns</p>\n</div>","text/plain":"            timestamp    company level                         title  \\\n0   6/7/2017 11:33:27     Oracle    L3               Product Manager   \n1  6/10/2017 17:11:29       eBay  SE 2             Software Engineer   \n2  6/11/2017 14:53:57     Amazon    L7               Product Manager   \n3   6/17/2017 0:23:14      Apple    M1  Software Engineering Manager   \n4  6/20/2017 10:58:51  Microsoft    60             Software Engineer   \n\n   totalyearlycompensation           location  yearsofexperience  \\\n0                   127000   Redwood City, CA                1.5   \n1                   100000  San Francisco, CA                5.0   \n2                   310000        Seattle, WA                8.0   \n3                   372000      Sunnyvale, CA                7.0   \n4                   157000  Mountain View, CA                5.0   \n\n   yearsatcompany  tag  basesalary  ...  Doctorate_Degree  Highschool  \\\n0             1.5  NaN    107000.0  ...                 0           0   \n1             3.0  NaN         0.0  ...                 0           0   \n2             0.0  NaN    155000.0  ...                 0           0   \n3             5.0  NaN    157000.0  ...                 0           0   \n4             3.0  NaN         0.0  ...                 0           0   \n\n  Some_College Race_Asian  Race_White  Race_Two_Or_More  Race_Black  \\\n0            0          0           0                 0           0   \n1            0          0           0                 0           0   \n2            0          0           0                 0           0   \n3            0          0           0                 0           0   \n4            0          0           0                 0           0   \n\n   Race_Hispanic  Race  Education  \n0              0   NaN        NaN  \n1              0   NaN        NaN  \n2              0   NaN        NaN  \n3              0   NaN        NaN  \n4              0   NaN        NaN  \n\n[5 rows x 29 columns]"},"exec_count":3,"output_type":"execute_result"}},"pos":3,"type":"cell"}
{"cell_type":"code","exec_count":30,"id":"85016d","input":"df['gender'].value_counts()","output":{"0":{"data":{"text/plain":"Male      17556\nFemale     3863\nOther       102\nName: gender, dtype: int64"},"exec_count":30,"output_type":"execute_result"}},"pos":44,"type":"cell"}
{"cell_type":"code","exec_count":31,"id":"10570d","input":"one_hot_encoded_df = pd.get_dummies(df, columns = ['gender'])\nprint(one_hot_encoded_df)","output":{"0":{"name":"stdout","output_type":"stream","text":"                timestamp    company level                         title  \\\n0      1/27/2020 22:59:06     Google    L6             Software Engineer   \n1       7/3/2020 19:56:38  Microsoft    61             Software Engineer   \n2       7/3/2020 20:03:57     Google    L5             Software Engineer   \n3       7/3/2020 20:05:37  Microsoft    62             Software Engineer   \n4       7/3/2020 20:19:06      Blend   IC3             Software Engineer   \n...                   ...        ...   ...                           ...   \n21516  2/15/2021 19:50:36   Facebook    M2  Software Engineering Manager   \n21517   3/9/2021 17:03:07     Google   L10               Product Manager   \n21518  3/25/2021 10:45:03     Zapier    L8  Software Engineering Manager   \n21519  5/18/2021 15:34:21   Facebook    D1  Software Engineering Manager   \n21520  7/30/2021 22:23:24   Facebook    E9               Product Manager   \n\n       totalyearlycompensation  yearsofexperience  yearsatcompany  \\\n0                       400000                5.0             5.0   \n1                       136000                3.0             2.0   \n2                       337000                6.0             6.0   \n3                       222000                4.0             4.0   \n4                       187000                5.0             0.0   \n...                        ...                ...             ...   \n21516                  1470000                9.0             7.0   \n21517                  4500000               20.0            14.0   \n21518                  1605000               16.0             2.0   \n21519                  2372000               22.0             2.0   \n21520                  4980000               17.0             0.0   \n\n                                  tag  basesalary  stockgrantvalue  ...  \\\n0      Distributed Systems (Back-End)    210000.0         145000.0  ...   \n1                              DevOps    124000.0           1000.0  ...   \n2                          Full Stack    177000.0         125000.0  ...   \n3          API Development (Back-End)    164000.0          38000.0  ...   \n4                          Full Stack    165000.0          22000.0  ...   \n...                               ...         ...              ...  ...   \n21516                      Full Stack    290000.0           1100.0  ...   \n21517                        Consumer    450000.0           3700.0  ...   \n21518                      Full Stack    250000.0           1305.0  ...   \n21519                         ML / AI    315000.0           1933.0  ...   \n21520                         Product    380000.0           4400.0  ...   \n\n       Race_Black Race_Hispanic         Race          Education  state  \\\n0               0             0        Asian                PhD     CA   \n1               0             0  Two Or More  Bachelor's Degree     WA   \n2               0             0        Asian  Bachelor's Degree     CA   \n3               0             0        Asian    Master's Degree     WA   \n4               0             0        White  Bachelor's Degree     CA   \n...           ...           ...          ...                ...    ...   \n21516           0             0        Asian  Bachelor's Degree     CA   \n21517           0             0        Asian    Master's Degree     CA   \n21518           0             0        White    Master's Degree  Other   \n21519           1             0        Black    Master's Degree     CA   \n21520           0             0        Asian    Master's Degree     CA   \n\n       in_top_15  education  gender_Female  gender_Male  gender_Other  \n0           True        PHD              0            1             0  \n1           True  Bachelors              0            1             0  \n2           True  Bachelors              0            1             0  \n3           True    Masters              0            1             0  \n4          False  Bachelors              0            1             0  \n...          ...        ...            ...          ...           ...  \n21516       True  Bachelors              0            1             0  \n21517       True    Masters              0            1             0  \n21518      False    Masters              1            0             0  \n21519       True    Masters              0            1             0  \n21520       True    Masters              0            1             0  \n\n[21521 rows x 33 columns]\n"}},"pos":45,"type":"cell"}
{"cell_type":"code","exec_count":32,"id":"6fddac","input":"df['Female_gender'] = one_hot_encoded_df['gender_Female']\ndf['Male_gender'] = one_hot_encoded_df['gender_Male']\ndf['Other_Gender'] = one_hot_encoded_df['gender_Other']\ndf.head()\n","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>timestamp</th>\n      <th>company</th>\n      <th>level</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>tag</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>...</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>Race</th>\n      <th>Education</th>\n      <th>state</th>\n      <th>in_top_15</th>\n      <th>education</th>\n      <th>Female_gender</th>\n      <th>Male_gender</th>\n      <th>Other_Gender</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1/27/2020 22:59:06</td>\n      <td>Google</td>\n      <td>L6</td>\n      <td>Software Engineer</td>\n      <td>400000</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>Distributed Systems (Back-End)</td>\n      <td>210000.0</td>\n      <td>145000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Asian</td>\n      <td>PhD</td>\n      <td>CA</td>\n      <td>True</td>\n      <td>PHD</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>7/3/2020 19:56:38</td>\n      <td>Microsoft</td>\n      <td>61</td>\n      <td>Software Engineer</td>\n      <td>136000</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>DevOps</td>\n      <td>124000.0</td>\n      <td>1000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Two Or More</td>\n      <td>Bachelor's Degree</td>\n      <td>WA</td>\n      <td>True</td>\n      <td>Bachelors</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>7/3/2020 20:03:57</td>\n      <td>Google</td>\n      <td>L5</td>\n      <td>Software Engineer</td>\n      <td>337000</td>\n      <td>6.0</td>\n      <td>6.0</td>\n      <td>Full Stack</td>\n      <td>177000.0</td>\n      <td>125000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Asian</td>\n      <td>Bachelor's Degree</td>\n      <td>CA</td>\n      <td>True</td>\n      <td>Bachelors</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>7/3/2020 20:05:37</td>\n      <td>Microsoft</td>\n      <td>62</td>\n      <td>Software Engineer</td>\n      <td>222000</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>API Development (Back-End)</td>\n      <td>164000.0</td>\n      <td>38000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Asian</td>\n      <td>Master's Degree</td>\n      <td>WA</td>\n      <td>True</td>\n      <td>Masters</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>7/3/2020 20:19:06</td>\n      <td>Blend</td>\n      <td>IC3</td>\n      <td>Software Engineer</td>\n      <td>187000</td>\n      <td>5.0</td>\n      <td>0.0</td>\n      <td>Full Stack</td>\n      <td>165000.0</td>\n      <td>22000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>White</td>\n      <td>Bachelor's Degree</td>\n      <td>CA</td>\n      <td>False</td>\n      <td>Bachelors</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 34 columns</p>\n</div>","text/plain":"            timestamp    company level              title  \\\n0  1/27/2020 22:59:06     Google    L6  Software Engineer   \n1   7/3/2020 19:56:38  Microsoft    61  Software Engineer   \n2   7/3/2020 20:03:57     Google    L5  Software Engineer   \n3   7/3/2020 20:05:37  Microsoft    62  Software Engineer   \n4   7/3/2020 20:19:06      Blend   IC3  Software Engineer   \n\n   totalyearlycompensation  yearsofexperience  yearsatcompany  \\\n0                   400000                5.0             5.0   \n1                   136000                3.0             2.0   \n2                   337000                6.0             6.0   \n3                   222000                4.0             4.0   \n4                   187000                5.0             0.0   \n\n                              tag  basesalary  stockgrantvalue  ...  \\\n0  Distributed Systems (Back-End)    210000.0         145000.0  ...   \n1                          DevOps    124000.0           1000.0  ...   \n2                      Full Stack    177000.0         125000.0  ...   \n3      API Development (Back-End)    164000.0          38000.0  ...   \n4                      Full Stack    165000.0          22000.0  ...   \n\n   Race_Black Race_Hispanic         Race          Education  state  in_top_15  \\\n0           0             0        Asian                PhD     CA       True   \n1           0             0  Two Or More  Bachelor's Degree     WA       True   \n2           0             0        Asian  Bachelor's Degree     CA       True   \n3           0             0        Asian    Master's Degree     WA       True   \n4           0             0        White  Bachelor's Degree     CA      False   \n\n   education  Female_gender  Male_gender  Other_Gender  \n0        PHD              0            1             0  \n1  Bachelors              0            1             0  \n2  Bachelors              0            1             0  \n3    Masters              0            1             0  \n4  Bachelors              0            1             0  \n\n[5 rows x 34 columns]"},"exec_count":32,"output_type":"execute_result"}},"pos":46,"type":"cell"}
{"cell_type":"code","exec_count":33,"id":"0234e1","input":"print(df['state'].unique())\n","output":{"0":{"name":"stdout","output_type":"stream","text":"['CA' 'WA' 'Other' 'NY']\n"}},"pos":47,"type":"cell"}
{"cell_type":"code","exec_count":34,"id":"da2e1d","input":"df['state'].value_counts()\n","output":{"0":{"data":{"text/plain":"Other    9802\nCA       6511\nWA       3544\nNY       1664\nName: state, dtype: int64"},"exec_count":34,"output_type":"execute_result"}},"pos":48,"type":"cell"}
{"cell_type":"code","exec_count":35,"id":"87c147","input":"one_hot_encoded_df = pd.get_dummies(df, columns = ['state'])\nprint(one_hot_encoded_df)","output":{"0":{"name":"stdout","output_type":"stream","text":"                timestamp    company level                         title  \\\n0      1/27/2020 22:59:06     Google    L6             Software Engineer   \n1       7/3/2020 19:56:38  Microsoft    61             Software Engineer   \n2       7/3/2020 20:03:57     Google    L5             Software Engineer   \n3       7/3/2020 20:05:37  Microsoft    62             Software Engineer   \n4       7/3/2020 20:19:06      Blend   IC3             Software Engineer   \n...                   ...        ...   ...                           ...   \n21516  2/15/2021 19:50:36   Facebook    M2  Software Engineering Manager   \n21517   3/9/2021 17:03:07     Google   L10               Product Manager   \n21518  3/25/2021 10:45:03     Zapier    L8  Software Engineering Manager   \n21519  5/18/2021 15:34:21   Facebook    D1  Software Engineering Manager   \n21520  7/30/2021 22:23:24   Facebook    E9               Product Manager   \n\n       totalyearlycompensation  yearsofexperience  yearsatcompany  \\\n0                       400000                5.0             5.0   \n1                       136000                3.0             2.0   \n2                       337000                6.0             6.0   \n3                       222000                4.0             4.0   \n4                       187000                5.0             0.0   \n...                        ...                ...             ...   \n21516                  1470000                9.0             7.0   \n21517                  4500000               20.0            14.0   \n21518                  1605000               16.0             2.0   \n21519                  2372000               22.0             2.0   \n21520                  4980000               17.0             0.0   \n\n                                  tag  basesalary  stockgrantvalue  ...  \\\n0      Distributed Systems (Back-End)    210000.0         145000.0  ...   \n1                              DevOps    124000.0           1000.0  ...   \n2                          Full Stack    177000.0         125000.0  ...   \n3          API Development (Back-End)    164000.0          38000.0  ...   \n4                          Full Stack    165000.0          22000.0  ...   \n...                               ...         ...              ...  ...   \n21516                      Full Stack    290000.0           1100.0  ...   \n21517                        Consumer    450000.0           3700.0  ...   \n21518                      Full Stack    250000.0           1305.0  ...   \n21519                         ML / AI    315000.0           1933.0  ...   \n21520                         Product    380000.0           4400.0  ...   \n\n               Education in_top_15  education  Female_gender  Male_gender  \\\n0                    PhD      True        PHD              0            1   \n1      Bachelor's Degree      True  Bachelors              0            1   \n2      Bachelor's Degree      True  Bachelors              0            1   \n3        Master's Degree      True    Masters              0            1   \n4      Bachelor's Degree     False  Bachelors              0            1   \n...                  ...       ...        ...            ...          ...   \n21516  Bachelor's Degree      True  Bachelors              0            1   \n21517    Master's Degree      True    Masters              0            1   \n21518    Master's Degree     False    Masters              1            0   \n21519    Master's Degree      True    Masters              0            1   \n21520    Master's Degree      True    Masters              0            1   \n\n       Other_Gender  state_CA  state_NY  state_Other  state_WA  \n0                 0         1         0            0         0  \n1                 0         0         0            0         1  \n2                 0         1         0            0         0  \n3                 0         0         0            0         1  \n4                 0         1         0            0         0  \n...             ...       ...       ...          ...       ...  \n21516             0         1         0            0         0  \n21517             0         1         0            0         0  \n21518             0         0         0            1         0  \n21519             0         1         0            0         0  \n21520             0         1         0            0         0  \n\n[21521 rows x 37 columns]\n"}},"pos":49,"type":"cell"}
{"cell_type":"code","exec_count":36,"id":"93c243","input":"df['CA_state'] = one_hot_encoded_df['state_CA']\ndf['WA_state'] = one_hot_encoded_df['state_WA']\ndf['NY_state'] = one_hot_encoded_df['state_NY']\ndf['Other_state'] = one_hot_encoded_df['state_Other']\ndf.head()\n","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>timestamp</th>\n      <th>company</th>\n      <th>level</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>tag</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>...</th>\n      <th>state</th>\n      <th>in_top_15</th>\n      <th>education</th>\n      <th>Female_gender</th>\n      <th>Male_gender</th>\n      <th>Other_Gender</th>\n      <th>CA_state</th>\n      <th>WA_state</th>\n      <th>NY_state</th>\n      <th>Other_state</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1/27/2020 22:59:06</td>\n      <td>Google</td>\n      <td>L6</td>\n      <td>Software Engineer</td>\n      <td>400000</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>Distributed Systems (Back-End)</td>\n      <td>210000.0</td>\n      <td>145000.0</td>\n      <td>...</td>\n      <td>CA</td>\n      <td>True</td>\n      <td>PHD</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>7/3/2020 19:56:38</td>\n      <td>Microsoft</td>\n      <td>61</td>\n      <td>Software Engineer</td>\n      <td>136000</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>DevOps</td>\n      <td>124000.0</td>\n      <td>1000.0</td>\n      <td>...</td>\n      <td>WA</td>\n      <td>True</td>\n      <td>Bachelors</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>7/3/2020 20:03:57</td>\n      <td>Google</td>\n      <td>L5</td>\n      <td>Software Engineer</td>\n      <td>337000</td>\n      <td>6.0</td>\n      <td>6.0</td>\n      <td>Full Stack</td>\n      <td>177000.0</td>\n      <td>125000.0</td>\n      <td>...</td>\n      <td>CA</td>\n      <td>True</td>\n      <td>Bachelors</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>7/3/2020 20:05:37</td>\n      <td>Microsoft</td>\n      <td>62</td>\n      <td>Software Engineer</td>\n      <td>222000</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>API Development (Back-End)</td>\n      <td>164000.0</td>\n      <td>38000.0</td>\n      <td>...</td>\n      <td>WA</td>\n      <td>True</td>\n      <td>Masters</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>7/3/2020 20:19:06</td>\n      <td>Blend</td>\n      <td>IC3</td>\n      <td>Software Engineer</td>\n      <td>187000</td>\n      <td>5.0</td>\n      <td>0.0</td>\n      <td>Full Stack</td>\n      <td>165000.0</td>\n      <td>22000.0</td>\n      <td>...</td>\n      <td>CA</td>\n      <td>False</td>\n      <td>Bachelors</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 38 columns</p>\n</div>","text/plain":"            timestamp    company level              title  \\\n0  1/27/2020 22:59:06     Google    L6  Software Engineer   \n1   7/3/2020 19:56:38  Microsoft    61  Software Engineer   \n2   7/3/2020 20:03:57     Google    L5  Software Engineer   \n3   7/3/2020 20:05:37  Microsoft    62  Software Engineer   \n4   7/3/2020 20:19:06      Blend   IC3  Software Engineer   \n\n   totalyearlycompensation  yearsofexperience  yearsatcompany  \\\n0                   400000                5.0             5.0   \n1                   136000                3.0             2.0   \n2                   337000                6.0             6.0   \n3                   222000                4.0             4.0   \n4                   187000                5.0             0.0   \n\n                              tag  basesalary  stockgrantvalue  ...  state  \\\n0  Distributed Systems (Back-End)    210000.0         145000.0  ...     CA   \n1                          DevOps    124000.0           1000.0  ...     WA   \n2                      Full Stack    177000.0         125000.0  ...     CA   \n3      API Development (Back-End)    164000.0          38000.0  ...     WA   \n4                      Full Stack    165000.0          22000.0  ...     CA   \n\n  in_top_15  education  Female_gender  Male_gender  Other_Gender  CA_state  \\\n0      True        PHD              0            1             0         1   \n1      True  Bachelors              0            1             0         0   \n2      True  Bachelors              0            1             0         1   \n3      True    Masters              0            1             0         0   \n4     False  Bachelors              0            1             0         1   \n\n   WA_state  NY_state  Other_state  \n0         0         0            0  \n1         1         0            0  \n2         0         0            0  \n3         1         0            0  \n4         0         0            0  \n\n[5 rows x 38 columns]"},"exec_count":36,"output_type":"execute_result"}},"pos":50,"type":"cell"}
{"cell_type":"code","exec_count":37,"id":"de77fd","input":"print(df['title'].unique())\n","output":{"0":{"name":"stdout","output_type":"stream","text":"['Software Engineer' 'Software Engineering Manager' 'Hardware Engineer'\n 'Product Designer' 'Management Consultant' 'Product Manager'\n 'Solution Architect' 'Sales' 'Technical Program Manager' 'Data Scientist'\n 'Recruiter' 'Mechanical Engineer' 'Business Analyst' 'Human Resources'\n 'Marketing']\n"}},"pos":51,"type":"cell"}
{"cell_type":"code","exec_count":38,"id":"73cb79","input":"df['title'].value_counts()\n","output":{"0":{"data":{"text/plain":"Software Engineer               13664\nProduct Manager                  1446\nSoftware Engineering Manager     1022\nData Scientist                    873\nHardware Engineer                 781\nTechnical Program Manager         633\nProduct Designer                  600\nManagement Consultant             449\nBusiness Analyst                  437\nSolution Architect                409\nMarketing                         357\nMechanical Engineer               252\nSales                             218\nRecruiter                         213\nHuman Resources                   167\nName: title, dtype: int64"},"exec_count":38,"output_type":"execute_result"}},"pos":52,"type":"cell"}
{"cell_type":"code","exec_count":39,"id":"2e3ef1","input":"one_hot_encoded_df = pd.get_dummies(df, columns = ['title'])\nprint(one_hot_encoded_df)","output":{"0":{"name":"stdout","output_type":"stream","text":"                timestamp    company level  totalyearlycompensation  \\\n0      1/27/2020 22:59:06     Google    L6                   400000   \n1       7/3/2020 19:56:38  Microsoft    61                   136000   \n2       7/3/2020 20:03:57     Google    L5                   337000   \n3       7/3/2020 20:05:37  Microsoft    62                   222000   \n4       7/3/2020 20:19:06      Blend   IC3                   187000   \n...                   ...        ...   ...                      ...   \n21516  2/15/2021 19:50:36   Facebook    M2                  1470000   \n21517   3/9/2021 17:03:07     Google   L10                  4500000   \n21518  3/25/2021 10:45:03     Zapier    L8                  1605000   \n21519  5/18/2021 15:34:21   Facebook    D1                  2372000   \n21520  7/30/2021 22:23:24   Facebook    E9                  4980000   \n\n       yearsofexperience  yearsatcompany                             tag  \\\n0                    5.0             5.0  Distributed Systems (Back-End)   \n1                    3.0             2.0                          DevOps   \n2                    6.0             6.0                      Full Stack   \n3                    4.0             4.0      API Development (Back-End)   \n4                    5.0             0.0                      Full Stack   \n...                  ...             ...                             ...   \n21516                9.0             7.0                      Full Stack   \n21517               20.0            14.0                        Consumer   \n21518               16.0             2.0                      Full Stack   \n21519               22.0             2.0                         ML / AI   \n21520               17.0             0.0                         Product   \n\n       basesalary  stockgrantvalue     bonus  ... title_Marketing  \\\n0        210000.0         145000.0   45000.0  ...               0   \n1        124000.0           1000.0   11000.0  ...               0   \n2        177000.0         125000.0   36000.0  ...               0   \n3        164000.0          38000.0   20000.0  ...               0   \n4        165000.0          22000.0       0.0  ...               0   \n...           ...              ...       ...  ...             ...   \n21516    290000.0           1100.0   80000.0  ...               0   \n21517    450000.0           3700.0  350000.0  ...               0   \n21518    250000.0           1305.0   50000.0  ...               0   \n21519    315000.0           1933.0  124000.0  ...               0   \n21520    380000.0           4400.0  200000.0  ...               0   \n\n      title_Mechanical Engineer  title_Product Designer  \\\n0                             0                       0   \n1                             0                       0   \n2                             0                       0   \n3                             0                       0   \n4                             0                       0   \n...                         ...                     ...   \n21516                         0                       0   \n21517                         0                       0   \n21518                         0                       0   \n21519                         0                       0   \n21520                         0                       0   \n\n       title_Product Manager  title_Recruiter  title_Sales  \\\n0                          0                0            0   \n1                          0                0            0   \n2                          0                0            0   \n3                          0                0            0   \n4                          0                0            0   \n...                      ...              ...          ...   \n21516                      0                0            0   \n21517                      1                0            0   \n21518                      0                0            0   \n21519                      0                0            0   \n21520                      1                0            0   \n\n       title_Software Engineer  title_Software Engineering Manager  \\\n0                            1                                   0   \n1                            1                                   0   \n2                            1                                   0   \n3                            1                                   0   \n4                            1                                   0   \n...                        ...                                 ...   \n21516                        0                                   1   \n21517                        0                                   0   \n21518                        0                                   1   \n21519                        0                                   1   \n21520                        0                                   0   \n\n       title_Solution Architect  title_Technical Program Manager  \n0                             0                                0  \n1                             0                                0  \n2                             0                                0  \n3                             0                                0  \n4                             0                                0  \n...                         ...                              ...  \n21516                         0                                0  \n21517                         0                                0  \n21518                         0                                0  \n21519                         0                                0  \n21520                         0                                0  \n\n[21521 rows x 52 columns]\n"}},"pos":53,"type":"cell"}
{"cell_type":"code","exec_count":4,"id":"a1b981","input":"df['Masters_Degree'].isnull().values.any()","output":{"0":{"data":{"text/plain":"False"},"exec_count":4,"output_type":"execute_result"}},"pos":5,"type":"cell"}
{"cell_type":"code","exec_count":40,"id":"4d5586","input":"df['Marketing_title'] = one_hot_encoded_df['title_Marketing']\ndf['Mechanical Engineer_title'] = one_hot_encoded_df['title_Mechanical Engineer']\ndf['Product Designer_title'] = one_hot_encoded_df['title_Product Designer']\ndf['Recruiter_title'] = one_hot_encoded_df['title_Recruiter']\ndf['Sales_title'] = one_hot_encoded_df['title_Sales']\ndf['Software Engineer_title'] = one_hot_encoded_df['title_Software Engineer']\ndf['Software Engineering Manager_title'] = one_hot_encoded_df['title_Software Engineering Manager']\ndf['Solution Architect_title'] = one_hot_encoded_df['title_Solution Architect']\ndf['Technical Program Manager_title'] = one_hot_encoded_df['title_Technical Program Manager']\ndf['Human Resources_title'] = one_hot_encoded_df['title_Human Resources']\ndf['Product Manager_title'] = one_hot_encoded_df['title_Product Manager']\ndf['Business Analyst_title'] = one_hot_encoded_df['title_Business Analyst']\ndf['Management Consultant_title'] = one_hot_encoded_df['title_Management Consultant']\ndf['Data Scientist_title'] = one_hot_encoded_df['title_Data Scientist']\ndf['Hardware Engineer_title'] = one_hot_encoded_df['title_Hardware Engineer']\ndf.head()\n\n","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>timestamp</th>\n      <th>company</th>\n      <th>level</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>tag</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>...</th>\n      <th>Software Engineer_title</th>\n      <th>Software Engineering Manager_title</th>\n      <th>Solution Architect_title</th>\n      <th>Technical Program Manager_title</th>\n      <th>Human Resources_title</th>\n      <th>Product Manager_title</th>\n      <th>Business Analyst_title</th>\n      <th>Management Consultant_title</th>\n      <th>Data Scientist_title</th>\n      <th>Hardware Engineer_title</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1/27/2020 22:59:06</td>\n      <td>Google</td>\n      <td>L6</td>\n      <td>Software Engineer</td>\n      <td>400000</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>Distributed Systems (Back-End)</td>\n      <td>210000.0</td>\n      <td>145000.0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>7/3/2020 19:56:38</td>\n      <td>Microsoft</td>\n      <td>61</td>\n      <td>Software Engineer</td>\n      <td>136000</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>DevOps</td>\n      <td>124000.0</td>\n      <td>1000.0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>7/3/2020 20:03:57</td>\n      <td>Google</td>\n      <td>L5</td>\n      <td>Software Engineer</td>\n      <td>337000</td>\n      <td>6.0</td>\n      <td>6.0</td>\n      <td>Full Stack</td>\n      <td>177000.0</td>\n      <td>125000.0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>7/3/2020 20:05:37</td>\n      <td>Microsoft</td>\n      <td>62</td>\n      <td>Software Engineer</td>\n      <td>222000</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>API Development (Back-End)</td>\n      <td>164000.0</td>\n      <td>38000.0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>7/3/2020 20:19:06</td>\n      <td>Blend</td>\n      <td>IC3</td>\n      <td>Software Engineer</td>\n      <td>187000</td>\n      <td>5.0</td>\n      <td>0.0</td>\n      <td>Full Stack</td>\n      <td>165000.0</td>\n      <td>22000.0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 53 columns</p>\n</div>","text/plain":"            timestamp    company level              title  \\\n0  1/27/2020 22:59:06     Google    L6  Software Engineer   \n1   7/3/2020 19:56:38  Microsoft    61  Software Engineer   \n2   7/3/2020 20:03:57     Google    L5  Software Engineer   \n3   7/3/2020 20:05:37  Microsoft    62  Software Engineer   \n4   7/3/2020 20:19:06      Blend   IC3  Software Engineer   \n\n   totalyearlycompensation  yearsofexperience  yearsatcompany  \\\n0                   400000                5.0             5.0   \n1                   136000                3.0             2.0   \n2                   337000                6.0             6.0   \n3                   222000                4.0             4.0   \n4                   187000                5.0             0.0   \n\n                              tag  basesalary  stockgrantvalue  ...  \\\n0  Distributed Systems (Back-End)    210000.0         145000.0  ...   \n1                          DevOps    124000.0           1000.0  ...   \n2                      Full Stack    177000.0         125000.0  ...   \n3      API Development (Back-End)    164000.0          38000.0  ...   \n4                      Full Stack    165000.0          22000.0  ...   \n\n   Software Engineer_title Software Engineering Manager_title  \\\n0                        1                                  0   \n1                        1                                  0   \n2                        1                                  0   \n3                        1                                  0   \n4                        1                                  0   \n\n  Solution Architect_title  Technical Program Manager_title  \\\n0                        0                                0   \n1                        0                                0   \n2                        0                                0   \n3                        0                                0   \n4                        0                                0   \n\n   Human Resources_title  Product Manager_title  Business Analyst_title  \\\n0                      0                      0                       0   \n1                      0                      0                       0   \n2                      0                      0                       0   \n3                      0                      0                       0   \n4                      0                      0                       0   \n\n   Management Consultant_title  Data Scientist_title  Hardware Engineer_title  \n0                            0                     0                        0  \n1                            0                     0                        0  \n2                            0                     0                        0  \n3                            0                     0                        0  \n4                            0                     0                        0  \n\n[5 rows x 53 columns]"},"exec_count":40,"output_type":"execute_result"}},"pos":55,"type":"cell"}
{"cell_type":"code","exec_count":43,"id":"24cdd7","input":"df.drop(['Race','otherdetails','tag','level', 'Education','dmaid', 'cityid','rowNumber', 'timestamp','company','gender','title'], axis = 1)","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>Masters_Degree</th>\n      <th>Bachelors_Degree</th>\n      <th>Doctorate_Degree</th>\n      <th>Highschool</th>\n      <th>...</th>\n      <th>Software Engineer_title</th>\n      <th>Software Engineering Manager_title</th>\n      <th>Solution Architect_title</th>\n      <th>Technical Program Manager_title</th>\n      <th>Human Resources_title</th>\n      <th>Product Manager_title</th>\n      <th>Business Analyst_title</th>\n      <th>Management Consultant_title</th>\n      <th>Data Scientist_title</th>\n      <th>Hardware Engineer_title</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>400000</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>210000.0</td>\n      <td>145000.0</td>\n      <td>45000.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>136000</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>124000.0</td>\n      <td>1000.0</td>\n      <td>11000.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>337000</td>\n      <td>6.0</td>\n      <td>6.0</td>\n      <td>177000.0</td>\n      <td>125000.0</td>\n      <td>36000.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>222000</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>164000.0</td>\n      <td>38000.0</td>\n      <td>20000.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>187000</td>\n      <td>5.0</td>\n      <td>0.0</td>\n      <td>165000.0</td>\n      <td>22000.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>21516</th>\n      <td>1470000</td>\n      <td>9.0</td>\n      <td>7.0</td>\n      <td>290000.0</td>\n      <td>1100.0</td>\n      <td>80000.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>21517</th>\n      <td>4500000</td>\n      <td>20.0</td>\n      <td>14.0</td>\n      <td>450000.0</td>\n      <td>3700.0</td>\n      <td>350000.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>21518</th>\n      <td>1605000</td>\n      <td>16.0</td>\n      <td>2.0</td>\n      <td>250000.0</td>\n      <td>1305.0</td>\n      <td>50000.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>21519</th>\n      <td>2372000</td>\n      <td>22.0</td>\n      <td>2.0</td>\n      <td>315000.0</td>\n      <td>1933.0</td>\n      <td>124000.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>21520</th>\n      <td>4980000</td>\n      <td>17.0</td>\n      <td>0.0</td>\n      <td>380000.0</td>\n      <td>4400.0</td>\n      <td>200000.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>21521 rows Ã— 41 columns</p>\n</div>","text/plain":"       totalyearlycompensation  yearsofexperience  yearsatcompany  basesalary  \\\n0                       400000                5.0             5.0    210000.0   \n1                       136000                3.0             2.0    124000.0   \n2                       337000                6.0             6.0    177000.0   \n3                       222000                4.0             4.0    164000.0   \n4                       187000                5.0             0.0    165000.0   \n...                        ...                ...             ...         ...   \n21516                  1470000                9.0             7.0    290000.0   \n21517                  4500000               20.0            14.0    450000.0   \n21518                  1605000               16.0             2.0    250000.0   \n21519                  2372000               22.0             2.0    315000.0   \n21520                  4980000               17.0             0.0    380000.0   \n\n       stockgrantvalue     bonus  Masters_Degree  Bachelors_Degree  \\\n0             145000.0   45000.0               0                 0   \n1               1000.0   11000.0               0                 1   \n2             125000.0   36000.0               0                 1   \n3              38000.0   20000.0               1                 0   \n4              22000.0       0.0               0                 1   \n...                ...       ...             ...               ...   \n21516           1100.0   80000.0               0                 1   \n21517           3700.0  350000.0               1                 0   \n21518           1305.0   50000.0               1                 0   \n21519           1933.0  124000.0               1                 0   \n21520           4400.0  200000.0               1                 0   \n\n       Doctorate_Degree  Highschool  ...  Software Engineer_title  \\\n0                     1           0  ...                        1   \n1                     0           0  ...                        1   \n2                     0           0  ...                        1   \n3                     0           0  ...                        1   \n4                     0           0  ...                        1   \n...                 ...         ...  ...                      ...   \n21516                 0           0  ...                        0   \n21517                 0           0  ...                        0   \n21518                 0           0  ...                        0   \n21519                 0           0  ...                        0   \n21520                 0           0  ...                        0   \n\n       Software Engineering Manager_title  Solution Architect_title  \\\n0                                       0                         0   \n1                                       0                         0   \n2                                       0                         0   \n3                                       0                         0   \n4                                       0                         0   \n...                                   ...                       ...   \n21516                                   1                         0   \n21517                                   0                         0   \n21518                                   1                         0   \n21519                                   1                         0   \n21520                                   0                         0   \n\n       Technical Program Manager_title  Human Resources_title  \\\n0                                    0                      0   \n1                                    0                      0   \n2                                    0                      0   \n3                                    0                      0   \n4                                    0                      0   \n...                                ...                    ...   \n21516                                0                      0   \n21517                                0                      0   \n21518                                0                      0   \n21519                                0                      0   \n21520                                0                      0   \n\n       Product Manager_title Business Analyst_title  \\\n0                          0                      0   \n1                          0                      0   \n2                          0                      0   \n3                          0                      0   \n4                          0                      0   \n...                      ...                    ...   \n21516                      0                      0   \n21517                      1                      0   \n21518                      0                      0   \n21519                      0                      0   \n21520                      1                      0   \n\n       Management Consultant_title Data Scientist_title  \\\n0                                0                    0   \n1                                0                    0   \n2                                0                    0   \n3                                0                    0   \n4                                0                    0   \n...                            ...                  ...   \n21516                            0                    0   \n21517                            0                    0   \n21518                            0                    0   \n21519                            0                    0   \n21520                            0                    0   \n\n       Hardware Engineer_title  \n0                            0  \n1                            0  \n2                            0  \n3                            0  \n4                            0  \n...                        ...  \n21516                        0  \n21517                        0  \n21518                        0  \n21519                        0  \n21520                        0  \n\n[21521 rows x 41 columns]"},"exec_count":43,"output_type":"execute_result"}},"pos":56,"type":"cell"}
{"cell_type":"code","exec_count":48,"id":"cfb6b1","input":"import pandas as pd\nimport numpy as np\n","pos":0,"type":"cell"}
{"cell_type":"code","exec_count":5,"id":"92ce7e","input":"df['dmaid'].isnull().sum()","output":{"0":{"data":{"text/plain":"2"},"exec_count":5,"output_type":"execute_result"}},"pos":6,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"dc5b50","input":"df.columns","output":{"0":{"data":{"text/plain":"Index(['timestamp', 'company', 'level', 'title', 'totalyearlycompensation',\n       'location', 'yearsofexperience', 'yearsatcompany', 'tag', 'basesalary',\n       'stockgrantvalue', 'bonus', 'gender', 'otherdetails', 'cityid', 'dmaid',\n       'rowNumber', 'Masters_Degree', 'Bachelors_Degree', 'Doctorate_Degree',\n       'Highschool', 'Some_College', 'Race_Asian', 'Race_White',\n       'Race_Two_Or_More', 'Race_Black', 'Race_Hispanic', 'Race', 'Education'],\n      dtype='object')"},"exec_count":6,"output_type":"execute_result"}},"pos":7,"type":"cell"}
{"cell_type":"code","exec_count":67,"id":"000afb","input":"import sklearn\nfrom sklearn.model_selection import train_test_split","pos":57,"type":"cell"}
{"cell_type":"code","exec_count":68,"id":"aea141","input":"x = df.loc[:, df.columns != 'totalyearlycompensation']\ny = df.totalyearlycompensation","pos":58,"type":"cell"}
{"cell_type":"code","exec_count":69,"id":"ef1994","input":"x_train, x_test, y_train, y_test = train_test_split(x, y, random_state=42)","pos":59,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"12c93f","input":"df.drop(['Race','otherdetails','tag','level', 'Education','dmaid', 'cityid','rowNumber', 'timestamp','company'], axis = 1)\n","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>location</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>Bachelors_Degree</th>\n      <th>Doctorate_Degree</th>\n      <th>Highschool</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Product Manager</td>\n      <td>127000</td>\n      <td>Redwood City, CA</td>\n      <td>1.5</td>\n      <td>1.5</td>\n      <td>107000.0</td>\n      <td>20000.0</td>\n      <td>10000.0</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Software Engineer</td>\n      <td>100000</td>\n      <td>San Francisco, CA</td>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Product Manager</td>\n      <td>310000</td>\n      <td>Seattle, WA</td>\n      <td>8.0</td>\n      <td>0.0</td>\n      <td>155000.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Software Engineering Manager</td>\n      <td>372000</td>\n      <td>Sunnyvale, CA</td>\n      <td>7.0</td>\n      <td>5.0</td>\n      <td>157000.0</td>\n      <td>180000.0</td>\n      <td>35000.0</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Software Engineer</td>\n      <td>157000</td>\n      <td>Mountain View, CA</td>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>62637</th>\n      <td>Software Engineer</td>\n      <td>327000</td>\n      <td>Seattle, WA</td>\n      <td>10.0</td>\n      <td>1.0</td>\n      <td>155000.0</td>\n      <td>150000.0</td>\n      <td>22000.0</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>62638</th>\n      <td>Software Engineer</td>\n      <td>237000</td>\n      <td>Redmond, WA</td>\n      <td>2.0</td>\n      <td>2.0</td>\n      <td>146900.0</td>\n      <td>73200.0</td>\n      <td>16000.0</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>62639</th>\n      <td>Software Engineer</td>\n      <td>220000</td>\n      <td>Seattle, WA</td>\n      <td>14.0</td>\n      <td>12.0</td>\n      <td>157000.0</td>\n      <td>25000.0</td>\n      <td>20000.0</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>62640</th>\n      <td>Software Engineer</td>\n      <td>280000</td>\n      <td>San Francisco, CA</td>\n      <td>8.0</td>\n      <td>4.0</td>\n      <td>194688.0</td>\n      <td>57000.0</td>\n      <td>29000.0</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>62641</th>\n      <td>Software Engineer</td>\n      <td>200000</td>\n      <td>Sunnyvale, CA</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>155000.0</td>\n      <td>27000.0</td>\n      <td>19000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>62642 rows Ã— 19 columns</p>\n</div>","text/plain":"                              title  totalyearlycompensation  \\\n0                   Product Manager                   127000   \n1                 Software Engineer                   100000   \n2                   Product Manager                   310000   \n3      Software Engineering Manager                   372000   \n4                 Software Engineer                   157000   \n...                             ...                      ...   \n62637             Software Engineer                   327000   \n62638             Software Engineer                   237000   \n62639             Software Engineer                   220000   \n62640             Software Engineer                   280000   \n62641             Software Engineer                   200000   \n\n                location  yearsofexperience  yearsatcompany  basesalary  \\\n0       Redwood City, CA                1.5             1.5    107000.0   \n1      San Francisco, CA                5.0             3.0         0.0   \n2            Seattle, WA                8.0             0.0    155000.0   \n3          Sunnyvale, CA                7.0             5.0    157000.0   \n4      Mountain View, CA                5.0             3.0         0.0   \n...                  ...                ...             ...         ...   \n62637        Seattle, WA               10.0             1.0    155000.0   \n62638        Redmond, WA                2.0             2.0    146900.0   \n62639        Seattle, WA               14.0            12.0    157000.0   \n62640  San Francisco, CA                8.0             4.0    194688.0   \n62641      Sunnyvale, CA                0.0             0.0    155000.0   \n\n       stockgrantvalue    bonus gender  Masters_Degree  Bachelors_Degree  \\\n0              20000.0  10000.0    NaN               0                 0   \n1                  0.0      0.0    NaN               0                 0   \n2                  0.0      0.0    NaN               0                 0   \n3             180000.0  35000.0    NaN               0                 0   \n4                  0.0      0.0    NaN               0                 0   \n...                ...      ...    ...             ...               ...   \n62637         150000.0  22000.0    NaN               0                 0   \n62638          73200.0  16000.0    NaN               0                 0   \n62639          25000.0  20000.0    NaN               0                 0   \n62640          57000.0  29000.0    NaN               0                 0   \n62641          27000.0  19000.0   Male               0                 0   \n\n       Doctorate_Degree  Highschool  Some_College  Race_Asian  Race_White  \\\n0                     0           0             0           0           0   \n1                     0           0             0           0           0   \n2                     0           0             0           0           0   \n3                     0           0             0           0           0   \n4                     0           0             0           0           0   \n...                 ...         ...           ...         ...         ...   \n62637                 0           0             0           0           0   \n62638                 0           0             0           0           0   \n62639                 0           0             0           0           0   \n62640                 0           0             0           0           0   \n62641                 0           0             0           0           0   \n\n       Race_Two_Or_More  Race_Black  Race_Hispanic  \n0                     0           0              0  \n1                     0           0              0  \n2                     0           0              0  \n3                     0           0              0  \n4                     0           0              0  \n...                 ...         ...            ...  \n62637                 0           0              0  \n62638                 0           0              0  \n62639                 0           0              0  \n62640                 0           0              0  \n62641                 0           0              0  \n\n[62642 rows x 19 columns]"},"exec_count":7,"output_type":"execute_result"}},"pos":11,"type":"cell"}
{"cell_type":"code","exec_count":70,"id":"7351f7","input":"#Stochastic Gradient Descent Regression\nfrom sklearn.linear_model import SGDClassifier\n#model object\nclf = SGDClassifier()","pos":60,"type":"cell"}
{"cell_type":"code","exec_count":71,"id":"4f5897","input":"#fit your model\nclf.fit(x_train, y_train)\n","output":{"0":{"ename":"ValueError","evalue":"could not convert string to float: '11/18/2020 13:55:52'","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","Input \u001b[0;32mIn [71]\u001b[0m, in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[38;5;66;03m#fit your model\u001b[39;00m\n\u001b[0;32m----> 2\u001b[0m \u001b[43mclf\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mfit\u001b[49m\u001b[43m(\u001b[49m\u001b[43mx_train\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43my_train\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py:890\u001b[0m, in \u001b[0;36mBaseSGDClassifier.fit\u001b[0;34m(self, X, y, coef_init, intercept_init, sample_weight)\u001b[0m\n\u001b[1;32m    862\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mfit\u001b[39m(\u001b[38;5;28mself\u001b[39m, X, y, coef_init\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, intercept_init\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, sample_weight\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m):\n\u001b[1;32m    863\u001b[0m     \u001b[38;5;124;03m\"\"\"Fit linear model with Stochastic Gradient Descent.\u001b[39;00m\n\u001b[1;32m    864\u001b[0m \n\u001b[1;32m    865\u001b[0m \u001b[38;5;124;03m    Parameters\u001b[39;00m\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    888\u001b[0m \u001b[38;5;124;03m        Returns an instance of self.\u001b[39;00m\n\u001b[1;32m    889\u001b[0m \u001b[38;5;124;03m    \"\"\"\u001b[39;00m\n\u001b[0;32m--> 890\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_fit\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m    891\u001b[0m \u001b[43m        \u001b[49m\u001b[43mX\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    892\u001b[0m \u001b[43m        \u001b[49m\u001b[43my\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    893\u001b[0m \u001b[43m        \u001b[49m\u001b[43malpha\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43malpha\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    894\u001b[0m \u001b[43m        \u001b[49m\u001b[43mC\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;241;43m1.0\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[1;32m    895\u001b[0m \u001b[43m        \u001b[49m\u001b[43mloss\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mloss\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    896\u001b[0m \u001b[43m        \u001b[49m\u001b[43mlearning_rate\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mlearning_rate\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    897\u001b[0m \u001b[43m        \u001b[49m\u001b[43mcoef_init\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcoef_init\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    898\u001b[0m \u001b[43m        \u001b[49m\u001b[43mintercept_init\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mintercept_init\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    899\u001b[0m \u001b[43m        \u001b[49m\u001b[43msample_weight\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43msample_weight\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    900\u001b[0m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py:686\u001b[0m, in \u001b[0;36mBaseSGDClassifier._fit\u001b[0;34m(self, X, y, alpha, C, loss, learning_rate, coef_init, intercept_init, sample_weight)\u001b[0m\n\u001b[1;32m    683\u001b[0m \u001b[38;5;66;03m# Clear iteration count for multiple call to fit.\u001b[39;00m\n\u001b[1;32m    684\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mt_ \u001b[38;5;241m=\u001b[39m \u001b[38;5;241m1.0\u001b[39m\n\u001b[0;32m--> 686\u001b[0m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_partial_fit\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m    687\u001b[0m \u001b[43m    \u001b[49m\u001b[43mX\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    688\u001b[0m \u001b[43m    \u001b[49m\u001b[43my\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    689\u001b[0m \u001b[43m    \u001b[49m\u001b[43malpha\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    690\u001b[0m \u001b[43m    \u001b[49m\u001b[43mC\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    691\u001b[0m \u001b[43m    \u001b[49m\u001b[43mloss\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    692\u001b[0m \u001b[43m    \u001b[49m\u001b[43mlearning_rate\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    693\u001b[0m \u001b[43m    \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mmax_iter\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    694\u001b[0m \u001b[43m    \u001b[49m\u001b[43mclasses\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    695\u001b[0m \u001b[43m    \u001b[49m\u001b[43msample_weight\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    696\u001b[0m \u001b[43m    \u001b[49m\u001b[43mcoef_init\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    697\u001b[0m \u001b[43m    \u001b[49m\u001b[43mintercept_init\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    698\u001b[0m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    700\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m (\n\u001b[1;32m    701\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mtol \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[1;32m    702\u001b[0m     \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mtol \u001b[38;5;241m>\u001b[39m \u001b[38;5;241m-\u001b[39mnp\u001b[38;5;241m.\u001b[39minf\n\u001b[1;32m    703\u001b[0m     \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mn_iter_ \u001b[38;5;241m==\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mmax_iter\n\u001b[1;32m    704\u001b[0m ):\n\u001b[1;32m    705\u001b[0m     warnings\u001b[38;5;241m.\u001b[39mwarn(\n\u001b[1;32m    706\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mMaximum number of iteration reached before \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m    707\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mconvergence. Consider increasing max_iter to \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m    708\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mimprove the fit.\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[1;32m    709\u001b[0m         ConvergenceWarning,\n\u001b[1;32m    710\u001b[0m     )\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py:581\u001b[0m, in \u001b[0;36mBaseSGDClassifier._partial_fit\u001b[0;34m(self, X, y, alpha, C, loss, learning_rate, max_iter, classes, sample_weight, coef_init, intercept_init)\u001b[0m\n\u001b[1;32m    566\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m_partial_fit\u001b[39m(\n\u001b[1;32m    567\u001b[0m     \u001b[38;5;28mself\u001b[39m,\n\u001b[1;32m    568\u001b[0m     X,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    578\u001b[0m     intercept_init,\n\u001b[1;32m    579\u001b[0m ):\n\u001b[1;32m    580\u001b[0m     first_call \u001b[38;5;241m=\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28mhasattr\u001b[39m(\u001b[38;5;28mself\u001b[39m, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mclasses_\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[0;32m--> 581\u001b[0m     X, y \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_validate_data\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m    582\u001b[0m \u001b[43m        \u001b[49m\u001b[43mX\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    583\u001b[0m \u001b[43m        \u001b[49m\u001b[43my\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    584\u001b[0m \u001b[43m        \u001b[49m\u001b[43maccept_sparse\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mcsr\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[1;32m    585\u001b[0m \u001b[43m        \u001b[49m\u001b[43mdtype\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mnp\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mfloat64\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    586\u001b[0m \u001b[43m        \u001b[49m\u001b[43morder\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mC\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[1;32m    587\u001b[0m \u001b[43m        \u001b[49m\u001b[43maccept_large_sparse\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43;01mFalse\u001b[39;49;00m\u001b[43m,\u001b[49m\n\u001b[1;32m    588\u001b[0m \u001b[43m        \u001b[49m\u001b[43mreset\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mfirst_call\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    589\u001b[0m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    591\u001b[0m     n_samples, n_features \u001b[38;5;241m=\u001b[39m X\u001b[38;5;241m.\u001b[39mshape\n\u001b[1;32m    593\u001b[0m     _check_partial_fit_first_call(\u001b[38;5;28mself\u001b[39m, classes)\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/base.py:596\u001b[0m, in \u001b[0;36mBaseEstimator._validate_data\u001b[0;34m(self, X, y, reset, validate_separately, **check_params)\u001b[0m\n\u001b[1;32m    594\u001b[0m         y \u001b[38;5;241m=\u001b[39m check_array(y, input_name\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124my\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mcheck_y_params)\n\u001b[1;32m    595\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m--> 596\u001b[0m         X, y \u001b[38;5;241m=\u001b[39m \u001b[43mcheck_X_y\u001b[49m\u001b[43m(\u001b[49m\u001b[43mX\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43my\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mcheck_params\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    597\u001b[0m     out \u001b[38;5;241m=\u001b[39m X, y\n\u001b[1;32m    599\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m no_val_X \u001b[38;5;129;01mand\u001b[39;00m check_params\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mensure_2d\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mTrue\u001b[39;00m):\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/utils/validation.py:1074\u001b[0m, in \u001b[0;36mcheck_X_y\u001b[0;34m(X, y, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, multi_output, ensure_min_samples, ensure_min_features, y_numeric, estimator)\u001b[0m\n\u001b[1;32m   1069\u001b[0m         estimator_name \u001b[38;5;241m=\u001b[39m _check_estimator_name(estimator)\n\u001b[1;32m   1070\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[1;32m   1071\u001b[0m         \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mestimator_name\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m requires y to be passed, but the target y is None\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m   1072\u001b[0m     )\n\u001b[0;32m-> 1074\u001b[0m X \u001b[38;5;241m=\u001b[39m \u001b[43mcheck_array\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m   1075\u001b[0m \u001b[43m    \u001b[49m\u001b[43mX\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1076\u001b[0m \u001b[43m    \u001b[49m\u001b[43maccept_sparse\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43maccept_sparse\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1077\u001b[0m \u001b[43m    \u001b[49m\u001b[43maccept_large_sparse\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43maccept_large_sparse\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1078\u001b[0m \u001b[43m    \u001b[49m\u001b[43mdtype\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mdtype\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1079\u001b[0m \u001b[43m    \u001b[49m\u001b[43morder\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43morder\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1080\u001b[0m \u001b[43m    \u001b[49m\u001b[43mcopy\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcopy\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1081\u001b[0m \u001b[43m    \u001b[49m\u001b[43mforce_all_finite\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mforce_all_finite\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1082\u001b[0m \u001b[43m    \u001b[49m\u001b[43mensure_2d\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mensure_2d\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1083\u001b[0m \u001b[43m    \u001b[49m\u001b[43mallow_nd\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mallow_nd\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1084\u001b[0m \u001b[43m    \u001b[49m\u001b[43mensure_min_samples\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mensure_min_samples\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1085\u001b[0m \u001b[43m    \u001b[49m\u001b[43mensure_min_features\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mensure_min_features\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1086\u001b[0m \u001b[43m    \u001b[49m\u001b[43mestimator\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mestimator\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1087\u001b[0m \u001b[43m    \u001b[49m\u001b[43minput_name\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mX\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1088\u001b[0m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1090\u001b[0m y \u001b[38;5;241m=\u001b[39m _check_y(y, multi_output\u001b[38;5;241m=\u001b[39mmulti_output, y_numeric\u001b[38;5;241m=\u001b[39my_numeric, estimator\u001b[38;5;241m=\u001b[39mestimator)\n\u001b[1;32m   1092\u001b[0m check_consistent_length(X, y)\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/utils/validation.py:791\u001b[0m, in \u001b[0;36mcheck_array\u001b[0;34m(array, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, ensure_min_samples, ensure_min_features, estimator, input_name)\u001b[0m\n\u001b[1;32m    786\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m pandas_requires_conversion:\n\u001b[1;32m    787\u001b[0m     \u001b[38;5;66;03m# pandas dataframe requires conversion earlier to handle extension dtypes with\u001b[39;00m\n\u001b[1;32m    788\u001b[0m     \u001b[38;5;66;03m# nans\u001b[39;00m\n\u001b[1;32m    789\u001b[0m     \u001b[38;5;66;03m# Use the original dtype for conversion if dtype is None\u001b[39;00m\n\u001b[1;32m    790\u001b[0m     new_dtype \u001b[38;5;241m=\u001b[39m dtype_orig \u001b[38;5;28;01mif\u001b[39;00m dtype \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;28;01melse\u001b[39;00m dtype\n\u001b[0;32m--> 791\u001b[0m     array \u001b[38;5;241m=\u001b[39m \u001b[43marray\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mastype\u001b[49m\u001b[43m(\u001b[49m\u001b[43mnew_dtype\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    792\u001b[0m     \u001b[38;5;66;03m# Since we converted here, we do not need to convert again later\u001b[39;00m\n\u001b[1;32m    793\u001b[0m     dtype \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/generic.py:5912\u001b[0m, in \u001b[0;36mNDFrame.astype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m   5905\u001b[0m     results \u001b[38;5;241m=\u001b[39m [\n\u001b[1;32m   5906\u001b[0m         \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39miloc[:, i]\u001b[38;5;241m.\u001b[39mastype(dtype, copy\u001b[38;5;241m=\u001b[39mcopy)\n\u001b[1;32m   5907\u001b[0m         \u001b[38;5;28;01mfor\u001b[39;00m i \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mrange\u001b[39m(\u001b[38;5;28mlen\u001b[39m(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mcolumns))\n\u001b[1;32m   5908\u001b[0m     ]\n\u001b[1;32m   5910\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m   5911\u001b[0m     \u001b[38;5;66;03m# else, only a single dtype is given\u001b[39;00m\n\u001b[0;32m-> 5912\u001b[0m     new_data \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_mgr\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mastype\u001b[49m\u001b[43m(\u001b[49m\u001b[43mdtype\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mdtype\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcopy\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcopy\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43merrors\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   5913\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_constructor(new_data)\u001b[38;5;241m.\u001b[39m__finalize__(\u001b[38;5;28mself\u001b[39m, method\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mastype\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m   5915\u001b[0m \u001b[38;5;66;03m# GH 33113: handle empty frame or series\u001b[39;00m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/internals/managers.py:419\u001b[0m, in \u001b[0;36mBaseBlockManager.astype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m    418\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mastype\u001b[39m(\u001b[38;5;28mself\u001b[39m: T, dtype, copy: \u001b[38;5;28mbool\u001b[39m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mFalse\u001b[39;00m, errors: \u001b[38;5;28mstr\u001b[39m \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mraise\u001b[39m\u001b[38;5;124m\"\u001b[39m) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m T:\n\u001b[0;32m--> 419\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mapply\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mastype\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdtype\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mdtype\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcopy\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcopy\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43merrors\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/internals/managers.py:304\u001b[0m, in \u001b[0;36mBaseBlockManager.apply\u001b[0;34m(self, f, align_keys, ignore_failures, **kwargs)\u001b[0m\n\u001b[1;32m    302\u001b[0m         applied \u001b[38;5;241m=\u001b[39m b\u001b[38;5;241m.\u001b[39mapply(f, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n\u001b[1;32m    303\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m--> 304\u001b[0m         applied \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mgetattr\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mb\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mf\u001b[49m\u001b[43m)\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    305\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m (\u001b[38;5;167;01mTypeError\u001b[39;00m, \u001b[38;5;167;01mNotImplementedError\u001b[39;00m):\n\u001b[1;32m    306\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m ignore_failures:\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/internals/blocks.py:580\u001b[0m, in \u001b[0;36mBlock.astype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m    562\u001b[0m \u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[1;32m    563\u001b[0m \u001b[38;5;124;03mCoerce to the new dtype.\u001b[39;00m\n\u001b[1;32m    564\u001b[0m \n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    576\u001b[0m \u001b[38;5;124;03mBlock\u001b[39;00m\n\u001b[1;32m    577\u001b[0m \u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[1;32m    578\u001b[0m values \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mvalues\n\u001b[0;32m--> 580\u001b[0m new_values \u001b[38;5;241m=\u001b[39m \u001b[43mastype_array_safe\u001b[49m\u001b[43m(\u001b[49m\u001b[43mvalues\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdtype\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcopy\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcopy\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43merrors\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    582\u001b[0m new_values \u001b[38;5;241m=\u001b[39m maybe_coerce_values(new_values)\n\u001b[1;32m    583\u001b[0m newb \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mmake_block(new_values)\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/dtypes/cast.py:1292\u001b[0m, in \u001b[0;36mastype_array_safe\u001b[0;34m(values, dtype, copy, errors)\u001b[0m\n\u001b[1;32m   1289\u001b[0m     dtype \u001b[38;5;241m=\u001b[39m dtype\u001b[38;5;241m.\u001b[39mnumpy_dtype\n\u001b[1;32m   1291\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[0;32m-> 1292\u001b[0m     new_values \u001b[38;5;241m=\u001b[39m \u001b[43mastype_array\u001b[49m\u001b[43m(\u001b[49m\u001b[43mvalues\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdtype\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcopy\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcopy\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1293\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m (\u001b[38;5;167;01mValueError\u001b[39;00m, \u001b[38;5;167;01mTypeError\u001b[39;00m):\n\u001b[1;32m   1294\u001b[0m     \u001b[38;5;66;03m# e.g. astype_nansafe can fail on object-dtype of strings\u001b[39;00m\n\u001b[1;32m   1295\u001b[0m     \u001b[38;5;66;03m#  trying to convert to float\u001b[39;00m\n\u001b[1;32m   1296\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m errors \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mignore\u001b[39m\u001b[38;5;124m\"\u001b[39m:\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/dtypes/cast.py:1237\u001b[0m, in \u001b[0;36mastype_array\u001b[0;34m(values, dtype, copy)\u001b[0m\n\u001b[1;32m   1234\u001b[0m     values \u001b[38;5;241m=\u001b[39m values\u001b[38;5;241m.\u001b[39mastype(dtype, copy\u001b[38;5;241m=\u001b[39mcopy)\n\u001b[1;32m   1236\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m-> 1237\u001b[0m     values \u001b[38;5;241m=\u001b[39m \u001b[43mastype_nansafe\u001b[49m\u001b[43m(\u001b[49m\u001b[43mvalues\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdtype\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcopy\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcopy\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1239\u001b[0m \u001b[38;5;66;03m# in pandas we don't store numpy str dtypes, so convert to object\u001b[39;00m\n\u001b[1;32m   1240\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(dtype, np\u001b[38;5;241m.\u001b[39mdtype) \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;28missubclass\u001b[39m(values\u001b[38;5;241m.\u001b[39mdtype\u001b[38;5;241m.\u001b[39mtype, \u001b[38;5;28mstr\u001b[39m):\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/dtypes/cast.py:1098\u001b[0m, in \u001b[0;36mastype_nansafe\u001b[0;34m(arr, dtype, copy, skipna)\u001b[0m\n\u001b[1;32m   1096\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m arr\u001b[38;5;241m.\u001b[39mndim \u001b[38;5;241m>\u001b[39m \u001b[38;5;241m1\u001b[39m:\n\u001b[1;32m   1097\u001b[0m     flat \u001b[38;5;241m=\u001b[39m arr\u001b[38;5;241m.\u001b[39mravel()\n\u001b[0;32m-> 1098\u001b[0m     result \u001b[38;5;241m=\u001b[39m \u001b[43mastype_nansafe\u001b[49m\u001b[43m(\u001b[49m\u001b[43mflat\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdtype\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcopy\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcopy\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mskipna\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mskipna\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1099\u001b[0m     \u001b[38;5;66;03m# error: Item \"ExtensionArray\" of \"Union[ExtensionArray, ndarray]\" has no\u001b[39;00m\n\u001b[1;32m   1100\u001b[0m     \u001b[38;5;66;03m# attribute \"reshape\"\u001b[39;00m\n\u001b[1;32m   1101\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m result\u001b[38;5;241m.\u001b[39mreshape(arr\u001b[38;5;241m.\u001b[39mshape)  \u001b[38;5;66;03m# type: ignore[union-attr]\u001b[39;00m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/dtypes/cast.py:1181\u001b[0m, in \u001b[0;36mastype_nansafe\u001b[0;34m(arr, dtype, copy, skipna)\u001b[0m\n\u001b[1;32m   1177\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(msg)\n\u001b[1;32m   1179\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m copy \u001b[38;5;129;01mor\u001b[39;00m is_object_dtype(arr\u001b[38;5;241m.\u001b[39mdtype) \u001b[38;5;129;01mor\u001b[39;00m is_object_dtype(dtype):\n\u001b[1;32m   1180\u001b[0m     \u001b[38;5;66;03m# Explicit copy, or required since NumPy can't view from / to object.\u001b[39;00m\n\u001b[0;32m-> 1181\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43marr\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mastype\u001b[49m\u001b[43m(\u001b[49m\u001b[43mdtype\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcopy\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43;01mTrue\u001b[39;49;00m\u001b[43m)\u001b[49m\n\u001b[1;32m   1183\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m arr\u001b[38;5;241m.\u001b[39mastype(dtype, copy\u001b[38;5;241m=\u001b[39mcopy)\n","\u001b[0;31mValueError\u001b[0m: could not convert string to float: '11/18/2020 13:55:52'"]}},"pos":61,"type":"cell"}
{"cell_type":"code","exec_count":77,"id":"8bd5d4","input":"import numpy as np\nimport pandas as pd","pos":41,"type":"cell"}
{"cell_type":"code","exec_count":78,"id":"49f9cd","input":"df = pd.read_csv('cleaned_data.csv')","output":{"0":{"ename":"FileNotFoundError","evalue":"[Errno 2] No such file or directory: 'cleaned_data.csv'","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","Input \u001b[0;32mIn [78]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0m df \u001b[38;5;241m=\u001b[39m \u001b[43mpd\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mread_csv\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mcleaned_data.csv\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/util/_decorators.py:311\u001b[0m, in \u001b[0;36mdeprecate_nonkeyword_arguments.<locals>.decorate.<locals>.wrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    305\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mlen\u001b[39m(args) \u001b[38;5;241m>\u001b[39m num_allow_args:\n\u001b[1;32m    306\u001b[0m     warnings\u001b[38;5;241m.\u001b[39mwarn(\n\u001b[1;32m    307\u001b[0m         msg\u001b[38;5;241m.\u001b[39mformat(arguments\u001b[38;5;241m=\u001b[39marguments),\n\u001b[1;32m    308\u001b[0m         \u001b[38;5;167;01mFutureWarning\u001b[39;00m,\n\u001b[1;32m    309\u001b[0m         stacklevel\u001b[38;5;241m=\u001b[39mstacklevel,\n\u001b[1;32m    310\u001b[0m     )\n\u001b[0;32m--> 311\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mfunc\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/io/parsers/readers.py:680\u001b[0m, in \u001b[0;36mread_csv\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, squeeze, prefix, mangle_dupe_cols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, error_bad_lines, warn_bad_lines, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options)\u001b[0m\n\u001b[1;32m    665\u001b[0m kwds_defaults \u001b[38;5;241m=\u001b[39m _refine_defaults_read(\n\u001b[1;32m    666\u001b[0m     dialect,\n\u001b[1;32m    667\u001b[0m     delimiter,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    676\u001b[0m     defaults\u001b[38;5;241m=\u001b[39m{\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mdelimiter\u001b[39m\u001b[38;5;124m\"\u001b[39m: \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m,\u001b[39m\u001b[38;5;124m\"\u001b[39m},\n\u001b[1;32m    677\u001b[0m )\n\u001b[1;32m    678\u001b[0m kwds\u001b[38;5;241m.\u001b[39mupdate(kwds_defaults)\n\u001b[0;32m--> 680\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43m_read\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfilepath_or_buffer\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mkwds\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/io/parsers/readers.py:575\u001b[0m, in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    572\u001b[0m _validate_names(kwds\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mnames\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m))\n\u001b[1;32m    574\u001b[0m \u001b[38;5;66;03m# Create the parser.\u001b[39;00m\n\u001b[0;32m--> 575\u001b[0m parser \u001b[38;5;241m=\u001b[39m \u001b[43mTextFileReader\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfilepath_or_buffer\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwds\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    577\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m chunksize \u001b[38;5;129;01mor\u001b[39;00m iterator:\n\u001b[1;32m    578\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m parser\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/io/parsers/readers.py:933\u001b[0m, in \u001b[0;36mTextFileReader.__init__\u001b[0;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[1;32m    930\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas_index_names\u001b[39m\u001b[38;5;124m\"\u001b[39m] \u001b[38;5;241m=\u001b[39m kwds[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas_index_names\u001b[39m\u001b[38;5;124m\"\u001b[39m]\n\u001b[1;32m    932\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles: IOHandles \u001b[38;5;241m|\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[0;32m--> 933\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_engine \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_make_engine\u001b[49m\u001b[43m(\u001b[49m\u001b[43mf\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mengine\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/io/parsers/readers.py:1217\u001b[0m, in \u001b[0;36mTextFileReader._make_engine\u001b[0;34m(self, f, engine)\u001b[0m\n\u001b[1;32m   1213\u001b[0m     mode \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mrb\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m   1214\u001b[0m \u001b[38;5;66;03m# error: No overload variant of \"get_handle\" matches argument types\u001b[39;00m\n\u001b[1;32m   1215\u001b[0m \u001b[38;5;66;03m# \"Union[str, PathLike[str], ReadCsvBuffer[bytes], ReadCsvBuffer[str]]\"\u001b[39;00m\n\u001b[1;32m   1216\u001b[0m \u001b[38;5;66;03m# , \"str\", \"bool\", \"Any\", \"Any\", \"Any\", \"Any\", \"Any\"\u001b[39;00m\n\u001b[0;32m-> 1217\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles \u001b[38;5;241m=\u001b[39m \u001b[43mget_handle\u001b[49m\u001b[43m(\u001b[49m\u001b[43m  \u001b[49m\u001b[38;5;66;43;03m# type: ignore[call-overload]\u001b[39;49;00m\n\u001b[1;32m   1218\u001b[0m \u001b[43m    \u001b[49m\u001b[43mf\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1219\u001b[0m \u001b[43m    \u001b[49m\u001b[43mmode\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1220\u001b[0m \u001b[43m    \u001b[49m\u001b[43mencoding\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mencoding\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1221\u001b[0m \u001b[43m    \u001b[49m\u001b[43mcompression\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mcompression\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1222\u001b[0m \u001b[43m    \u001b[49m\u001b[43mmemory_map\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mmemory_map\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mFalse\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1223\u001b[0m \u001b[43m    \u001b[49m\u001b[43mis_text\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mis_text\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1224\u001b[0m \u001b[43m    \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mencoding_errors\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mstrict\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1225\u001b[0m \u001b[43m    \u001b[49m\u001b[43mstorage_options\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mstorage_options\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1226\u001b[0m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1227\u001b[0m \u001b[38;5;28;01massert\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[1;32m   1228\u001b[0m f \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles\u001b[38;5;241m.\u001b[39mhandle\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/io/common.py:789\u001b[0m, in \u001b[0;36mget_handle\u001b[0;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[1;32m    784\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(handle, \u001b[38;5;28mstr\u001b[39m):\n\u001b[1;32m    785\u001b[0m     \u001b[38;5;66;03m# Check whether the filename is to be opened in binary mode.\u001b[39;00m\n\u001b[1;32m    786\u001b[0m     \u001b[38;5;66;03m# Binary mode does not support 'encoding' and 'newline'.\u001b[39;00m\n\u001b[1;32m    787\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m ioargs\u001b[38;5;241m.\u001b[39mencoding \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m ioargs\u001b[38;5;241m.\u001b[39mmode:\n\u001b[1;32m    788\u001b[0m         \u001b[38;5;66;03m# Encoding\u001b[39;00m\n\u001b[0;32m--> 789\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mopen\u001b[39;49m\u001b[43m(\u001b[49m\n\u001b[1;32m    790\u001b[0m \u001b[43m            \u001b[49m\u001b[43mhandle\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    791\u001b[0m \u001b[43m            \u001b[49m\u001b[43mioargs\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mmode\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    792\u001b[0m \u001b[43m            \u001b[49m\u001b[43mencoding\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mioargs\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mencoding\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    793\u001b[0m \u001b[43m            \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43merrors\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    794\u001b[0m \u001b[43m            \u001b[49m\u001b[43mnewline\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[1;32m    795\u001b[0m \u001b[43m        \u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    796\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m    797\u001b[0m         \u001b[38;5;66;03m# Binary mode\u001b[39;00m\n\u001b[1;32m    798\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(handle, ioargs\u001b[38;5;241m.\u001b[39mmode)\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'cleaned_data.csv'"]}},"pos":40,"type":"cell"}
{"cell_type":"code","exec_count":79,"id":"a9b9f3","input":"#Find MSE\ntotal_squared_error = (np.sum((y_test - y_hat)**2)) #get the sum of all the errors (error = what we want (y_test) - what we predicted (y_hat))\nmean_squared_error = total_squared_error/len(y_test) #divide this by how many rows/observations we have \nprint(mean_squared_error)","output":{"0":{"ename":"NameError","evalue":"name 'y_hat' is not defined","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","Input \u001b[0;32mIn [79]\u001b[0m, in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[38;5;66;03m#Find MSE\u001b[39;00m\n\u001b[0;32m----> 2\u001b[0m total_squared_error \u001b[38;5;241m=\u001b[39m (np\u001b[38;5;241m.\u001b[39msum((y_test \u001b[38;5;241m-\u001b[39m \u001b[43my_hat\u001b[49m)\u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39m\u001b[38;5;241m2\u001b[39m)) \u001b[38;5;66;03m#get the sum of all the errors (error = what we want (y_test) - what we predicted (y_hat))\u001b[39;00m\n\u001b[1;32m      3\u001b[0m mean_squared_error \u001b[38;5;241m=\u001b[39m total_squared_error\u001b[38;5;241m/\u001b[39m\u001b[38;5;28mlen\u001b[39m(y_test) \u001b[38;5;66;03m#divide this by how many rows/observations we have \u001b[39;00m\n\u001b[1;32m      4\u001b[0m \u001b[38;5;28mprint\u001b[39m(mean_squared_error)\n","\u001b[0;31mNameError\u001b[0m: name 'y_hat' is not defined"]}},"pos":63,"type":"cell"}
{"cell_type":"code","exec_count":8,"id":"5a2e3b","input":"df.dropna(inplace=True)","pos":12,"type":"cell"}
{"cell_type":"code","exec_count":9,"id":"c5e90f","input":"df.reset_index(drop=True, inplace=True)","pos":13,"type":"cell"}
{"cell_type":"markdown","id":"b7ff6e","input":"Our dataset is from: [https://www.kaggle.com/datasets/jackogozaly/data\\-science\\-and\\-stem\\-salaries?datasetId=1640011&sortBy=voteCount](https://www.kaggle.com/datasets/jackogozaly/data-science-and-stem-salaries?datasetId=1640011&sortBy=voteCount)\n","pos":1,"type":"cell"}
{"id":0,"time":1659465043629,"type":"user"}
{"last_load":1659465042941,"type":"file"}