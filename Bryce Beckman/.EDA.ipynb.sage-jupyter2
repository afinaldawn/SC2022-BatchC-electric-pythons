{"backend_state":"running","connection_file":"/projects/0bcf82e6-7441-4432-a339-19b67c22cc5c/.local/share/jupyter/runtime/kernel-d86490b7-103b-4776-96c6-b56b8d06e036.json","kernel":"ds_env","kernel_error":"","kernel_state":"busy","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1658944098557,"exec_count":1,"id":"2eb102","input":"import pandas as pd\nimport numpy as np","kernel":"ds_env","pos":0,"start":1658944098018,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944099034,"exec_count":2,"id":"db3ddb","input":"df = pd.read_csv(\"Levels_Fyi_Salary_Data.csv\")","kernel":"ds_env","pos":2,"start":1658944098565,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944099088,"exec_count":3,"id":"6ab1ca","input":"df.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>timestamp</th>\n      <th>company</th>\n      <th>level</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>location</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>tag</th>\n      <th>basesalary</th>\n      <th>...</th>\n      <th>Doctorate_Degree</th>\n      <th>Highschool</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>Race</th>\n      <th>Education</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>6/7/2017 11:33:27</td>\n      <td>Oracle</td>\n      <td>L3</td>\n      <td>Product Manager</td>\n      <td>127000</td>\n      <td>Redwood City, CA</td>\n      <td>1.5</td>\n      <td>1.5</td>\n      <td>NaN</td>\n      <td>107000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>6/10/2017 17:11:29</td>\n      <td>eBay</td>\n      <td>SE 2</td>\n      <td>Software Engineer</td>\n      <td>100000</td>\n      <td>San Francisco, CA</td>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>6/11/2017 14:53:57</td>\n      <td>Amazon</td>\n      <td>L7</td>\n      <td>Product Manager</td>\n      <td>310000</td>\n      <td>Seattle, WA</td>\n      <td>8.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>155000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>6/17/2017 0:23:14</td>\n      <td>Apple</td>\n      <td>M1</td>\n      <td>Software Engineering Manager</td>\n      <td>372000</td>\n      <td>Sunnyvale, CA</td>\n      <td>7.0</td>\n      <td>5.0</td>\n      <td>NaN</td>\n      <td>157000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>6/20/2017 10:58:51</td>\n      <td>Microsoft</td>\n      <td>60</td>\n      <td>Software Engineer</td>\n      <td>157000</td>\n      <td>Mountain View, CA</td>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 29 columns</p>\n</div>","text/plain":"            timestamp    company level                         title  \\\n0   6/7/2017 11:33:27     Oracle    L3               Product Manager   \n1  6/10/2017 17:11:29       eBay  SE 2             Software Engineer   \n2  6/11/2017 14:53:57     Amazon    L7               Product Manager   \n3   6/17/2017 0:23:14      Apple    M1  Software Engineering Manager   \n4  6/20/2017 10:58:51  Microsoft    60             Software Engineer   \n\n   totalyearlycompensation           location  yearsofexperience  \\\n0                   127000   Redwood City, CA                1.5   \n1                   100000  San Francisco, CA                5.0   \n2                   310000        Seattle, WA                8.0   \n3                   372000      Sunnyvale, CA                7.0   \n4                   157000  Mountain View, CA                5.0   \n\n   yearsatcompany  tag  basesalary  ...  Doctorate_Degree  Highschool  \\\n0             1.5  NaN    107000.0  ...                 0           0   \n1             3.0  NaN         0.0  ...                 0           0   \n2             0.0  NaN    155000.0  ...                 0           0   \n3             5.0  NaN    157000.0  ...                 0           0   \n4             3.0  NaN         0.0  ...                 0           0   \n\n  Some_College Race_Asian  Race_White  Race_Two_Or_More  Race_Black  \\\n0            0          0           0                 0           0   \n1            0          0           0                 0           0   \n2            0          0           0                 0           0   \n3            0          0           0                 0           0   \n4            0          0           0                 0           0   \n\n   Race_Hispanic  Race  Education  \n0              0   NaN        NaN  \n1              0   NaN        NaN  \n2              0   NaN        NaN  \n3              0   NaN        NaN  \n4              0   NaN        NaN  \n\n[5 rows x 29 columns]"},"exec_count":3}},"pos":3,"start":1658944099055,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944099099,"exec_count":4,"id":"cef696","input":"df.columns","kernel":"ds_env","output":{"0":{"data":{"text/plain":"Index(['timestamp', 'company', 'level', 'title', 'totalyearlycompensation',\n       'location', 'yearsofexperience', 'yearsatcompany', 'tag', 'basesalary',\n       'stockgrantvalue', 'bonus', 'gender', 'otherdetails', 'cityid', 'dmaid',\n       'rowNumber', 'Masters_Degree', 'Bachelors_Degree', 'Doctorate_Degree',\n       'Highschool', 'Some_College', 'Race_Asian', 'Race_White',\n       'Race_Two_Or_More', 'Race_Black', 'Race_Hispanic', 'Race', 'Education'],\n      dtype='object')"},"exec_count":4}},"pos":4,"start":1658944099095,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944099112,"exec_count":5,"id":"1a683c","input":"df['company'].isnull().values.any()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"True"},"exec_count":5}},"pos":5,"start":1658944099108,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944099123,"exec_count":6,"id":"fe6f70","input":"df['company'].isnull().sum()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"5"},"exec_count":6}},"pos":6,"start":1658944099119,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944099136,"exec_count":7,"id":"b8b9eb","input":"len(df)","kernel":"ds_env","output":{"0":{"data":{"text/plain":"62642"},"exec_count":7}},"pos":7,"start":1658944099129,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944099151,"exec_count":8,"id":"606be6","input":"df['level'].isnull().values.any()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"True"},"exec_count":8}},"pos":8,"start":1658944099146,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944099163,"exec_count":9,"id":"60d32f","input":"df['level'].isnull().sum()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"119"},"exec_count":9}},"pos":9,"start":1658944099159,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944099175,"exec_count":10,"id":"17bbf5","input":"df['tag'].isnull().values.any()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"True"},"exec_count":10}},"pos":10,"start":1658944099166,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944099199,"exec_count":11,"id":"b7f731","input":"df['tag'].isnull().sum()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"854"},"exec_count":11}},"pos":11,"start":1658944099182,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944099219,"exec_count":12,"id":"54dd98","input":"df['gender'].isnull().values.any()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"True"},"exec_count":12}},"pos":12,"start":1658944099206,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944099232,"exec_count":13,"id":"bcb3ff","input":"df['gender'].isnull().sum()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"19540"},"exec_count":13}},"pos":13,"start":1658944099228,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944099246,"exec_count":14,"id":"90153f","input":"df['otherdetails'].isnull().values.any()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"True"},"exec_count":14}},"pos":14,"start":1658944099235,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944099259,"exec_count":15,"id":"bf300c","input":"df['otherdetails'].isnull().sum()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"22505"},"exec_count":15}},"pos":15,"start":1658944099256,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944099274,"exec_count":16,"id":"7c48e8","input":"df['dmaid'].isnull().values.any()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"True"},"exec_count":16}},"pos":16,"start":1658944099264,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944099291,"exec_count":17,"id":"86b6c8","input":"df['dmaid'].isnull().sum()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"2"},"exec_count":17}},"pos":17,"start":1658944099281,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944099300,"exec_count":18,"id":"53345e","input":"df['Masters_Degree'].isnull().values.any()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"False"},"exec_count":18}},"pos":18,"start":1658944099295,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944099316,"exec_count":19,"id":"f43107","input":"df['Race'].isnull().values.any()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"True"},"exec_count":19}},"pos":19,"start":1658944099303,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944099329,"exec_count":20,"id":"8fbf2d","input":"df['Race'].isnull().sum()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"40215"},"exec_count":20}},"pos":20,"start":1658944099326,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944099347,"exec_count":21,"id":"ca45ea","input":"df['Education'].isnull().values.any()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"True"},"exec_count":21}},"pos":21,"start":1658944099344,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944099363,"exec_count":22,"id":"900a76","input":"df['Education'].isnull().sum()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"32272"},"exec_count":22}},"pos":22,"start":1658944099357,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944099381,"exec_count":23,"id":"52c482","input":"df = df.drop(['Race','Education','otherdetails','level','tag','dmaid','cityid','timestamp','rowNumber'], axis = 1)","kernel":"ds_env","pos":23,"start":1658944099379,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944099395,"exec_count":24,"id":"50e4ff","input":"df = df[df['basesalary'] != 0.0]","kernel":"ds_env","pos":24,"start":1658944099385,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944099425,"exec_count":25,"id":"d3216d","input":"df.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>location</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>Bachelors_Degree</th>\n      <th>Doctorate_Degree</th>\n      <th>Highschool</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Oracle</td>\n      <td>Product Manager</td>\n      <td>127000</td>\n      <td>Redwood City, CA</td>\n      <td>1.5</td>\n      <td>1.5</td>\n      <td>107000.0</td>\n      <td>20000.0</td>\n      <td>10000.0</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Amazon</td>\n      <td>Product Manager</td>\n      <td>310000</td>\n      <td>Seattle, WA</td>\n      <td>8.0</td>\n      <td>0.0</td>\n      <td>155000.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Apple</td>\n      <td>Software Engineering Manager</td>\n      <td>372000</td>\n      <td>Sunnyvale, CA</td>\n      <td>7.0</td>\n      <td>5.0</td>\n      <td>157000.0</td>\n      <td>180000.0</td>\n      <td>35000.0</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Microsoft</td>\n      <td>Software Engineering Manager</td>\n      <td>300000</td>\n      <td>Redmond, WA</td>\n      <td>15.0</td>\n      <td>11.0</td>\n      <td>180000.0</td>\n      <td>65000.0</td>\n      <td>55000.0</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>156000</td>\n      <td>Seattle, WA</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>135000.0</td>\n      <td>8000.0</td>\n      <td>13000.0</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"     company                         title  totalyearlycompensation  \\\n0     Oracle               Product Manager                   127000   \n2     Amazon               Product Manager                   310000   \n3      Apple  Software Engineering Manager                   372000   \n6  Microsoft  Software Engineering Manager                   300000   \n7  Microsoft             Software Engineer                   156000   \n\n           location  yearsofexperience  yearsatcompany  basesalary  \\\n0  Redwood City, CA                1.5             1.5    107000.0   \n2       Seattle, WA                8.0             0.0    155000.0   \n3     Sunnyvale, CA                7.0             5.0    157000.0   \n6       Redmond, WA               15.0            11.0    180000.0   \n7       Seattle, WA                4.0             4.0    135000.0   \n\n   stockgrantvalue    bonus gender  Masters_Degree  Bachelors_Degree  \\\n0          20000.0  10000.0    NaN               0                 0   \n2              0.0      0.0    NaN               0                 0   \n3         180000.0  35000.0    NaN               0                 0   \n6          65000.0  55000.0    NaN               0                 0   \n7           8000.0  13000.0    NaN               0                 0   \n\n   Doctorate_Degree  Highschool  Some_College  Race_Asian  Race_White  \\\n0                 0           0             0           0           0   \n2                 0           0             0           0           0   \n3                 0           0             0           0           0   \n6                 0           0             0           0           0   \n7                 0           0             0           0           0   \n\n   Race_Two_Or_More  Race_Black  Race_Hispanic  \n0                 0           0              0  \n2                 0           0              0  \n3                 0           0              0  \n6                 0           0              0  \n7                 0           0              0  "},"exec_count":25}},"pos":25,"start":1658944099419,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944099474,"exec_count":26,"id":"7e4ba4","input":"df.dropna(inplace=True)\ndf.reset_index(drop=True, inplace=True)","kernel":"ds_env","pos":26,"start":1658944099429,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944099488,"exec_count":27,"id":"35242e","input":"def check_education(master, bach, doc, high, some):\n    if master == 1:\n        return \"Masters\"\n    elif bach == 1:\n        return \"Bachelors\"\n    elif doc == 1:\n        return \"PHD\"\n    elif high == 1:\n        return 'Highschool'\n    elif some == 1:\n        return \"Some\"\n    else: return \"Missing\"","kernel":"ds_env","pos":27,"start":1658944099485,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944101084,"exec_count":28,"id":"960a57","input":"df['Education'] = df.apply(lambda x: check_education(x.Masters_Degree, x.Bachelors_Degree, x.Doctorate_Degree, x.Highschool, x.Some_College), axis=1)\ndf = df[df['Education'] != 'Missing']\ndf.reset_index(drop=True, inplace=True)","kernel":"ds_env","pos":28,"start":1658944099495,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944101105,"exec_count":29,"id":"41f38c","input":"def check_race(asian, white, two, black, hispanic):\n    if asian == 1:\n        return \"Asian\"\n    elif white == 1:\n        return \"White\"\n    elif two == 1:\n        return \"Two_or_More\"\n    elif black == 1:\n        return 'Black'\n    elif hispanic == 1:\n        return \"Hispanic\"\n    else: return \"Missing\"","kernel":"ds_env","pos":29,"start":1658944101101,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944101999,"exec_count":30,"id":"d776cf","input":"df['Race'] = df.apply(lambda x: check_race(x.Race_Asian, x.Race_White, x.Race_Two_Or_More, x.Race_Black, x.Race_Hispanic), axis=1)\ndf = df[df['Race'] != 'Missing']\ndf.reset_index(drop=True, inplace=True)","kernel":"ds_env","pos":30,"start":1658944101113,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944102027,"exec_count":31,"id":"cbb9f7","input":"df.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>location</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>...</th>\n      <th>Doctorate_Degree</th>\n      <th>Highschool</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>Education</th>\n      <th>Race</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>400000</td>\n      <td>Sunnyvale, CA</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>210000.0</td>\n      <td>145000.0</td>\n      <td>45000.0</td>\n      <td>Male</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>PHD</td>\n      <td>Asian</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>136000</td>\n      <td>Redmond, WA</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>124000.0</td>\n      <td>1000.0</td>\n      <td>11000.0</td>\n      <td>Male</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Bachelors</td>\n      <td>Two_or_More</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>337000</td>\n      <td>San Bruno, CA</td>\n      <td>6.0</td>\n      <td>6.0</td>\n      <td>177000.0</td>\n      <td>125000.0</td>\n      <td>36000.0</td>\n      <td>Male</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Bachelors</td>\n      <td>Asian</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>222000</td>\n      <td>Seattle, WA</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>164000.0</td>\n      <td>38000.0</td>\n      <td>20000.0</td>\n      <td>Male</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Masters</td>\n      <td>Asian</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Blend</td>\n      <td>Software Engineer</td>\n      <td>187000</td>\n      <td>San Francisco, CA</td>\n      <td>5.0</td>\n      <td>0.0</td>\n      <td>165000.0</td>\n      <td>22000.0</td>\n      <td>0.0</td>\n      <td>Male</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Bachelors</td>\n      <td>White</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 22 columns</p>\n</div>","text/plain":"     company              title  totalyearlycompensation           location  \\\n0     Google  Software Engineer                   400000      Sunnyvale, CA   \n1  Microsoft  Software Engineer                   136000        Redmond, WA   \n2     Google  Software Engineer                   337000      San Bruno, CA   \n3  Microsoft  Software Engineer                   222000        Seattle, WA   \n4      Blend  Software Engineer                   187000  San Francisco, CA   \n\n   yearsofexperience  yearsatcompany  basesalary  stockgrantvalue    bonus  \\\n0                5.0             5.0    210000.0         145000.0  45000.0   \n1                3.0             2.0    124000.0           1000.0  11000.0   \n2                6.0             6.0    177000.0         125000.0  36000.0   \n3                4.0             4.0    164000.0          38000.0  20000.0   \n4                5.0             0.0    165000.0          22000.0      0.0   \n\n  gender  ...  Doctorate_Degree  Highschool  Some_College  Race_Asian  \\\n0   Male  ...                 1           0             0           1   \n1   Male  ...                 0           0             0           0   \n2   Male  ...                 0           0             0           1   \n3   Male  ...                 0           0             0           1   \n4   Male  ...                 0           0             0           0   \n\n   Race_White  Race_Two_Or_More  Race_Black  Race_Hispanic  Education  \\\n0           0                 0           0              0        PHD   \n1           0                 1           0              0  Bachelors   \n2           0                 0           0              0  Bachelors   \n3           0                 0           0              0    Masters   \n4           1                 0           0              0  Bachelors   \n\n          Race  \n0        Asian  \n1  Two_or_More  \n2        Asian  \n3        Asian  \n4        White  \n\n[5 rows x 22 columns]"},"exec_count":31}},"pos":31,"start":1658944102010,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944102050,"exec_count":32,"id":"61aa09","input":"df['company'].isnull().values.any()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"False"},"exec_count":32}},"pos":32,"start":1658944102031,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944102068,"exec_count":33,"id":"be748f","input":"len(df)","kernel":"ds_env","output":{"0":{"data":{"text/plain":"21589"},"exec_count":33}},"pos":33,"start":1658944102055,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944102083,"exec_count":34,"id":"4e291e","input":"df['company'].value_counts()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"Amazon               2583\nMicrosoft            1619\nGoogle               1314\nFacebook             1001\nApple                 603\n                     ... \nEverQuote               1\nCollins aerospace       1\nbank of america         1\nAma                     1\nAmgen                   1\nName: company, Length: 1246, dtype: int64"},"exec_count":34}},"pos":34,"start":1658944102074,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944102111,"exec_count":35,"id":"afff63","input":"df['gender'].value_counts()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"Male      17603\nFemale     3880\nOther       106\nName: gender, dtype: int64"},"exec_count":35}},"pos":35,"start":1658944102086,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944102130,"exec_count":36,"id":"89085f","input":"df['Race_Asian'].value_counts()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"1    11414\n0    10175\nName: Race_Asian, dtype: int64"},"exec_count":36}},"pos":36,"start":1658944102127,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944102141,"exec_count":37,"id":"7bc2d7","input":"df['Race_Black'].value_counts()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"0    20927\n1      662\nName: Race_Black, dtype: int64"},"exec_count":37}},"pos":37,"start":1658944102133,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944102151,"exec_count":38,"id":"0e15f4","input":"df['Race_White'].value_counts()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"0    13909\n1     7680\nName: Race_White, dtype: int64"},"exec_count":38}},"pos":38,"start":1658944102144,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944102161,"exec_count":39,"id":"dd6ccc","input":"df['Race_Two_Or_More'].value_counts()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"0    20823\n1      766\nName: Race_Two_Or_More, dtype: int64"},"exec_count":39}},"pos":39,"start":1658944102154,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944102171,"exec_count":40,"id":"f3cf0a","input":"df['Race_Hispanic'].value_counts()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"0    20521\n1     1068\nName: Race_Hispanic, dtype: int64"},"exec_count":40}},"pos":40,"start":1658944102164,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944102184,"exec_count":41,"id":"e40414","input":"#Only 12,310 people have a race value","kernel":"ds_env","pos":41,"start":1658944102183,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944102193,"exec_count":42,"id":"e6b62c","input":"def get_state(x):\n    words = x.split(', ')\n    state = words[1]\n    if state == 'CA':\n        return 'CA'\n    elif state == 'WA':\n        return 'WA'\n    else: return 'Other'","kernel":"ds_env","pos":42,"start":1658944102188,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944102215,"exec_count":43,"id":"c38464","input":"df['state'] = df['location'].apply(get_state)\ndf.drop(['location'], axis = 1, inplace = True)","kernel":"ds_env","pos":43,"start":1658944102199,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944102244,"exec_count":44,"id":"9d107b","input":"top_15_popular = list(df['company'].value_counts().index)[:15]\ndef in_popular(x):\n    if x in top_15_popular:\n        return True\n    else:\n        return False\n\ndf['in_top_15'] = df['company'].apply(in_popular)","kernel":"ds_env","pos":44,"start":1658944102218,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944102261,"exec_count":45,"id":"582df7","input":"df['state'].value_counts()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"Other    11503\nCA        6534\nWA        3552\nName: state, dtype: int64"},"exec_count":45}},"pos":45,"start":1658944102247,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944102282,"exec_count":46,"id":"bab040","input":"df.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>...</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>Education</th>\n      <th>Race</th>\n      <th>state</th>\n      <th>in_top_15</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>400000</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>210000.0</td>\n      <td>145000.0</td>\n      <td>45000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>PHD</td>\n      <td>Asian</td>\n      <td>CA</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>136000</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>124000.0</td>\n      <td>1000.0</td>\n      <td>11000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Bachelors</td>\n      <td>Two_or_More</td>\n      <td>WA</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>337000</td>\n      <td>6.0</td>\n      <td>6.0</td>\n      <td>177000.0</td>\n      <td>125000.0</td>\n      <td>36000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Bachelors</td>\n      <td>Asian</td>\n      <td>CA</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>222000</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>164000.0</td>\n      <td>38000.0</td>\n      <td>20000.0</td>\n      <td>Male</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Masters</td>\n      <td>Asian</td>\n      <td>WA</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Blend</td>\n      <td>Software Engineer</td>\n      <td>187000</td>\n      <td>5.0</td>\n      <td>0.0</td>\n      <td>165000.0</td>\n      <td>22000.0</td>\n      <td>0.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Bachelors</td>\n      <td>White</td>\n      <td>CA</td>\n      <td>False</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 23 columns</p>\n</div>","text/plain":"     company              title  totalyearlycompensation  yearsofexperience  \\\n0     Google  Software Engineer                   400000                5.0   \n1  Microsoft  Software Engineer                   136000                3.0   \n2     Google  Software Engineer                   337000                6.0   \n3  Microsoft  Software Engineer                   222000                4.0   \n4      Blend  Software Engineer                   187000                5.0   \n\n   yearsatcompany  basesalary  stockgrantvalue    bonus gender  \\\n0             5.0    210000.0         145000.0  45000.0   Male   \n1             2.0    124000.0           1000.0  11000.0   Male   \n2             6.0    177000.0         125000.0  36000.0   Male   \n3             4.0    164000.0          38000.0  20000.0   Male   \n4             0.0    165000.0          22000.0      0.0   Male   \n\n   Masters_Degree  ...  Some_College  Race_Asian  Race_White  \\\n0               0  ...             0           1           0   \n1               0  ...             0           0           0   \n2               0  ...             0           1           0   \n3               1  ...             0           1           0   \n4               0  ...             0           0           1   \n\n   Race_Two_Or_More  Race_Black  Race_Hispanic  Education         Race  state  \\\n0                 0           0              0        PHD        Asian     CA   \n1                 1           0              0  Bachelors  Two_or_More     WA   \n2                 0           0              0  Bachelors        Asian     CA   \n3                 0           0              0    Masters        Asian     WA   \n4                 0           0              0  Bachelors        White     CA   \n\n  in_top_15  \n0      True  \n1      True  \n2      True  \n3      True  \n4     False  \n\n[5 rows x 23 columns]"},"exec_count":46}},"pos":46,"start":1658944102264,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944102488,"exec_count":47,"id":"8db42d","input":"import plotly.express as px","kernel":"ds_env","pos":47,"start":1658944102286,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944102510,"exec_count":48,"id":"dec75d","input":"df = df[df['gender'] != 'Title: Senior Software Engineer']\ndf['gender'].value_counts()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"Male      17603\nFemale     3880\nOther       106\nName: gender, dtype: int64"},"exec_count":48}},"pos":48,"start":1658944102501,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944102523,"exec_count":49,"id":"91acc4","input":"df = df[df['basesalary'] != 1620000]","kernel":"ds_env","pos":49,"start":1658944102513,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944102546,"exec_count":50,"id":"8c8a73","input":"df[df['totalyearlycompensation'] >= 4000000]","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>...</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>Education</th>\n      <th>Race</th>\n      <th>state</th>\n      <th>in_top_15</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>21585</th>\n      <td>Google</td>\n      <td>Product Manager</td>\n      <td>4500000</td>\n      <td>20.0</td>\n      <td>14.0</td>\n      <td>450000.0</td>\n      <td>3700.0</td>\n      <td>350000.0</td>\n      <td>Male</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Masters</td>\n      <td>Asian</td>\n      <td>CA</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>21588</th>\n      <td>Facebook</td>\n      <td>Product Manager</td>\n      <td>4980000</td>\n      <td>17.0</td>\n      <td>0.0</td>\n      <td>380000.0</td>\n      <td>4400.0</td>\n      <td>200000.0</td>\n      <td>Male</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Masters</td>\n      <td>Asian</td>\n      <td>CA</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n<p>2 rows Ã— 23 columns</p>\n</div>","text/plain":"        company            title  totalyearlycompensation  yearsofexperience  \\\n21585    Google  Product Manager                  4500000               20.0   \n21588  Facebook  Product Manager                  4980000               17.0   \n\n       yearsatcompany  basesalary  stockgrantvalue     bonus gender  \\\n21585            14.0    450000.0           3700.0  350000.0   Male   \n21588             0.0    380000.0           4400.0  200000.0   Male   \n\n       Masters_Degree  ...  Some_College  Race_Asian  Race_White  \\\n21585               1  ...             0           1           0   \n21588               1  ...             0           1           0   \n\n       Race_Two_Or_More  Race_Black  Race_Hispanic  Education   Race  state  \\\n21585                 0           0              0    Masters  Asian     CA   \n21588                 0           0              0    Masters  Asian     CA   \n\n      in_top_15  \n21585      True  \n21588      True  \n\n[2 rows x 23 columns]"},"exec_count":50}},"pos":50,"start":1658944102528,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944102557,"exec_count":51,"id":"d63b86","input":"df = df[df['totalyearlycompensation'] != 4500000]","kernel":"ds_env","pos":51,"start":1658944102552,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944102767,"exec_count":52,"id":"e76a4c","input":"df = df[df['totalyearlycompensation'] != 4980000]","kernel":"ds_env","pos":52,"start":1658944102561,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944102809,"exec_count":53,"id":"cf729f","input":"df = df[df['totalyearlycompensation'] != 4950000]","kernel":"ds_env","pos":53,"start":1658944102789,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944103416,"exec_count":54,"id":"daab34","input":"fig = px.scatter(df, x='basesalary',  y='totalyearlycompensation', title='Gender and salaries', color='gender')\nfig.show()","kernel":"ds_env","output":{"0":{"data":{"iframe":"6f4ceec67399e1fee18914b98961dd7a068567c3"}}},"pos":54,"start":1658944102850,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944103434,"exec_count":55,"id":"6e9a69","input":"averagebs = df.groupby('title')['basesalary'].mean().to_frame\naveragebs","kernel":"ds_env","output":{"0":{"data":{"text/plain":"<bound method Series.to_frame of title\nBusiness Analyst                101552.808989\nData Scientist                  137536.000000\nHardware Engineer               134035.759898\nHuman Resources                 132343.195266\nManagement Consultant           135655.555556\nMarketing                       137563.888889\nMechanical Engineer             117227.450980\nProduct Designer                140748.752080\nProduct Manager                 150148.173673\nRecruiter                       114929.906542\nSales                           113527.522936\nSoftware Engineer               128797.999708\nSoftware Engineering Manager    178686.523438\nSolution Architect              142418.092910\nTechnical Program Manager       155300.787402\nName: basesalary, dtype: float64>"},"exec_count":55}},"pos":55,"start":1658944103423,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944103450,"exec_count":56,"id":"ca8e58","input":"averagebs = df.groupby('title')['basesalary'].mean().to_frame().reset_index()\naveragebs","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>title</th>\n      <th>basesalary</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Business Analyst</td>\n      <td>101552.808989</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Data Scientist</td>\n      <td>137536.000000</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Hardware Engineer</td>\n      <td>134035.759898</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Human Resources</td>\n      <td>132343.195266</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Management Consultant</td>\n      <td>135655.555556</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Marketing</td>\n      <td>137563.888889</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Mechanical Engineer</td>\n      <td>117227.450980</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Product Designer</td>\n      <td>140748.752080</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Product Manager</td>\n      <td>150148.173673</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Recruiter</td>\n      <td>114929.906542</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>Sales</td>\n      <td>113527.522936</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>Software Engineer</td>\n      <td>128797.999708</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>Software Engineering Manager</td>\n      <td>178686.523438</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>Solution Architect</td>\n      <td>142418.092910</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>Technical Program Manager</td>\n      <td>155300.787402</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"                           title     basesalary\n0               Business Analyst  101552.808989\n1                 Data Scientist  137536.000000\n2              Hardware Engineer  134035.759898\n3                Human Resources  132343.195266\n4          Management Consultant  135655.555556\n5                      Marketing  137563.888889\n6            Mechanical Engineer  117227.450980\n7               Product Designer  140748.752080\n8                Product Manager  150148.173673\n9                      Recruiter  114929.906542\n10                         Sales  113527.522936\n11             Software Engineer  128797.999708\n12  Software Engineering Manager  178686.523438\n13            Solution Architect  142418.092910\n14     Technical Program Manager  155300.787402"},"exec_count":56}},"pos":56,"start":1658944103440,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944103525,"exec_count":57,"id":"0f3854","input":"fig = px.bar(averagebs, x='title', y='basesalary', title='Job title and their average base salaries')\nfig.update_xaxes(categoryorder='mean ascending')\nfig.show()","kernel":"ds_env","output":{"0":{"data":{"iframe":"39482fee22542cde9f9066796c06464fbae16991"}}},"pos":57,"start":1658944103477,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944103652,"exec_count":58,"id":"2fc4f3","input":"fig = px.pie(df, names='title', title='Most common job titles')\nfig.show()","kernel":"ds_env","output":{"0":{"data":{"iframe":"207ff56a7216659221a727c351237bb296263de8"}}},"pos":58,"start":1658944103530,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944103673,"exec_count":59,"id":"ac7793","input":"bf = df[df['company'] == 'Google']\nbf.groupby('gender')['totalyearlycompensation'].mean()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"gender\nFemale    247504.201681\nMale      274734.770384\nOther     299875.000000\nName: totalyearlycompensation, dtype: float64"},"exec_count":59}},"pos":59,"scrolled":true,"start":1658944103661,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944103701,"exec_count":60,"id":"bee95b","input":"bf.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>...</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>Education</th>\n      <th>Race</th>\n      <th>state</th>\n      <th>in_top_15</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>400000</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>210000.0</td>\n      <td>145000.0</td>\n      <td>45000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>PHD</td>\n      <td>Asian</td>\n      <td>CA</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>337000</td>\n      <td>6.0</td>\n      <td>6.0</td>\n      <td>177000.0</td>\n      <td>125000.0</td>\n      <td>36000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Bachelors</td>\n      <td>Asian</td>\n      <td>CA</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>46000</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>27000.0</td>\n      <td>12000.0</td>\n      <td>4000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Bachelors</td>\n      <td>Asian</td>\n      <td>Other</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>59</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>289000</td>\n      <td>6.0</td>\n      <td>1.0</td>\n      <td>163000.0</td>\n      <td>100000.0</td>\n      <td>24000.0</td>\n      <td>Male</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Masters</td>\n      <td>Asian</td>\n      <td>CA</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>80</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>354000</td>\n      <td>12.0</td>\n      <td>12.0</td>\n      <td>183000.0</td>\n      <td>134000.0</td>\n      <td>37000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>PHD</td>\n      <td>Asian</td>\n      <td>CA</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 23 columns</p>\n</div>","text/plain":"   company              title  totalyearlycompensation  yearsofexperience  \\\n0   Google  Software Engineer                   400000                5.0   \n2   Google  Software Engineer                   337000                6.0   \n26  Google  Software Engineer                    46000                2.0   \n59  Google  Software Engineer                   289000                6.0   \n80  Google  Software Engineer                   354000               12.0   \n\n    yearsatcompany  basesalary  stockgrantvalue    bonus gender  \\\n0              5.0    210000.0         145000.0  45000.0   Male   \n2              6.0    177000.0         125000.0  36000.0   Male   \n26             0.0     27000.0          12000.0   4000.0   Male   \n59             1.0    163000.0         100000.0  24000.0   Male   \n80            12.0    183000.0         134000.0  37000.0   Male   \n\n    Masters_Degree  ...  Some_College  Race_Asian  Race_White  \\\n0                0  ...             0           1           0   \n2                0  ...             0           1           0   \n26               0  ...             0           1           0   \n59               1  ...             0           1           0   \n80               0  ...             0           1           0   \n\n    Race_Two_Or_More  Race_Black  Race_Hispanic  Education   Race  state  \\\n0                  0           0              0        PHD  Asian     CA   \n2                  0           0              0  Bachelors  Asian     CA   \n26                 0           0              0  Bachelors  Asian  Other   \n59                 0           0              0    Masters  Asian     CA   \n80                 0           0              0        PHD  Asian     CA   \n\n   in_top_15  \n0       True  \n2       True  \n26      True  \n59      True  \n80      True  \n\n[5 rows x 23 columns]"},"exec_count":60}},"pos":60,"start":1658944103677,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944103720,"exec_count":61,"id":"928438","input":"df['bonus'].describe()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"count     21587.000000\nmean      18392.967990\nstd       24952.597934\nmin           0.000000\n25%        3000.000000\n50%       13000.000000\n75%       25000.000000\nmax      900000.000000\nName: bonus, dtype: float64"},"exec_count":61}},"pos":61,"start":1658944103708,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944103732,"exec_count":62,"id":"cc03fb","input":"df['Education'].value_counts()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"Bachelors     10931\nMasters        9092\nPHD             924\nSome            339\nHighschool      301\nName: Education, dtype: int64"},"exec_count":62}},"pos":62,"start":1658944103724,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944103742,"exec_count":63,"id":"97c55a","input":"len(df)","kernel":"ds_env","output":{"0":{"data":{"text/plain":"21587"},"exec_count":63}},"pos":63,"start":1658944103735,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944103756,"exec_count":64,"id":"8bc0ae","input":"print(df['gender'].unique())\nprint(df['title'].unique())\nprint(df['state'].unique())","kernel":"ds_env","output":{"0":{"name":"stdout","text":"['Male' 'Female' 'Other']\n['Software Engineer' 'Software Engineering Manager' 'Hardware Engineer'\n 'Product Designer' 'Management Consultant' 'Product Manager'\n 'Solution Architect' 'Sales' 'Technical Program Manager' 'Data Scientist'\n 'Recruiter' 'Mechanical Engineer' 'Business Analyst' 'Human Resources'\n 'Marketing']\n['CA' 'WA' 'Other']\n"}},"pos":64,"start":1658944103750,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944103804,"exec_count":65,"id":"b8e9d3","input":"one_hot_encoded_data = pd.get_dummies(df, columns = ['title', 'gender', 'state'])\nprint(one_hot_encoded_data)","kernel":"ds_env","output":{"0":{"name":"stdout","text":"         company  totalyearlycompensation  yearsofexperience  yearsatcompany  \\\n0         Google                   400000                5.0             5.0   \n1      Microsoft                   136000                3.0             2.0   \n2         Google                   337000                6.0             6.0   \n3      Microsoft                   222000                4.0             4.0   \n4          Blend                   187000                5.0             0.0   \n...          ...                      ...                ...             ...   \n21582       Snap                  1400000                5.0             4.0   \n21583   Broadcom                  1470000               21.0             9.0   \n21584   Facebook                  1470000                9.0             7.0   \n21586     Zapier                  1605000               16.0             2.0   \n21587   Facebook                  2372000               22.0             2.0   \n\n       basesalary  stockgrantvalue     bonus  Masters_Degree  \\\n0        210000.0         145000.0   45000.0               0   \n1        124000.0           1000.0   11000.0               0   \n2        177000.0         125000.0   36000.0               0   \n3        164000.0          38000.0   20000.0               1   \n4        165000.0          22000.0       0.0               0   \n...           ...              ...       ...             ...   \n21582    235000.0           1165.0       0.0               0   \n21583    220000.0           1100.0  150000.0               1   \n21584    290000.0           1100.0   80000.0               0   \n21586    250000.0           1305.0   50000.0               1   \n21587    315000.0           1933.0  124000.0               1   \n\n       Bachelors_Degree  Doctorate_Degree  ...  title_Software Engineer  \\\n0                     0                 1  ...                        1   \n1                     1                 0  ...                        1   \n2                     1                 0  ...                        1   \n3                     0                 0  ...                        1   \n4                     1                 0  ...                        1   \n...                 ...               ...  ...                      ...   \n21582                 1                 0  ...                        0   \n21583                 0                 0  ...                        0   \n21584                 1                 0  ...                        0   \n21586                 0                 0  ...                        0   \n21587                 0                 0  ...                        0   \n\n       title_Software Engineering Manager  title_Solution Architect  \\\n0                                       0                         0   \n1                                       0                         0   \n2                                       0                         0   \n3                                       0                         0   \n4                                       0                         0   \n...                                   ...                       ...   \n21582                                   1                         0   \n21583                                   0                         0   \n21584                                   1                         0   \n21586                                   1                         0   \n21587                                   1                         0   \n\n       title_Technical Program Manager  gender_Female  gender_Male  \\\n0                                    0              0            1   \n1                                    0              0            1   \n2                                    0              0            1   \n3                                    0              0            1   \n4                                    0              0            1   \n...                                ...            ...          ...   \n21582                                0              0            1   \n21583                                0              0            1   \n21584                                0              0            1   \n21586                                0              1            0   \n21587                                0              0            1   \n\n       gender_Other state_CA state_Other  state_WA  \n0                 0        1           0         0  \n1                 0        0           0         1  \n2                 0        1           0         0  \n3                 0        0           0         1  \n4                 0        1           0         0  \n...             ...      ...         ...       ...  \n21582             0        1           0         0  \n21583             0        1           0         0  \n21584             0        1           0         0  \n21586             0        0           1         0  \n21587             0        1           0         0  \n\n[21587 rows x 41 columns]\n"}},"pos":65,"start":1658944103772,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944103820,"exec_count":66,"id":"555bc9","input":"df['gender']=df['gender'].astype('category')\ndf['title']=df['title'].astype('category')\ndf['state']=df['state'].astype('category')","kernel":"ds_env","pos":66,"start":1658944103810,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944103830,"exec_count":67,"id":"1c0137","input":"df['gen_new']=df['gender'].cat.codes\ndf['tit_new']=df['title'].cat.codes\ndf['sta_new']=df['state'].cat.codes","kernel":"ds_env","pos":67,"start":1658944103825,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944104232,"exec_count":68,"id":"917376","input":"from sklearn.preprocessing import OneHotEncoder\nenc=OneHotEncoder()","kernel":"ds_env","pos":68,"start":1658944103833,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944104260,"exec_count":69,"id":"a35288","input":"enc_df=pd.DataFrame(enc.fit_transform(df[['gen_new','tit_new','sta_new']]).toarray())","kernel":"ds_env","pos":69,"start":1658944104244,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944104292,"exec_count":70,"id":"83c518","input":"df.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>...</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>Education</th>\n      <th>Race</th>\n      <th>state</th>\n      <th>in_top_15</th>\n      <th>gen_new</th>\n      <th>tit_new</th>\n      <th>sta_new</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>400000</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>210000.0</td>\n      <td>145000.0</td>\n      <td>45000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>PHD</td>\n      <td>Asian</td>\n      <td>CA</td>\n      <td>True</td>\n      <td>1</td>\n      <td>11</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>136000</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>124000.0</td>\n      <td>1000.0</td>\n      <td>11000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Bachelors</td>\n      <td>Two_or_More</td>\n      <td>WA</td>\n      <td>True</td>\n      <td>1</td>\n      <td>11</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>337000</td>\n      <td>6.0</td>\n      <td>6.0</td>\n      <td>177000.0</td>\n      <td>125000.0</td>\n      <td>36000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Bachelors</td>\n      <td>Asian</td>\n      <td>CA</td>\n      <td>True</td>\n      <td>1</td>\n      <td>11</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>222000</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>164000.0</td>\n      <td>38000.0</td>\n      <td>20000.0</td>\n      <td>Male</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Masters</td>\n      <td>Asian</td>\n      <td>WA</td>\n      <td>True</td>\n      <td>1</td>\n      <td>11</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Blend</td>\n      <td>Software Engineer</td>\n      <td>187000</td>\n      <td>5.0</td>\n      <td>0.0</td>\n      <td>165000.0</td>\n      <td>22000.0</td>\n      <td>0.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Bachelors</td>\n      <td>White</td>\n      <td>CA</td>\n      <td>False</td>\n      <td>1</td>\n      <td>11</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 26 columns</p>\n</div>","text/plain":"     company              title  totalyearlycompensation  yearsofexperience  \\\n0     Google  Software Engineer                   400000                5.0   \n1  Microsoft  Software Engineer                   136000                3.0   \n2     Google  Software Engineer                   337000                6.0   \n3  Microsoft  Software Engineer                   222000                4.0   \n4      Blend  Software Engineer                   187000                5.0   \n\n   yearsatcompany  basesalary  stockgrantvalue    bonus gender  \\\n0             5.0    210000.0         145000.0  45000.0   Male   \n1             2.0    124000.0           1000.0  11000.0   Male   \n2             6.0    177000.0         125000.0  36000.0   Male   \n3             4.0    164000.0          38000.0  20000.0   Male   \n4             0.0    165000.0          22000.0      0.0   Male   \n\n   Masters_Degree  ...  Race_Two_Or_More  Race_Black  Race_Hispanic  \\\n0               0  ...                 0           0              0   \n1               0  ...                 1           0              0   \n2               0  ...                 0           0              0   \n3               1  ...                 0           0              0   \n4               0  ...                 0           0              0   \n\n   Education         Race  state  in_top_15  gen_new  tit_new sta_new  \n0        PHD        Asian     CA       True        1       11       0  \n1  Bachelors  Two_or_More     WA       True        1       11       2  \n2  Bachelors        Asian     CA       True        1       11       0  \n3    Masters        Asian     WA       True        1       11       2  \n4  Bachelors        White     CA      False        1       11       0  \n\n[5 rows x 26 columns]"},"exec_count":70}},"pos":70,"start":1658944104266,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944104335,"exec_count":71,"id":"cb0eba","input":"one_hot_encoded_df = pd.get_dummies(df, columns = ['gender'])\nprint(one_hot_encoded_df)","kernel":"ds_env","output":{"0":{"name":"stdout","text":"         company                         title  totalyearlycompensation  \\\n0         Google             Software Engineer                   400000   \n1      Microsoft             Software Engineer                   136000   \n2         Google             Software Engineer                   337000   \n3      Microsoft             Software Engineer                   222000   \n4          Blend             Software Engineer                   187000   \n...          ...                           ...                      ...   \n21582       Snap  Software Engineering Manager                  1400000   \n21583   Broadcom                     Marketing                  1470000   \n21584   Facebook  Software Engineering Manager                  1470000   \n21586     Zapier  Software Engineering Manager                  1605000   \n21587   Facebook  Software Engineering Manager                  2372000   \n\n       yearsofexperience  yearsatcompany  basesalary  stockgrantvalue  \\\n0                    5.0             5.0    210000.0         145000.0   \n1                    3.0             2.0    124000.0           1000.0   \n2                    6.0             6.0    177000.0         125000.0   \n3                    4.0             4.0    164000.0          38000.0   \n4                    5.0             0.0    165000.0          22000.0   \n...                  ...             ...         ...              ...   \n21582                5.0             4.0    235000.0           1165.0   \n21583               21.0             9.0    220000.0           1100.0   \n21584                9.0             7.0    290000.0           1100.0   \n21586               16.0             2.0    250000.0           1305.0   \n21587               22.0             2.0    315000.0           1933.0   \n\n          bonus  Masters_Degree  Bachelors_Degree  ...  Education  \\\n0       45000.0               0                 0  ...        PHD   \n1       11000.0               0                 1  ...  Bachelors   \n2       36000.0               0                 1  ...  Bachelors   \n3       20000.0               1                 0  ...    Masters   \n4           0.0               0                 1  ...  Bachelors   \n...         ...             ...               ...  ...        ...   \n21582       0.0               0                 1  ...  Bachelors   \n21583  150000.0               1                 0  ...    Masters   \n21584   80000.0               0                 1  ...  Bachelors   \n21586   50000.0               1                 0  ...    Masters   \n21587  124000.0               1                 0  ...    Masters   \n\n              Race  state  in_top_15  gen_new  tit_new  sta_new  \\\n0            Asian     CA       True        1       11        0   \n1      Two_or_More     WA       True        1       11        2   \n2            Asian     CA       True        1       11        0   \n3            Asian     WA       True        1       11        2   \n4            White     CA      False        1       11        0   \n...            ...    ...        ...      ...      ...      ...   \n21582        White     CA      False        1       12        0   \n21583        White     CA      False        1        5        0   \n21584        Asian     CA       True        1       12        0   \n21586        White  Other      False        0       12        1   \n21587        Black     CA       True        1       12        0   \n\n       gender_Female gender_Male gender_Other  \n0                  0           1            0  \n1                  0           1            0  \n2                  0           1            0  \n3                  0           1            0  \n4                  0           1            0  \n...              ...         ...          ...  \n21582              0           1            0  \n21583              0           1            0  \n21584              0           1            0  \n21586              1           0            0  \n21587              0           1            0  \n\n[21587 rows x 28 columns]\n"}},"pos":71,"start":1658944104298,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944104361,"exec_count":72,"id":"a4dca3","input":"df['Female_gender'] = one_hot_encoded_df['gender_Female']\ndf['Male_gender'] = one_hot_encoded_df['gender_Male']\ndf['Other_Gender'] = one_hot_encoded_df['gender_Other']\ndf.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>...</th>\n      <th>Education</th>\n      <th>Race</th>\n      <th>state</th>\n      <th>in_top_15</th>\n      <th>gen_new</th>\n      <th>tit_new</th>\n      <th>sta_new</th>\n      <th>Female_gender</th>\n      <th>Male_gender</th>\n      <th>Other_Gender</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>400000</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>210000.0</td>\n      <td>145000.0</td>\n      <td>45000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>PHD</td>\n      <td>Asian</td>\n      <td>CA</td>\n      <td>True</td>\n      <td>1</td>\n      <td>11</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>136000</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>124000.0</td>\n      <td>1000.0</td>\n      <td>11000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>Bachelors</td>\n      <td>Two_or_More</td>\n      <td>WA</td>\n      <td>True</td>\n      <td>1</td>\n      <td>11</td>\n      <td>2</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>337000</td>\n      <td>6.0</td>\n      <td>6.0</td>\n      <td>177000.0</td>\n      <td>125000.0</td>\n      <td>36000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>Bachelors</td>\n      <td>Asian</td>\n      <td>CA</td>\n      <td>True</td>\n      <td>1</td>\n      <td>11</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>222000</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>164000.0</td>\n      <td>38000.0</td>\n      <td>20000.0</td>\n      <td>Male</td>\n      <td>1</td>\n      <td>...</td>\n      <td>Masters</td>\n      <td>Asian</td>\n      <td>WA</td>\n      <td>True</td>\n      <td>1</td>\n      <td>11</td>\n      <td>2</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Blend</td>\n      <td>Software Engineer</td>\n      <td>187000</td>\n      <td>5.0</td>\n      <td>0.0</td>\n      <td>165000.0</td>\n      <td>22000.0</td>\n      <td>0.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>Bachelors</td>\n      <td>White</td>\n      <td>CA</td>\n      <td>False</td>\n      <td>1</td>\n      <td>11</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 29 columns</p>\n</div>","text/plain":"     company              title  totalyearlycompensation  yearsofexperience  \\\n0     Google  Software Engineer                   400000                5.0   \n1  Microsoft  Software Engineer                   136000                3.0   \n2     Google  Software Engineer                   337000                6.0   \n3  Microsoft  Software Engineer                   222000                4.0   \n4      Blend  Software Engineer                   187000                5.0   \n\n   yearsatcompany  basesalary  stockgrantvalue    bonus gender  \\\n0             5.0    210000.0         145000.0  45000.0   Male   \n1             2.0    124000.0           1000.0  11000.0   Male   \n2             6.0    177000.0         125000.0  36000.0   Male   \n3             4.0    164000.0          38000.0  20000.0   Male   \n4             0.0    165000.0          22000.0      0.0   Male   \n\n   Masters_Degree  ...  Education         Race  state  in_top_15  gen_new  \\\n0               0  ...        PHD        Asian     CA       True        1   \n1               0  ...  Bachelors  Two_or_More     WA       True        1   \n2               0  ...  Bachelors        Asian     CA       True        1   \n3               1  ...    Masters        Asian     WA       True        1   \n4               0  ...  Bachelors        White     CA      False        1   \n\n   tit_new  sta_new  Female_gender  Male_gender Other_Gender  \n0       11        0              0            1            0  \n1       11        2              0            1            0  \n2       11        0              0            1            0  \n3       11        2              0            1            0  \n4       11        0              0            1            0  \n\n[5 rows x 29 columns]"},"exec_count":72}},"pos":72,"start":1658944104341,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944104395,"exec_count":73,"id":"d2c4a0","input":"one_hot_encoded_df = pd.get_dummies(df, columns = ['state'])\nprint(one_hot_encoded_df)","kernel":"ds_env","output":{"0":{"name":"stdout","text":"         company                         title  totalyearlycompensation  \\\n0         Google             Software Engineer                   400000   \n1      Microsoft             Software Engineer                   136000   \n2         Google             Software Engineer                   337000   \n3      Microsoft             Software Engineer                   222000   \n4          Blend             Software Engineer                   187000   \n...          ...                           ...                      ...   \n21582       Snap  Software Engineering Manager                  1400000   \n21583   Broadcom                     Marketing                  1470000   \n21584   Facebook  Software Engineering Manager                  1470000   \n21586     Zapier  Software Engineering Manager                  1605000   \n21587   Facebook  Software Engineering Manager                  2372000   \n\n       yearsofexperience  yearsatcompany  basesalary  stockgrantvalue  \\\n0                    5.0             5.0    210000.0         145000.0   \n1                    3.0             2.0    124000.0           1000.0   \n2                    6.0             6.0    177000.0         125000.0   \n3                    4.0             4.0    164000.0          38000.0   \n4                    5.0             0.0    165000.0          22000.0   \n...                  ...             ...         ...              ...   \n21582                5.0             4.0    235000.0           1165.0   \n21583               21.0             9.0    220000.0           1100.0   \n21584                9.0             7.0    290000.0           1100.0   \n21586               16.0             2.0    250000.0           1305.0   \n21587               22.0             2.0    315000.0           1933.0   \n\n          bonus  gender  Masters_Degree  ...  in_top_15  gen_new  tit_new  \\\n0       45000.0    Male               0  ...       True        1       11   \n1       11000.0    Male               0  ...       True        1       11   \n2       36000.0    Male               0  ...       True        1       11   \n3       20000.0    Male               1  ...       True        1       11   \n4           0.0    Male               0  ...      False        1       11   \n...         ...     ...             ...  ...        ...      ...      ...   \n21582       0.0    Male               0  ...      False        1       12   \n21583  150000.0    Male               1  ...      False        1        5   \n21584   80000.0    Male               0  ...       True        1       12   \n21586   50000.0  Female               1  ...      False        0       12   \n21587  124000.0    Male               1  ...       True        1       12   \n\n       sta_new  Female_gender  Male_gender  Other_Gender  state_CA  \\\n0            0              0            1             0         1   \n1            2              0            1             0         0   \n2            0              0            1             0         1   \n3            2              0            1             0         0   \n4            0              0            1             0         1   \n...        ...            ...          ...           ...       ...   \n21582        0              0            1             0         1   \n21583        0              0            1             0         1   \n21584        0              0            1             0         1   \n21586        1              1            0             0         0   \n21587        0              0            1             0         1   \n\n       state_Other state_WA  \n0                0        0  \n1                0        1  \n2                0        0  \n3                0        1  \n4                0        0  \n...            ...      ...  \n21582            0        0  \n21583            0        0  \n21584            0        0  \n21586            1        0  \n21587            0        0  \n\n[21587 rows x 31 columns]\n"}},"pos":73,"start":1658944104364,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944104420,"exec_count":74,"id":"0e6bf4","input":"df['CA_state'] = one_hot_encoded_df['state_CA']\ndf['WA_state'] = one_hot_encoded_df['state_WA']\ndf['Other_state'] = one_hot_encoded_df['state_Other']\ndf.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>...</th>\n      <th>in_top_15</th>\n      <th>gen_new</th>\n      <th>tit_new</th>\n      <th>sta_new</th>\n      <th>Female_gender</th>\n      <th>Male_gender</th>\n      <th>Other_Gender</th>\n      <th>CA_state</th>\n      <th>WA_state</th>\n      <th>Other_state</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>400000</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>210000.0</td>\n      <td>145000.0</td>\n      <td>45000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>True</td>\n      <td>1</td>\n      <td>11</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>136000</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>124000.0</td>\n      <td>1000.0</td>\n      <td>11000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>True</td>\n      <td>1</td>\n      <td>11</td>\n      <td>2</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>337000</td>\n      <td>6.0</td>\n      <td>6.0</td>\n      <td>177000.0</td>\n      <td>125000.0</td>\n      <td>36000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>True</td>\n      <td>1</td>\n      <td>11</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>222000</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>164000.0</td>\n      <td>38000.0</td>\n      <td>20000.0</td>\n      <td>Male</td>\n      <td>1</td>\n      <td>...</td>\n      <td>True</td>\n      <td>1</td>\n      <td>11</td>\n      <td>2</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Blend</td>\n      <td>Software Engineer</td>\n      <td>187000</td>\n      <td>5.0</td>\n      <td>0.0</td>\n      <td>165000.0</td>\n      <td>22000.0</td>\n      <td>0.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>False</td>\n      <td>1</td>\n      <td>11</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 32 columns</p>\n</div>","text/plain":"     company              title  totalyearlycompensation  yearsofexperience  \\\n0     Google  Software Engineer                   400000                5.0   \n1  Microsoft  Software Engineer                   136000                3.0   \n2     Google  Software Engineer                   337000                6.0   \n3  Microsoft  Software Engineer                   222000                4.0   \n4      Blend  Software Engineer                   187000                5.0   \n\n   yearsatcompany  basesalary  stockgrantvalue    bonus gender  \\\n0             5.0    210000.0         145000.0  45000.0   Male   \n1             2.0    124000.0           1000.0  11000.0   Male   \n2             6.0    177000.0         125000.0  36000.0   Male   \n3             4.0    164000.0          38000.0  20000.0   Male   \n4             0.0    165000.0          22000.0      0.0   Male   \n\n   Masters_Degree  ...  in_top_15  gen_new  tit_new  sta_new  Female_gender  \\\n0               0  ...       True        1       11        0              0   \n1               0  ...       True        1       11        2              0   \n2               0  ...       True        1       11        0              0   \n3               1  ...       True        1       11        2              0   \n4               0  ...      False        1       11        0              0   \n\n   Male_gender  Other_Gender  CA_state  WA_state Other_state  \n0            1             0         1         0           0  \n1            1             0         0         1           0  \n2            1             0         1         0           0  \n3            1             0         0         1           0  \n4            1             0         1         0           0  \n\n[5 rows x 32 columns]"},"exec_count":74}},"pos":74,"start":1658944104404,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944104444,"exec_count":75,"id":"edaec3","input":"one_hot_encoded_df = pd.get_dummies(df, columns = ['title'])\nprint(one_hot_encoded_df)","kernel":"ds_env","output":{"0":{"name":"stdout","text":"         company  totalyearlycompensation  yearsofexperience  yearsatcompany  \\\n0         Google                   400000                5.0             5.0   \n1      Microsoft                   136000                3.0             2.0   \n2         Google                   337000                6.0             6.0   \n3      Microsoft                   222000                4.0             4.0   \n4          Blend                   187000                5.0             0.0   \n...          ...                      ...                ...             ...   \n21582       Snap                  1400000                5.0             4.0   \n21583   Broadcom                  1470000               21.0             9.0   \n21584   Facebook                  1470000                9.0             7.0   \n21586     Zapier                  1605000               16.0             2.0   \n21587   Facebook                  2372000               22.0             2.0   \n\n       basesalary  stockgrantvalue     bonus  gender  Masters_Degree  \\\n0        210000.0         145000.0   45000.0    Male               0   \n1        124000.0           1000.0   11000.0    Male               0   \n2        177000.0         125000.0   36000.0    Male               0   \n3        164000.0          38000.0   20000.0    Male               1   \n4        165000.0          22000.0       0.0    Male               0   \n...           ...              ...       ...     ...             ...   \n21582    235000.0           1165.0       0.0    Male               0   \n21583    220000.0           1100.0  150000.0    Male               1   \n21584    290000.0           1100.0   80000.0    Male               0   \n21586    250000.0           1305.0   50000.0  Female               1   \n21587    315000.0           1933.0  124000.0    Male               1   \n\n       Bachelors_Degree  ...  title_Marketing  title_Mechanical Engineer  \\\n0                     0  ...                0                          0   \n1                     1  ...                0                          0   \n2                     1  ...                0                          0   \n3                     0  ...                0                          0   \n4                     1  ...                0                          0   \n...                 ...  ...              ...                        ...   \n21582                 1  ...                0                          0   \n21583                 0  ...                1                          0   \n21584                 1  ...                0                          0   \n21586                 0  ...                0                          0   \n21587                 0  ...                0                          0   \n\n       title_Product Designer  title_Product Manager  title_Recruiter  \\\n0                           0                      0                0   \n1                           0                      0                0   \n2                           0                      0                0   \n3                           0                      0                0   \n4                           0                      0                0   \n...                       ...                    ...              ...   \n21582                       0                      0                0   \n21583                       0                      0                0   \n21584                       0                      0                0   \n21586                       0                      0                0   \n21587                       0                      0                0   \n\n       title_Sales  title_Software Engineer  \\\n0                0                        1   \n1                0                        1   \n2                0                        1   \n3                0                        1   \n4                0                        1   \n...            ...                      ...   \n21582            0                        0   \n21583            0                        0   \n21584            0                        0   \n21586            0                        0   \n21587            0                        0   \n\n       title_Software Engineering Manager title_Solution Architect  \\\n0                                       0                        0   \n1                                       0                        0   \n2                                       0                        0   \n3                                       0                        0   \n4                                       0                        0   \n...                                   ...                      ...   \n21582                                   1                        0   \n21583                                   0                        0   \n21584                                   1                        0   \n21586                                   1                        0   \n21587                                   1                        0   \n\n      title_Technical Program Manager  \n0                                   0  \n1                                   0  \n2                                   0  \n3                                   0  \n4                                   0  \n...                               ...  \n21582                               0  \n21583                               0  \n21584                               0  \n21586                               0  \n21587                               0  \n\n[21587 rows x 46 columns]\n"}},"pos":75,"start":1658944104423,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944104458,"exec_count":76,"id":"4810b0","input":"df['title'].value_counts()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"Software Engineer               13698\nProduct Manager                  1451\nSoftware Engineering Manager     1024\nData Scientist                    875\nHardware Engineer                 783\nTechnical Program Manager         635\nProduct Designer                  601\nManagement Consultant             450\nBusiness Analyst                  445\nSolution Architect                409\nMarketing                         360\nMechanical Engineer               255\nSales                             218\nRecruiter                         214\nHuman Resources                   169\nName: title, dtype: int64"},"exec_count":76}},"pos":76,"start":1658944104452,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944104491,"exec_count":77,"id":"cc71c1","input":"df['Marketing_title'] = one_hot_encoded_df['title_Marketing']\ndf['Mechanical Engineer_title'] = one_hot_encoded_df['title_Mechanical Engineer']\ndf['Product Designer_title'] = one_hot_encoded_df['title_Product Designer']\ndf['Recruiter_title'] = one_hot_encoded_df['title_Recruiter']\ndf['Sales_title'] = one_hot_encoded_df['title_Sales']\ndf['Software Engineer_title'] = one_hot_encoded_df['title_Software Engineer']\ndf['Software Engineering Manager_title'] = one_hot_encoded_df['title_Software Engineering Manager']\ndf['Solution Architect_title'] = one_hot_encoded_df['title_Solution Architect']\ndf['Technical Program Manager_title'] = one_hot_encoded_df['title_Technical Program Manager']\ndf['Human Resources_title'] = one_hot_encoded_df['title_Human Resources']\ndf['Product Manager_title'] = one_hot_encoded_df['title_Product Manager']\ndf['Business Analyst_title'] = one_hot_encoded_df['title_Business Analyst']\ndf['Management Consultant_title'] = one_hot_encoded_df['title_Management Consultant']\ndf['Data Scientist_title'] = one_hot_encoded_df['title_Data Scientist']\ndf['Hardware Engineer_title'] = one_hot_encoded_df['title_Hardware Engineer']\ndf.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>...</th>\n      <th>Software Engineer_title</th>\n      <th>Software Engineering Manager_title</th>\n      <th>Solution Architect_title</th>\n      <th>Technical Program Manager_title</th>\n      <th>Human Resources_title</th>\n      <th>Product Manager_title</th>\n      <th>Business Analyst_title</th>\n      <th>Management Consultant_title</th>\n      <th>Data Scientist_title</th>\n      <th>Hardware Engineer_title</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>400000</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>210000.0</td>\n      <td>145000.0</td>\n      <td>45000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>136000</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>124000.0</td>\n      <td>1000.0</td>\n      <td>11000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>337000</td>\n      <td>6.0</td>\n      <td>6.0</td>\n      <td>177000.0</td>\n      <td>125000.0</td>\n      <td>36000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>222000</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>164000.0</td>\n      <td>38000.0</td>\n      <td>20000.0</td>\n      <td>Male</td>\n      <td>1</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Blend</td>\n      <td>Software Engineer</td>\n      <td>187000</td>\n      <td>5.0</td>\n      <td>0.0</td>\n      <td>165000.0</td>\n      <td>22000.0</td>\n      <td>0.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 47 columns</p>\n</div>","text/plain":"     company              title  totalyearlycompensation  yearsofexperience  \\\n0     Google  Software Engineer                   400000                5.0   \n1  Microsoft  Software Engineer                   136000                3.0   \n2     Google  Software Engineer                   337000                6.0   \n3  Microsoft  Software Engineer                   222000                4.0   \n4      Blend  Software Engineer                   187000                5.0   \n\n   yearsatcompany  basesalary  stockgrantvalue    bonus gender  \\\n0             5.0    210000.0         145000.0  45000.0   Male   \n1             2.0    124000.0           1000.0  11000.0   Male   \n2             6.0    177000.0         125000.0  36000.0   Male   \n3             4.0    164000.0          38000.0  20000.0   Male   \n4             0.0    165000.0          22000.0      0.0   Male   \n\n   Masters_Degree  ...  Software Engineer_title  \\\n0               0  ...                        1   \n1               0  ...                        1   \n2               0  ...                        1   \n3               1  ...                        1   \n4               0  ...                        1   \n\n   Software Engineering Manager_title  Solution Architect_title  \\\n0                                   0                         0   \n1                                   0                         0   \n2                                   0                         0   \n3                                   0                         0   \n4                                   0                         0   \n\n   Technical Program Manager_title  Human Resources_title  \\\n0                                0                      0   \n1                                0                      0   \n2                                0                      0   \n3                                0                      0   \n4                                0                      0   \n\n   Product Manager_title  Business Analyst_title  Management Consultant_title  \\\n0                      0                       0                            0   \n1                      0                       0                            0   \n2                      0                       0                            0   \n3                      0                       0                            0   \n4                      0                       0                            0   \n\n   Data Scientist_title Hardware Engineer_title  \n0                     0                       0  \n1                     0                       0  \n2                     0                       0  \n3                     0                       0  \n4                     0                       0  \n\n[5 rows x 47 columns]"},"exec_count":77}},"pos":77,"start":1658944104466,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944104516,"exec_count":78,"id":"ac1a03","input":"df['company'].value_counts()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"Amazon               2583\nMicrosoft            1619\nGoogle               1313\nFacebook             1000\nApple                 603\n                     ... \nEverQuote               1\nCollins aerospace       1\nbank of america         1\nAma                     1\nAmgen                   1\nName: company, Length: 1246, dtype: int64"},"exec_count":78}},"pos":78,"start":1658944104506,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944104526,"exec_count":79,"id":"174216","input":"df.columns","kernel":"ds_env","output":{"0":{"data":{"text/plain":"Index(['company', 'title', 'totalyearlycompensation', 'yearsofexperience',\n       'yearsatcompany', 'basesalary', 'stockgrantvalue', 'bonus', 'gender',\n       'Masters_Degree', 'Bachelors_Degree', 'Doctorate_Degree', 'Highschool',\n       'Some_College', 'Race_Asian', 'Race_White', 'Race_Two_Or_More',\n       'Race_Black', 'Race_Hispanic', 'Education', 'Race', 'state',\n       'in_top_15', 'gen_new', 'tit_new', 'sta_new', 'Female_gender',\n       'Male_gender', 'Other_Gender', 'CA_state', 'WA_state', 'Other_state',\n       'Marketing_title', 'Mechanical Engineer_title',\n       'Product Designer_title', 'Recruiter_title', 'Sales_title',\n       'Software Engineer_title', 'Software Engineering Manager_title',\n       'Solution Architect_title', 'Technical Program Manager_title',\n       'Human Resources_title', 'Product Manager_title',\n       'Business Analyst_title', 'Management Consultant_title',\n       'Data Scientist_title', 'Hardware Engineer_title'],\n      dtype='object')"},"exec_count":79}},"pos":79,"start":1658944104524,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944104537,"exec_count":80,"id":"e6ad72","input":"df = df.drop(['Race','Education','gender','title','state','company'], axis = 1)","kernel":"ds_env","pos":80,"start":1658944104529,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944104556,"exec_count":81,"id":"fb802a","input":"import sklearn\nfrom sklearn.model_selection import train_test_split","kernel":"ds_env","pos":81,"start":1658944104540,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944392712,"exec_count":89,"id":"cc9682","input":"x = df.loc[:, df.columns != 'totalyearlycompensation']\ny = df.totalyearlycompensation","kernel":"ds_env","pos":82,"start":1658944392689,"state":"done","type":"cell"}
{"cell_type":"code","end":1658944398332,"exec_count":90,"id":"b74374","input":"x_train, x_test, y_train, y_test = train_test_split(x, y, random_state=42)","kernel":"ds_env","pos":83,"start":1658944398322,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"a5cb75","input":"Our dataset is from: [https://www.kaggle.com/datasets/jackogozaly/data\\-science\\-and\\-stem\\-salaries?datasetId=1640011&sortBy=voteCount](https://www.kaggle.com/datasets/jackogozaly/data-science-and-stem-salaries?datasetId=1640011&sortBy=voteCount)\n","pos":1,"state":"done","type":"cell"}
{"end":1658948331971,"exec_count":125,"id":"488045","input":"from sklearn.multioutput import MultiOutputRegressor\nclf = MultiOutputRegressor()","kernel":"ds_env","output":{"0":{"ename":"TypeError","evalue":"__init__() missing 1 required positional argument: 'estimator'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","Input \u001b[0;32mIn [125]\u001b[0m, in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01msklearn\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mmultioutput\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m MultiOutputRegressor\n\u001b[0;32m----> 2\u001b[0m clf \u001b[38;5;241m=\u001b[39m \u001b[43mMultiOutputRegressor\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n","\u001b[0;31mTypeError\u001b[0m: __init__() missing 1 required positional argument: 'estimator'"]}},"pos":100,"start":1658948331948,"state":"done","type":"cell"}
{"end":1658952541584,"exec_count":126,"id":"b8ce88","input":"#Nearest Neighbors Regression\nfrom sklearn.neighbors import KNeighborsRegressor\nneigh = KNeighborsRegressor()","kernel":"ds_env","pos":90,"start":1658952541557,"state":"done","type":"cell"}
{"end":1658952545444,"exec_count":127,"id":"c40090","input":"neigh.fit(x_train, y_train)","kernel":"ds_env","output":{"0":{"data":{"text/html":"<style>#sk-container-id-5 {color: black;background-color: white;}#sk-container-id-5 pre{padding: 0;}#sk-container-id-5 div.sk-toggleable {background-color: white;}#sk-container-id-5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-5 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-5 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-5 div.sk-item {position: relative;z-index: 1;}#sk-container-id-5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-5 div.sk-item::before, #sk-container-id-5 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-5 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-5 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-5 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-5 div.sk-label-container {text-align: center;}#sk-container-id-5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-5 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-5\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsRegressor()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" checked><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsRegressor</label><div class=\"sk-toggleable__content\"><pre>KNeighborsRegressor()</pre></div></div></div></div></div>","text/plain":"KNeighborsRegressor()"},"exec_count":127}},"pos":91,"start":1658952545404,"state":"done","type":"cell"}
{"end":1658952553603,"exec_count":128,"id":"42c81d","input":"y_hat = neigh.predict(x_test)\ny_hat","kernel":"ds_env","output":{"0":{"data":{"text/plain":"array([105200., 188400., 200000., ...,  80400., 172400., 269200.])"},"exec_count":128}},"pos":92,"start":1658952553185,"state":"done","type":"cell"}
{"end":1658952558316,"exec_count":129,"id":"ce8cc3","input":"np.array(y_test) #these are what actually happened for our x_test inputs.","kernel":"ds_env","output":{"0":{"data":{"text/plain":"array([105000, 190000, 200000, ...,  81000, 176000, 268000])"},"exec_count":129}},"pos":93,"start":1658952558202,"state":"done","type":"cell"}
{"end":1658952565925,"exec_count":130,"id":"e8b1bf","input":"#Find MSE\ntotal_squared_error = (np.sum((y_test - y_hat)**2)) #get the sum of all the errors (error = what we want (y_test) - what we predicted (y_hat))\nmean_squared_error = total_squared_error/len(y_test) #divide this by how many rows/observations we have\nprint(mean_squared_error)","kernel":"ds_env","output":{"0":{"name":"stdout","text":"909270631.8324995\n"}},"pos":94,"start":1658952565917,"state":"done","type":"cell"}
{"end":1658952582427,"exec_count":131,"id":"190026","input":"neigh.score(x_test, y_test)","kernel":"ds_env","output":{"0":{"data":{"text/plain":"0.944005943522495"},"exec_count":131}},"pos":95,"start":1658952582012,"state":"done","type":"cell"}
{"end":1658952592060,"exec_count":132,"id":"337bdd","input":"plt.figure(figsize=(10,5))\nplt.plot(y_test, y_test, '--')\n#plt.scatter(y_test,y_test, c='green')\nplt.scatter(y_test, y_hat, c='orange')\nplt.xlabel('x', fontsize = 20)\nplt.ylabel('y', fontsize = 20)\nplt.title('Predicted Results compared to Actual Results')\nplt.grid('on')\nplt.show()","kernel":"ds_env","output":{"0":{"data":{"image/png":"4b8352a4d12dc5a81b068537552e82658f99bd6c","text/plain":"<Figure size 720x360 with 1 Axes>"},"metadata":{"needs_background":"light"}}},"pos":96,"start":1658952591688,"state":"done","type":"cell"}
{"end":1658952691045,"exec_count":140,"id":"c5f8f3","input":"#Stochastic Gradient Descent Regression\nfrom sklearn.linear_model import SGDRegressor #model object\nclf = SGDRegressor()","kernel":"ds_env","pos":84,"start":1658952691000,"state":"done","type":"cell"}
{"end":1658952696335,"exec_count":141,"id":"604f73","input":"#fit your model\nclf.fit(x_train, y_train)","kernel":"ds_env","output":{"0":{"data":{"text/html":"<style>#sk-container-id-7 {color: black;background-color: white;}#sk-container-id-7 pre{padding: 0;}#sk-container-id-7 div.sk-toggleable {background-color: white;}#sk-container-id-7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-7 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-7 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-7 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-7 div.sk-item {position: relative;z-index: 1;}#sk-container-id-7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-7 div.sk-item::before, #sk-container-id-7 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-7 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-7 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-7 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-7 div.sk-label-container {text-align: center;}#sk-container-id-7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-7 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-7\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SGDRegressor()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-7\" type=\"checkbox\" checked><label for=\"sk-estimator-id-7\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SGDRegressor</label><div class=\"sk-toggleable__content\"><pre>SGDRegressor()</pre></div></div></div></div></div>","text/plain":"SGDRegressor()"},"exec_count":141}},"pos":85,"start":1658952695873,"state":"done","type":"cell"}
{"end":1658952699819,"exec_count":142,"id":"fdbeb9","input":"#create some predictions on your testing inputs and set them equal to y_hat.\ny_hat = clf.predict(x_test)\ny_hat","kernel":"ds_env","output":{"0":{"data":{"text/plain":"array([-3.84400381e+18, -5.73388368e+18, -5.64627489e+18, ...,\n       -3.00959821e+18, -5.70751790e+18, -6.78524937e+18])"},"exec_count":142}},"pos":86,"start":1658952699812,"state":"done","type":"cell"}
{"end":1658952704943,"exec_count":143,"id":"27fa6b","input":"#Compute your MSE.\ntotal_squared_error = (np.sum((y_test - y_hat)**2)) #get the sum of all the errors (error = what we want (y_test) - what we predicted (y_hat))\nmean_squared_error = total_squared_error/len(y_test) #divide this by how many rows/observations we have\nprint(mean_squared_error)","kernel":"ds_env","output":{"0":{"name":"stdout","text":"3.393103320793362e+37\n"}},"pos":87,"start":1658952704928,"state":"done","type":"cell"}
{"end":1658952711637,"exec_count":144,"id":"c06e4a","input":"clf.score(x_test, y_test)","kernel":"ds_env","output":{"0":{"data":{"text/plain":"-2.0895167217224353e+27"},"exec_count":144}},"pos":88,"start":1658952711623,"state":"done","type":"cell"}
{"end":1658952721289,"exec_count":145,"id":"0ff562","input":"import matplotlib.pyplot as plt","kernel":"ds_env","pos":88.5,"start":1658952721261,"state":"done","type":"cell"}
{"end":1658952726405,"exec_count":146,"id":"998946","input":"plt.figure(figsize=(10,5))\nplt.plot(y_test, y_test, '--')\n#plt.scatter(y_test,y_test, c='green')\nplt.scatter(y_test, y_hat, c='orange')\nplt.xlabel('x', fontsize = 20)\nplt.ylabel('y', fontsize = 20)\nplt.title('Predicted Results compared to Actual Results')\nplt.grid('on')\nplt.show()","kernel":"ds_env","output":{"0":{"data":{"image/png":"68e24862be1491ac965efc30e81dbd5e2ff5c85c","text/plain":"<Figure size 720x360 with 1 Axes>"},"metadata":{"needs_background":"light"}}},"pos":89,"start":1658952726152,"state":"done","type":"cell"}
{"end":1658957953266,"exec_count":157,"id":"904677","input":"grid.best_params_","kernel":"ds_env","output":{"0":{"data":{"text/plain":"{'max_depth': 7, 'splitter': 'best'}"},"exec_count":157}},"pos":97.5,"start":1658957953248,"state":"done","type":"cell"}
{"end":1658957980553,"exec_count":158,"id":"cec934","input":"clf_pred = grid.predict(x_test)","kernel":"ds_env","pos":97.75,"start":1658957980485,"state":"done","type":"cell"}
{"end":1658957987438,"exec_count":159,"id":"7fc14a","input":"clf.fit(x_train, y_train)","kernel":"ds_env","output":{"0":{"data":{"text/html":"<style>#sk-container-id-9 {color: black;background-color: white;}#sk-container-id-9 pre{padding: 0;}#sk-container-id-9 div.sk-toggleable {background-color: white;}#sk-container-id-9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-9 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-9 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-9 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-9 div.sk-item {position: relative;z-index: 1;}#sk-container-id-9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-9 div.sk-item::before, #sk-container-id-9 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-9 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-9 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-9 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-9 div.sk-label-container {text-align: center;}#sk-container-id-9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-9 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-9\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeRegressor()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-11\" type=\"checkbox\" checked><label for=\"sk-estimator-id-11\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeRegressor</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeRegressor()</pre></div></div></div></div></div>","text/plain":"DecisionTreeRegressor()"},"exec_count":159}},"pos":98,"start":1658957987274,"state":"done","type":"cell"}
{"end":1658957991728,"exec_count":160,"id":"40dbf8","input":"y_hat = clf.predict(x_test)\ny_hat","kernel":"ds_env","output":{"0":{"data":{"text/plain":"array([103000., 184000., 200000., ...,  81000., 182000., 270000.])"},"exec_count":160}},"pos":98.5,"start":1658957991708,"state":"done","type":"cell"}
{"end":1658957999302,"exec_count":161,"id":"ae4037","input":"np.array(y_test) #these are what actually happened for our x_test inputs.","kernel":"ds_env","output":{"0":{"data":{"text/plain":"array([105000, 190000, 200000, ...,  81000, 176000, 268000])"},"exec_count":161}},"pos":98.75,"start":1658957999298,"state":"done","type":"cell"}
{"end":1658958023199,"exec_count":163,"id":"468a03","input":"#Find MSE\ntotal_squared_error = (np.sum((y_test - y_hat)**2)) #get the sum of all the errors (error = what we want (y_test) - what we predicted (y_hat))\nmean_squared_error = total_squared_error/len(y_test) #divide this by how many rows/observations we have\nprint(mean_squared_error)","kernel":"ds_env","output":{"0":{"name":"stdout","text":"1247419528.3387887\n"}},"pos":98.875,"start":1658958023193,"state":"done","type":"cell"}
{"end":1658958028841,"exec_count":164,"id":"6966f5","input":"clf.score(x_test, y_test)","kernel":"ds_env","output":{"0":{"data":{"text/plain":"0.9231822990035691"},"exec_count":164}},"pos":98.9375,"start":1658958028816,"state":"done","type":"cell"}
{"end":1658958039894,"exec_count":165,"id":"c67dc7","input":"plt.figure(figsize=(10,5))\nplt.plot(y_test, y_test, '--')\n#plt.scatter(y_test,y_test, c='green')\nplt.scatter(y_test, y_hat, c='orange')\nplt.xlabel('x', fontsize = 20)\nplt.ylabel('y', fontsize = 20)\nplt.title('Predicted Results compared to Actual Results')\nplt.grid('on')\nplt.show()","kernel":"ds_env","output":{"0":{"data":{"image/png":"7cb75c838d71ea65c813fd93ff6f74ff5f3d237e","text/plain":"<Figure size 720x360 with 1 Axes>"},"metadata":{"needs_background":"light"}}},"pos":99,"start":1658958039474,"state":"done","type":"cell"}
{"exec_count":166,"id":"b60bc5","input":"#Decision Trees Regression\nfrom sklearn import tree\nfrom sklearn.model_selection import GridSearchCV\nparameters = {'splitter':('best', 'random'), 'max_depth':[3, 5, 7], 'criterion': ('squared_error', 'friedman_mse', 'absolute_error', 'poisson')}\nclf = tree.DecisionTreeRegressor()\ngrid = GridSearchCV(clf, parameters)\ngrid.fit(x_train, y_train)","kernel":"ds_env","pos":97,"start":1658958593254,"state":"busy","type":"cell"}
{"id":"7732cb","input":"","pos":101,"type":"cell"}
{"id":0,"time":1658941301369,"type":"user"}
{"last_load":1658941299173,"type":"file"}