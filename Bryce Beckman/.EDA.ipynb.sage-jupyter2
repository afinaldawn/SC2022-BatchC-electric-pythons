{"backend_state":"init","connection_file":"/projects/0bcf82e6-7441-4432-a339-19b67c22cc5c/.local/share/jupyter/runtime/kernel-e88bf035-8289-4e70-b86a-8af03ca8cfd7.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"0e15f4","input":"df['Race_White'].value_counts()","pos":38,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"7bc2d7","input":"df['Race_Black'].value_counts()","pos":37,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"89085f","input":"df['Race_Asian'].value_counts()","pos":36,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"8bc0ae","input":"","pos":64,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"dd6ccc","input":"df['Race_Two_Or_More'].value_counts()","pos":39,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"e40414","input":"#Only 12,310 people have a race value","pos":41,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"f3cf0a","input":"df['Race_Hispanic'].value_counts()","pos":40,"type":"cell"}
{"cell_type":"code","exec_count":1,"id":"2eb102","input":"import pandas as pd\nimport numpy as np","pos":0,"type":"cell"}
{"cell_type":"code","exec_count":10,"id":"17bbf5","input":"df['tag'].isnull().values.any()","output":{"0":{"data":{"text/plain":"True"},"exec_count":10,"output_type":"execute_result"}},"pos":10,"type":"cell"}
{"cell_type":"code","exec_count":102,"id":"d3216d","input":"df.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>...</th>\n      <th>Highschool</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>state</th>\n      <th>in_top_15</th>\n      <th>Education</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>GE Digital</td>\n      <td>Software Engineer</td>\n      <td>140000</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>130000.0</td>\n      <td>0.0</td>\n      <td>10000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>False</td>\n      <td>Missing</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Amazon</td>\n      <td>Software Engineer</td>\n      <td>172000</td>\n      <td>12.0</td>\n      <td>2.0</td>\n      <td>142000.0</td>\n      <td>30000.0</td>\n      <td>0.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>WA</td>\n      <td>True</td>\n      <td>Missing</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Uber</td>\n      <td>Software Engineer</td>\n      <td>325000</td>\n      <td>7.0</td>\n      <td>2.0</td>\n      <td>161000.0</td>\n      <td>140000.0</td>\n      <td>25000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>True</td>\n      <td>Missing</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>150000</td>\n      <td>4.0</td>\n      <td>0.0</td>\n      <td>118000.0</td>\n      <td>5000.0</td>\n      <td>12000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>WA</td>\n      <td>True</td>\n      <td>Missing</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>640000</td>\n      <td>11.0</td>\n      <td>4.0</td>\n      <td>210000.0</td>\n      <td>380000.0</td>\n      <td>50000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>True</td>\n      <td>Missing</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 22 columns</p>\n</div>","text/plain":"      company              title  totalyearlycompensation  yearsofexperience  \\\n0  GE Digital  Software Engineer                   140000                4.0   \n1      Amazon  Software Engineer                   172000               12.0   \n2        Uber  Software Engineer                   325000                7.0   \n3   Microsoft  Software Engineer                   150000                4.0   \n4      Google  Software Engineer                   640000               11.0   \n\n   yearsatcompany  basesalary  stockgrantvalue    bonus gender  \\\n0             4.0    130000.0              0.0  10000.0   Male   \n1             2.0    142000.0          30000.0      0.0   Male   \n2             2.0    161000.0         140000.0  25000.0   Male   \n3             0.0    118000.0           5000.0  12000.0   Male   \n4             4.0    210000.0         380000.0  50000.0   Male   \n\n   Masters_Degree  ...  Highschool  Some_College  Race_Asian  Race_White  \\\n0               0  ...           0             0           0           0   \n1               0  ...           0             0           0           0   \n2               0  ...           0             0           0           0   \n3               0  ...           0             0           0           0   \n4               0  ...           0             0           0           0   \n\n   Race_Two_Or_More  Race_Black  Race_Hispanic  state  in_top_15 Education  \n0                 0           0              0     CA      False   Missing  \n1                 0           0              0     WA       True   Missing  \n2                 0           0              0     CA       True   Missing  \n3                 0           0              0     WA       True   Missing  \n4                 0           0              0     CA       True   Missing  \n\n[5 rows x 22 columns]"},"exec_count":102,"output_type":"execute_result"}},"pos":25,"type":"cell"}
{"cell_type":"code","exec_count":105,"id":"960a57","input":"df['Education'] = df.apply(lambda x: check_education(x.Masters_Degree, x.Bachelors_Degree, x.Doctorate_Degree, x.Highschool, x.Some_College), axis=1)\ndf = df[df['Education'] != 'Missing']\ndf.reset_index(drop=True, inplace=True)","pos":28,"type":"cell"}
{"cell_type":"code","exec_count":107,"id":"d776cf","input":"df['Race'] = df.apply(lambda x: check_race(x.Race_Asian, x.Race_White, x.Race_Two_Or_More, x.Race_Black, x.Race_Hispanic), axis=1)\ndf = df[df['Race'] != 'Missing']\ndf.reset_index(drop=True, inplace=True)","output":{"0":{"name":"stderr","output_type":"stream","text":"/tmp/ipykernel_4668/456162210.py:1: SettingWithCopyWarning:\n\n\nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n\n"}},"pos":30,"type":"cell"}
{"cell_type":"code","exec_count":108,"id":"cbb9f7","input":"df.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>...</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>state</th>\n      <th>in_top_15</th>\n      <th>Education</th>\n      <th>Race</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>400000</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>210000.0</td>\n      <td>145000.0</td>\n      <td>45000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>True</td>\n      <td>PHD</td>\n      <td>Masters</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>136000</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>124000.0</td>\n      <td>1000.0</td>\n      <td>11000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>WA</td>\n      <td>True</td>\n      <td>Bachelors</td>\n      <td>PHD</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>337000</td>\n      <td>6.0</td>\n      <td>6.0</td>\n      <td>177000.0</td>\n      <td>125000.0</td>\n      <td>36000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>True</td>\n      <td>Bachelors</td>\n      <td>Masters</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>222000</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>164000.0</td>\n      <td>38000.0</td>\n      <td>20000.0</td>\n      <td>Male</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>WA</td>\n      <td>True</td>\n      <td>Masters</td>\n      <td>Masters</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Blend</td>\n      <td>Software Engineer</td>\n      <td>187000</td>\n      <td>5.0</td>\n      <td>0.0</td>\n      <td>165000.0</td>\n      <td>22000.0</td>\n      <td>0.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>False</td>\n      <td>Bachelors</td>\n      <td>Bachelors</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 23 columns</p>\n</div>","text/plain":"     company              title  totalyearlycompensation  yearsofexperience  \\\n0     Google  Software Engineer                   400000                5.0   \n1  Microsoft  Software Engineer                   136000                3.0   \n2     Google  Software Engineer                   337000                6.0   \n3  Microsoft  Software Engineer                   222000                4.0   \n4      Blend  Software Engineer                   187000                5.0   \n\n   yearsatcompany  basesalary  stockgrantvalue    bonus gender  \\\n0             5.0    210000.0         145000.0  45000.0   Male   \n1             2.0    124000.0           1000.0  11000.0   Male   \n2             6.0    177000.0         125000.0  36000.0   Male   \n3             4.0    164000.0          38000.0  20000.0   Male   \n4             0.0    165000.0          22000.0      0.0   Male   \n\n   Masters_Degree  ...  Some_College  Race_Asian  Race_White  \\\n0               0  ...             0           1           0   \n1               0  ...             0           0           0   \n2               0  ...             0           1           0   \n3               1  ...             0           1           0   \n4               0  ...             0           0           1   \n\n   Race_Two_Or_More  Race_Black  Race_Hispanic  state  in_top_15  Education  \\\n0                 0           0              0     CA       True        PHD   \n1                 1           0              0     WA       True  Bachelors   \n2                 0           0              0     CA       True  Bachelors   \n3                 0           0              0     WA       True    Masters   \n4                 0           0              0     CA      False  Bachelors   \n\n        Race  \n0    Masters  \n1        PHD  \n2    Masters  \n3    Masters  \n4  Bachelors  \n\n[5 rows x 23 columns]"},"exec_count":108,"output_type":"execute_result"}},"pos":31,"type":"cell"}
{"cell_type":"code","exec_count":109,"id":"41f38c","input":"def check_race(asian, white, two, black, hispanic):\n    if asian == 1:\n        return \"Asian\"\n    elif white == 1:\n        return \"White\"\n    elif two == 1:\n        return \"Two_or_More\"\n    elif black == 1:\n        return 'Black'\n    elif hispanic == 1:\n        return \"Hispanic\"\n    else: return \"Missing\"","pos":29,"type":"cell"}
{"cell_type":"code","exec_count":11,"id":"b7f731","input":"df['tag'].isnull().sum()","output":{"0":{"data":{"text/plain":"854"},"exec_count":11,"output_type":"execute_result"}},"pos":11,"type":"cell"}
{"cell_type":"code","exec_count":12,"id":"54dd98","input":"df['gender'].isnull().values.any()","output":{"0":{"data":{"text/plain":"True"},"exec_count":12,"output_type":"execute_result"}},"pos":12,"type":"cell"}
{"cell_type":"code","exec_count":13,"id":"bcb3ff","input":"df['gender'].isnull().sum()","output":{"0":{"data":{"text/plain":"19540"},"exec_count":13,"output_type":"execute_result"}},"pos":13,"type":"cell"}
{"cell_type":"code","exec_count":14,"id":"90153f","input":"df['otherdetails'].isnull().values.any()","output":{"0":{"data":{"text/plain":"True"},"exec_count":14,"output_type":"execute_result"}},"pos":14,"type":"cell"}
{"cell_type":"code","exec_count":15,"id":"bf300c","input":"df['otherdetails'].isnull().sum()","output":{"0":{"data":{"text/plain":"22505"},"exec_count":15,"output_type":"execute_result"}},"pos":15,"type":"cell"}
{"cell_type":"code","exec_count":16,"id":"7c48e8","input":"df['dmaid'].isnull().values.any()","output":{"0":{"data":{"text/plain":"True"},"exec_count":16,"output_type":"execute_result"}},"pos":16,"type":"cell"}
{"cell_type":"code","exec_count":17,"id":"86b6c8","input":"df['dmaid'].isnull().sum()","output":{"0":{"data":{"text/plain":"2"},"exec_count":17,"output_type":"execute_result"}},"pos":17,"type":"cell"}
{"cell_type":"code","exec_count":18,"id":"53345e","input":"df['Masters_Degree'].isnull().values.any()","output":{"0":{"data":{"text/plain":"False"},"exec_count":18,"output_type":"execute_result"}},"pos":18,"type":"cell"}
{"cell_type":"code","exec_count":19,"id":"f43107","input":"df['Race'].isnull().values.any()","output":{"0":{"data":{"text/plain":"True"},"exec_count":19,"output_type":"execute_result"}},"pos":19,"type":"cell"}
{"cell_type":"code","exec_count":2,"id":"db3ddb","input":"df = pd.read_csv(\"Levels_Fyi_Salary_Data.csv\")","pos":2,"type":"cell"}
{"cell_type":"code","exec_count":20,"id":"8fbf2d","input":"df['Race'].isnull().sum()","output":{"0":{"data":{"text/plain":"40215"},"exec_count":20,"output_type":"execute_result"}},"pos":20,"type":"cell"}
{"cell_type":"code","exec_count":21,"id":"ca45ea","input":"df['Education'].isnull().values.any()","output":{"0":{"data":{"text/plain":"True"},"exec_count":21,"output_type":"execute_result"}},"pos":21,"type":"cell"}
{"cell_type":"code","exec_count":22,"id":"900a76","input":"df['Education'].isnull().sum()","output":{"0":{"data":{"text/plain":"32272"},"exec_count":22,"output_type":"execute_result"}},"pos":22,"type":"cell"}
{"cell_type":"code","exec_count":23,"id":"52c482","input":"df = df.drop(['Race','Education','otherdetails','level','tag','dmaid','cityid','timestamp','rowNumber'], axis = 1)","pos":23,"type":"cell"}
{"cell_type":"code","exec_count":25,"id":"7e4ba4","input":"df.dropna(inplace=True)\ndf.reset_index(drop=True, inplace=True)","pos":26,"type":"cell"}
{"cell_type":"code","exec_count":26,"id":"61aa09","input":"df['company'].isnull().values.any()","output":{"0":{"data":{"text/plain":"False"},"exec_count":26,"output_type":"execute_result"}},"pos":32,"type":"cell"}
{"cell_type":"code","exec_count":27,"id":"be748f","input":"len(df)","output":{"0":{"data":{"text/plain":"43098"},"exec_count":27,"output_type":"execute_result"}},"pos":33,"type":"cell"}
{"cell_type":"code","exec_count":28,"id":"4e291e","input":"df['company'].value_counts()","output":{"0":{"data":{"text/plain":"Amazon                    5525\nMicrosoft                 3641\nGoogle                    2978\nFacebook                  2118\nApple                     1384\n                          ... \nGOogle                       1\nRefinitiv                    1\ncadence design systems       1\nMoody's analytics            1\ntableau software             1\nName: company, Length: 1478, dtype: int64"},"exec_count":28,"output_type":"execute_result"}},"pos":34,"type":"cell"}
{"cell_type":"code","exec_count":29,"id":"afff63","input":"df['gender'].value_counts()","output":{"0":{"data":{"text/plain":"Male                               35698\nFemale                              6999\nOther                                400\nTitle: Senior Software Engineer        1\nName: gender, dtype: int64"},"exec_count":29,"output_type":"execute_result"}},"pos":35,"type":"cell"}
{"cell_type":"code","exec_count":3,"id":"6ab1ca","input":"df.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>timestamp</th>\n      <th>company</th>\n      <th>level</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>location</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>tag</th>\n      <th>basesalary</th>\n      <th>...</th>\n      <th>Doctorate_Degree</th>\n      <th>Highschool</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>Race</th>\n      <th>Education</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>6/7/2017 11:33:27</td>\n      <td>Oracle</td>\n      <td>L3</td>\n      <td>Product Manager</td>\n      <td>127000</td>\n      <td>Redwood City, CA</td>\n      <td>1.5</td>\n      <td>1.5</td>\n      <td>NaN</td>\n      <td>107000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>6/10/2017 17:11:29</td>\n      <td>eBay</td>\n      <td>SE 2</td>\n      <td>Software Engineer</td>\n      <td>100000</td>\n      <td>San Francisco, CA</td>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>6/11/2017 14:53:57</td>\n      <td>Amazon</td>\n      <td>L7</td>\n      <td>Product Manager</td>\n      <td>310000</td>\n      <td>Seattle, WA</td>\n      <td>8.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>155000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>6/17/2017 0:23:14</td>\n      <td>Apple</td>\n      <td>M1</td>\n      <td>Software Engineering Manager</td>\n      <td>372000</td>\n      <td>Sunnyvale, CA</td>\n      <td>7.0</td>\n      <td>5.0</td>\n      <td>NaN</td>\n      <td>157000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>6/20/2017 10:58:51</td>\n      <td>Microsoft</td>\n      <td>60</td>\n      <td>Software Engineer</td>\n      <td>157000</td>\n      <td>Mountain View, CA</td>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 29 columns</p>\n</div>","text/plain":"            timestamp    company level                         title  \\\n0   6/7/2017 11:33:27     Oracle    L3               Product Manager   \n1  6/10/2017 17:11:29       eBay  SE 2             Software Engineer   \n2  6/11/2017 14:53:57     Amazon    L7               Product Manager   \n3   6/17/2017 0:23:14      Apple    M1  Software Engineering Manager   \n4  6/20/2017 10:58:51  Microsoft    60             Software Engineer   \n\n   totalyearlycompensation           location  yearsofexperience  \\\n0                   127000   Redwood City, CA                1.5   \n1                   100000  San Francisco, CA                5.0   \n2                   310000        Seattle, WA                8.0   \n3                   372000      Sunnyvale, CA                7.0   \n4                   157000  Mountain View, CA                5.0   \n\n   yearsatcompany  tag  basesalary  ...  Doctorate_Degree  Highschool  \\\n0             1.5  NaN    107000.0  ...                 0           0   \n1             3.0  NaN         0.0  ...                 0           0   \n2             0.0  NaN    155000.0  ...                 0           0   \n3             5.0  NaN    157000.0  ...                 0           0   \n4             3.0  NaN         0.0  ...                 0           0   \n\n  Some_College Race_Asian  Race_White  Race_Two_Or_More  Race_Black  \\\n0            0          0           0                 0           0   \n1            0          0           0                 0           0   \n2            0          0           0                 0           0   \n3            0          0           0                 0           0   \n4            0          0           0                 0           0   \n\n   Race_Hispanic  Race  Education  \n0              0   NaN        NaN  \n1              0   NaN        NaN  \n2              0   NaN        NaN  \n3              0   NaN        NaN  \n4              0   NaN        NaN  \n\n[5 rows x 29 columns]"},"exec_count":3,"output_type":"execute_result"}},"pos":3,"type":"cell"}
{"cell_type":"code","exec_count":31,"id":"e6b62c","input":"def get_state(x):\n    words = x.split(', ')\n    state = words[1]\n    if state == 'CA':\n        return 'CA'\n    elif state == 'WA':\n        return 'WA'\n    elif state == 'NY':\n        return 'NY'\n    elif state == 'IL':\n        return 'IL'\n    elif state == 'TX':\n        return 'TX'\n    elif state == 'AR':\n        return 'AR'\n    elif state == 'AZ':\n        return 'AZ'\n    elif state == 'CO':\n        return 'CO'\n    elif state == 'CT':\n        return 'CT'\n    elif state == 'NJ':\n        return 'NJ'\n    elif state == 'FL':\n        return 'FL'\n    elif state == 'GA':\n        return 'GA'\n    elif state == 'IN':\n        return 'IN'\n    elif state == 'MD':\n        return 'MD'\n    elif state == 'MA':\n        return 'MA'\n    elif state == 'MI':\n        return 'MI'\n    elif state == 'MN':\n        return 'MN'\n    elif state == 'MO':\n        return 'MO'\n    elif state == 'NH':\n        return 'NH'\n    elif state == 'NC':\n        return 'NC'\n    elif state == 'OH':\n        return 'OH'\n    elif state == 'OR':\n        return 'OR'\n    elif state == 'PA':\n        return 'PA'\n    elif state == 'SC':\n        return 'SC'\n    elif state == 'SD':\n        return 'SD'\n    elif state == 'TN':\n        return 'TN'\n    elif state == 'UT':\n        return 'UT'\n    elif state == 'VA':\n        return 'VA'\n    elif state == 'WI':\n        return 'WI'\n    else: return 'Other'","pos":42,"type":"cell"}
{"cell_type":"code","exec_count":32,"id":"c38464","input":"df['state'] = df['location'].apply(get_state)\ndf.drop(['location'], axis = 1, inplace = True)","pos":43,"type":"cell"}
{"cell_type":"code","exec_count":33,"id":"9d107b","input":"top_15_popular = list(df['company'].value_counts().index)[:15]\ndef in_popular(x):\n    if x in top_15_popular:\n        return True\n    else:\n        return False\n\ndf['in_top_15'] = df['company'].apply(in_popular)","pos":44,"type":"cell"}
{"cell_type":"code","exec_count":34,"id":"582df7","input":"df['state'].value_counts()","output":{"0":{"data":{"text/plain":"CA       15023\nWA        8347\nOther     7590\nNY        3221\nTX        1915\nMA        1221\nVA         670\nIL         650\nOR         482\nCO         420\nGA         392\nNC         350\nPA         342\nNJ         301\nAZ         270\nFL         208\nNH         204\nMN         201\nUT         174\nMI         166\nMO         145\nTN         136\nOH         131\nWI         113\nMD         112\nCT         112\nIN          71\nAR          71\nSC          60\nName: state, dtype: int64"},"exec_count":34,"output_type":"execute_result"}},"pos":45,"type":"cell"}
{"cell_type":"code","exec_count":35,"id":"bab040","input":"df.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>...</th>\n      <th>Doctorate_Degree</th>\n      <th>Highschool</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>state</th>\n      <th>in_top_15</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>GE Digital</td>\n      <td>Software Engineer</td>\n      <td>140000</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>130000.0</td>\n      <td>0.0</td>\n      <td>10000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Amazon</td>\n      <td>Software Engineer</td>\n      <td>172000</td>\n      <td>12.0</td>\n      <td>2.0</td>\n      <td>142000.0</td>\n      <td>30000.0</td>\n      <td>0.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>WA</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Uber</td>\n      <td>Software Engineer</td>\n      <td>325000</td>\n      <td>7.0</td>\n      <td>2.0</td>\n      <td>161000.0</td>\n      <td>140000.0</td>\n      <td>25000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>150000</td>\n      <td>4.0</td>\n      <td>0.0</td>\n      <td>118000.0</td>\n      <td>5000.0</td>\n      <td>12000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>WA</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>640000</td>\n      <td>11.0</td>\n      <td>4.0</td>\n      <td>210000.0</td>\n      <td>380000.0</td>\n      <td>50000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 21 columns</p>\n</div>","text/plain":"      company              title  totalyearlycompensation  yearsofexperience  \\\n0  GE Digital  Software Engineer                   140000                4.0   \n1      Amazon  Software Engineer                   172000               12.0   \n2        Uber  Software Engineer                   325000                7.0   \n3   Microsoft  Software Engineer                   150000                4.0   \n4      Google  Software Engineer                   640000               11.0   \n\n   yearsatcompany  basesalary  stockgrantvalue    bonus gender  \\\n0             4.0    130000.0              0.0  10000.0   Male   \n1             2.0    142000.0          30000.0      0.0   Male   \n2             2.0    161000.0         140000.0  25000.0   Male   \n3             0.0    118000.0           5000.0  12000.0   Male   \n4             4.0    210000.0         380000.0  50000.0   Male   \n\n   Masters_Degree  ...  Doctorate_Degree  Highschool  Some_College  \\\n0               0  ...                 0           0             0   \n1               0  ...                 0           0             0   \n2               0  ...                 0           0             0   \n3               0  ...                 0           0             0   \n4               0  ...                 0           0             0   \n\n   Race_Asian  Race_White  Race_Two_Or_More  Race_Black  Race_Hispanic  state  \\\n0           0           0                 0           0              0     CA   \n1           0           0                 0           0              0     WA   \n2           0           0                 0           0              0     CA   \n3           0           0                 0           0              0     WA   \n4           0           0                 0           0              0     CA   \n\n  in_top_15  \n0     False  \n1      True  \n2      True  \n3      True  \n4      True  \n\n[5 rows x 21 columns]"},"exec_count":35,"output_type":"execute_result"}},"pos":46,"type":"cell"}
{"cell_type":"code","exec_count":36,"id":"8db42d","input":"import plotly.express as px","pos":47,"type":"cell"}
{"cell_type":"code","exec_count":37,"id":"dec75d","input":"df = df[df['gender'] != 'Title: Senior Software Engineer']\ndf['gender'].value_counts()","output":{"0":{"data":{"text/plain":"Male      35698\nFemale     6999\nOther       400\nName: gender, dtype: int64"},"exec_count":37,"output_type":"execute_result"}},"pos":48,"type":"cell"}
{"cell_type":"code","exec_count":38,"id":"91acc4","input":"df = df[df['basesalary'] != 1620000]","pos":49,"type":"cell"}
{"cell_type":"code","exec_count":39,"id":"d63b86","input":"df = df[df['totalyearlycompensation'] != 4500000]","pos":51,"type":"cell"}
{"cell_type":"code","exec_count":40,"id":"e76a4c","input":"df = df[df['totalyearlycompensation'] != 4980000]","pos":52,"type":"cell"}
{"cell_type":"code","exec_count":41,"id":"cf729f","input":"df = df[df['totalyearlycompensation'] != 4950000]","pos":53,"type":"cell"}
{"cell_type":"code","exec_count":42,"id":"8c8a73","input":"df[df['totalyearlycompensation'] >= 4000000]","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>...</th>\n      <th>Doctorate_Degree</th>\n      <th>Highschool</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>state</th>\n      <th>in_top_15</th>\n    </tr>\n  </thead>\n  <tbody>\n  </tbody>\n</table>\n<p>0 rows Ã— 21 columns</p>\n</div>","text/plain":"Empty DataFrame\nColumns: [company, title, totalyearlycompensation, yearsofexperience, yearsatcompany, basesalary, stockgrantvalue, bonus, gender, Masters_Degree, Bachelors_Degree, Doctorate_Degree, Highschool, Some_College, Race_Asian, Race_White, Race_Two_Or_More, Race_Black, Race_Hispanic, state, in_top_15]\nIndex: []\n\n[0 rows x 21 columns]"},"exec_count":42,"output_type":"execute_result"}},"pos":50,"type":"cell"}
{"cell_type":"code","exec_count":44,"id":"6e9a69","input":"averagebs = df.groupby('title')['basesalary'].mean().to_frame\naveragebs","output":{"0":{"data":{"text/plain":"<bound method Series.to_frame of title\nBusiness Analyst                100979.127135\nData Scientist                  138795.977011\nHardware Engineer               137322.200393\nHuman Resources                 128033.816425\nManagement Consultant           133762.903226\nMarketing                       138347.517730\nMechanical Engineer             116832.236842\nProduct Designer                138979.877515\nProduct Manager                 148884.260699\nRecruiter                       115087.591241\nSales                           113321.428571\nSoftware Engineer               131630.290662\nSoftware Engineering Manager    175346.762277\nSolution Architect              140747.201493\nTechnical Program Manager       154503.919373\nName: basesalary, dtype: float64>"},"exec_count":44,"output_type":"execute_result"}},"pos":55,"type":"cell"}
{"cell_type":"code","exec_count":45,"id":"ca8e58","input":"averagebs = df.groupby('title')['basesalary'].mean().to_frame().reset_index()\naveragebs","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>title</th>\n      <th>basesalary</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Business Analyst</td>\n      <td>100979.127135</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Data Scientist</td>\n      <td>138795.977011</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Hardware Engineer</td>\n      <td>137322.200393</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Human Resources</td>\n      <td>128033.816425</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Management Consultant</td>\n      <td>133762.903226</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Marketing</td>\n      <td>138347.517730</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Mechanical Engineer</td>\n      <td>116832.236842</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Product Designer</td>\n      <td>138979.877515</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Product Manager</td>\n      <td>148884.260699</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Recruiter</td>\n      <td>115087.591241</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>Sales</td>\n      <td>113321.428571</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>Software Engineer</td>\n      <td>131630.290662</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>Software Engineering Manager</td>\n      <td>175346.762277</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>Solution Architect</td>\n      <td>140747.201493</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>Technical Program Manager</td>\n      <td>154503.919373</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"                           title     basesalary\n0               Business Analyst  100979.127135\n1                 Data Scientist  138795.977011\n2              Hardware Engineer  137322.200393\n3                Human Resources  128033.816425\n4          Management Consultant  133762.903226\n5                      Marketing  138347.517730\n6            Mechanical Engineer  116832.236842\n7               Product Designer  138979.877515\n8                Product Manager  148884.260699\n9                      Recruiter  115087.591241\n10                         Sales  113321.428571\n11             Software Engineer  131630.290662\n12  Software Engineering Manager  175346.762277\n13            Solution Architect  140747.201493\n14     Technical Program Manager  154503.919373"},"exec_count":45,"output_type":"execute_result"}},"pos":56,"type":"cell"}
{"cell_type":"code","exec_count":47,"id":"2fc4f3","input":"fig = px.pie(df, names='title', title='Most common job titles')\nfig.show()","output":{"0":{"data":{"iframe":"630a0d6a53f251b72196bf4824b5d57188210695"},"exec_count":47,"output_type":"execute_result"}},"pos":58,"type":"cell"}
{"cell_type":"code","exec_count":5,"id":"1a683c","input":"df['company'].isnull().values.any()","output":{"0":{"data":{"text/plain":"True"},"exec_count":5,"output_type":"execute_result"}},"pos":5,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"fe6f70","input":"df['company'].isnull().sum()","output":{"0":{"data":{"text/plain":"5"},"exec_count":6,"output_type":"execute_result"}},"pos":6,"type":"cell"}
{"cell_type":"code","exec_count":68,"id":"ac7793","input":"bf = df[df['company'] == 'Google']\nbf.groupby('gender')['totalyearlycompensation'].mean()","output":{"0":{"data":{"text/plain":"gender\nFemale    255969.635628\nMale      281186.378467\nOther     284193.548387\nName: totalyearlycompensation, dtype: float64"},"exec_count":68,"output_type":"execute_result"}},"pos":59,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"b8b9eb","input":"len(df)","output":{"0":{"data":{"text/plain":"62642"},"exec_count":7,"output_type":"execute_result"}},"pos":7,"type":"cell"}
{"cell_type":"code","exec_count":78,"id":"928438","input":"df['bonus'].describe()","output":{"0":{"data":{"text/plain":"count      43093.000000\nmean       19058.879975\nstd        26457.628704\nmin            0.000000\n25%         2000.000000\n50%        14000.000000\n75%        26000.000000\nmax      1000000.000000\nName: bonus, dtype: float64"},"exec_count":78,"output_type":"execute_result"}},"pos":61,"type":"cell"}
{"cell_type":"code","exec_count":8,"id":"606be6","input":"df['level'].isnull().values.any()","output":{"0":{"data":{"text/plain":"True"},"exec_count":8,"output_type":"execute_result"}},"pos":8,"type":"cell"}
{"cell_type":"code","exec_count":80,"id":"0f3854","input":"fig = px.bar(averagebs, x='title', y='basesalary', title='Job title and their average base salaries')\nfig.update_xaxes(categoryorder='mean ascending')\nfig.show()","output":{"0":{"data":{"iframe":"dc2a91c7165814b2bd0f22b6ae0482991ae22bc7"},"exec_count":80,"output_type":"execute_result"}},"pos":57,"type":"cell"}
{"cell_type":"code","exec_count":81,"id":"50e4ff","input":"df = df[df['basesalary'] != 0.0]","pos":24,"type":"cell"}
{"cell_type":"code","exec_count":82,"id":"daab34","input":"fig = px.scatter(df, x='basesalary',  y='totalyearlycompensation', title='Gender and salaries', color='gender')\nfig.show()","output":{"0":{"data":{"iframe":"f9007eb1271bbba9a41c36c8f68adf7d6e7fae6d"},"exec_count":82,"output_type":"execute_result"}},"pos":54,"type":"cell"}
{"cell_type":"code","exec_count":83,"id":"cef696","input":"df.columns","output":{"0":{"data":{"text/plain":"Index(['company', 'title', 'totalyearlycompensation', 'yearsofexperience',\n       'yearsatcompany', 'basesalary', 'stockgrantvalue', 'bonus', 'gender',\n       'Masters_Degree', 'Bachelors_Degree', 'Doctorate_Degree', 'Highschool',\n       'Some_College', 'Race_Asian', 'Race_White', 'Race_Two_Or_More',\n       'Race_Black', 'Race_Hispanic', 'state', 'in_top_15'],\n      dtype='object')"},"exec_count":83,"output_type":"execute_result"}},"pos":4,"type":"cell"}
{"cell_type":"code","exec_count":9,"id":"60d32f","input":"df['level'].isnull().sum()","output":{"0":{"data":{"text/plain":"119"},"exec_count":9,"output_type":"execute_result"}},"pos":9,"type":"cell"}
{"cell_type":"code","exec_count":94,"id":"cc03fb","input":"df['Education'].value_counts()","output":{"0":{"data":{"text/plain":"Missing       14343\nMasters       13792\nBachelors     11873\nPHD            1438\nSome            348\nHighschool      310\nName: Education, dtype: int64"},"exec_count":94,"output_type":"execute_result"}},"pos":62,"type":"cell"}
{"cell_type":"code","exec_count":95,"id":"35242e","input":"def check_education(master, bach, doc, high, some):\n    if master == 1:\n        return \"Masters\"\n    elif bach == 1:\n        return \"Bachelors\"\n    elif doc == 1:\n        return \"PHD\"\n    elif high == 1:\n        return 'Highschool'\n    elif some == 1:\n        return \"Some\"\n    else: return \"Missing\"","pos":27,"type":"cell"}
{"cell_type":"code","exec_count":98,"id":"97c55a","input":"len(df)","output":{"0":{"data":{"text/plain":"42104"},"exec_count":98,"output_type":"execute_result"}},"pos":63,"type":"cell"}
{"cell_type":"code","exec_count":99,"id":"bee95b","input":"bf.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>...</th>\n      <th>Doctorate_Degree</th>\n      <th>Highschool</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>state</th>\n      <th>in_top_15</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>4</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>640000</td>\n      <td>11.0</td>\n      <td>4.0</td>\n      <td>210000.0</td>\n      <td>380000.0</td>\n      <td>50000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>225000</td>\n      <td>4.0</td>\n      <td>2.0</td>\n      <td>130000.0</td>\n      <td>60000.0</td>\n      <td>25000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NY</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>43</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>230000</td>\n      <td>3.5</td>\n      <td>2.5</td>\n      <td>124000.0</td>\n      <td>79500.0</td>\n      <td>26600.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>WA</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>55</th>\n      <td>Google</td>\n      <td>Software Engineering Manager</td>\n      <td>749000</td>\n      <td>28.0</td>\n      <td>3.5</td>\n      <td>247000.0</td>\n      <td>430000.0</td>\n      <td>70000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>57</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>143000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>105000.0</td>\n      <td>22500.0</td>\n      <td>16000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Other</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 21 columns</p>\n</div>","text/plain":"   company                         title  totalyearlycompensation  \\\n4   Google             Software Engineer                   640000   \n21  Google             Software Engineer                   225000   \n43  Google             Software Engineer                   230000   \n55  Google  Software Engineering Manager                   749000   \n57  Google             Software Engineer                   143000   \n\n    yearsofexperience  yearsatcompany  basesalary  stockgrantvalue    bonus  \\\n4                11.0             4.0    210000.0         380000.0  50000.0   \n21                4.0             2.0    130000.0          60000.0  25000.0   \n43                3.5             2.5    124000.0          79500.0  26600.0   \n55               28.0             3.5    247000.0         430000.0  70000.0   \n57                0.0             0.0    105000.0          22500.0  16000.0   \n\n   gender  Masters_Degree  ...  Doctorate_Degree  Highschool  Some_College  \\\n4    Male               0  ...                 0           0             0   \n21   Male               0  ...                 0           0             0   \n43   Male               0  ...                 0           0             0   \n55   Male               0  ...                 0           0             0   \n57   Male               0  ...                 0           0             0   \n\n    Race_Asian  Race_White  Race_Two_Or_More  Race_Black  Race_Hispanic  \\\n4            0           0                 0           0              0   \n21           0           0                 0           0              0   \n43           0           0                 0           0              0   \n55           0           0                 0           0              0   \n57           0           0                 0           0              0   \n\n    state in_top_15  \n4      CA      True  \n21     NY      True  \n43     WA      True  \n55     CA      True  \n57  Other      True  \n\n[5 rows x 21 columns]"},"exec_count":99,"output_type":"execute_result"}},"pos":60,"type":"cell"}
{"cell_type":"markdown","id":"a5cb75","input":"Our dataset is from: [https://www.kaggle.com/datasets/jackogozaly/data\\-science\\-and\\-stem\\-salaries?datasetId=1640011&sortBy=voteCount](https://www.kaggle.com/datasets/jackogozaly/data-science-and-stem-salaries?datasetId=1640011&sortBy=voteCount)\n","pos":1,"type":"cell"}
{"id":0,"time":1658781486239,"type":"user"}
{"last_load":1658768544112,"type":"file"}