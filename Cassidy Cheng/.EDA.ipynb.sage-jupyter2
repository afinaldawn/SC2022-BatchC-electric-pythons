{"backend_state":"init","connection_file":"/projects/0bcf82e6-7441-4432-a339-19b67c22cc5c/.local/share/jupyter/runtime/kernel-a27fb830-e97b-4fdf-ace5-25c214344eff.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"08b12b","input":"","pos":137,"type":"cell"}
{"cell_type":"code","exec_count":1,"id":"9280af","input":"import pandas as pd\nimport numpy as np","pos":1,"type":"cell"}
{"cell_type":"code","exec_count":10,"id":"ff2335","input":"df['otherdetails'].value_counts() #seems kinda useless so get rid of it","output":{"0":{"data":{"text/plain":"Masters                                                                                                                                3983\nTitle: Software Engineer                                                                                                               1453\nRace: Asian, Academic Level: Master’s degree                                                                                           1213\nRace: White, Academic Level: Bachelor’s degree                                                                                         1075\nRace: Asian, Academic Level: Bachelor’s degree                                                                                          977\n                                                                                                                                       ... \n150,000 sign on, Title: Sr. Engineering Manager, Race: White, Academic Level: Doctorate (PhD)                                             1\nTitle: Sde2, Race: Two or More Races, Academic Level: Doctorate (PhD)                                                                     1\n10k relocation, 20k sign in bonus, 35k RSU over 4 years, Title: Tech Lead, Race: Hispanic / Latino, Academic Level: Master’s degree       1\nTitle: Pm 3                                                                                                                               1\nindustry hire                                                                                                                             1\nName: otherdetails, Length: 12841, dtype: int64"},"exec_count":10,"output_type":"execute_result"}},"pos":11,"type":"cell"}
{"cell_type":"code","exec_count":100,"id":"640318","input":"total_squared_error = (np.sum((y_test - lin_pred)**2)) #get the sum of all the errors (error = what we want (y_test) - what we predicted (y_hat))\nmean_squared_error = total_squared_error/len(y_test) #divide this by how many rows/observations we have \nprint(mean_squared_error)","output":{"0":{"name":"stdout","output_type":"stream","text":"1248612167.2077157\n"}},"pos":103,"type":"cell"}
{"cell_type":"code","exec_count":101,"id":"670fd1","input":"grid.score(x_test, y_test)","output":{"0":{"data":{"text/plain":"0.9257397925420172"},"exec_count":101,"output_type":"execute_result"}},"pos":104,"type":"cell"}
{"cell_type":"code","exec_count":102,"id":"7d1a91","input":"plt.figure(figsize=(10,5))\nplt.plot(y_test, y_test, '--')\nplt.scatter(y_test,y_test, c='green')\nplt.scatter(y_test, lin_pred, c='orange')\nplt.xlabel('x', fontsize=10)\nplt.ylabel('y', fontsize=10)\nplt.title('Linear Regression Results')\nplt.grid('on')\nplt.show()","output":{"0":{"data":{"image/png":"0f39794dd49da7274531e1b55a605968fc48df5e","text/plain":"<Figure size 720x360 with 1 Axes>"},"exec_count":102,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":105,"type":"cell"}
{"cell_type":"code","exec_count":103,"id":"08f370","input":"plt.scatter(y_test, y_test, color=\"black\")\nplt.plot(y_test, lin_pred, color=\"blue\", linewidth=3)\n\nplt.xticks(())\nplt.yticks(())\n\nplt.show()","output":{"0":{"data":{"image/png":"951acbfe96b70e5e332d99aab36aa255390c5072","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":103,"output_type":"execute_result"}},"pos":106,"type":"cell"}
{"cell_type":"code","exec_count":104,"id":"a32924","input":"from sklearn.linear_model import Ridge","pos":107,"type":"cell"}
{"cell_type":"code","exec_count":105,"id":"c2a22d","input":"ridge_model = Ridge()\nridge_model","output":{"0":{"data":{"text/html":"<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Ridge()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" checked><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Ridge</label><div class=\"sk-toggleable__content\"><pre>Ridge()</pre></div></div></div></div></div>","text/plain":"Ridge()"},"exec_count":105,"output_type":"execute_result"}},"pos":109,"type":"cell"}
{"cell_type":"code","exec_count":106,"id":"0180b3","input":"ridge_model.fit(x_train, y_train)","output":{"0":{"data":{"text/html":"<style>#sk-container-id-4 {color: black;background-color: white;}#sk-container-id-4 pre{padding: 0;}#sk-container-id-4 div.sk-toggleable {background-color: white;}#sk-container-id-4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-4 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-4 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-4 div.sk-item {position: relative;z-index: 1;}#sk-container-id-4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-4 div.sk-item::before, #sk-container-id-4 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-4 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-4 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-4 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-4 div.sk-label-container {text-align: center;}#sk-container-id-4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-4 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Ridge()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-6\" type=\"checkbox\" checked><label for=\"sk-estimator-id-6\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Ridge</label><div class=\"sk-toggleable__content\"><pre>Ridge()</pre></div></div></div></div></div>","text/plain":"Ridge()"},"exec_count":106,"output_type":"execute_result"}},"pos":110,"type":"cell"}
{"cell_type":"code","exec_count":107,"id":"accd64","input":"y_ridge = ridge_model.predict(x_test)","pos":111,"type":"cell"}
{"cell_type":"code","exec_count":108,"id":"69e1bf","input":"#Compute your MSE.\ntotal_squared_error = (np.sum((y_test - y_ridge)**2)) #get the sum of all the errors (error = what we want (y_test) - what we predicted (y_hat))\nmean_squared_error = total_squared_error/len(y_test) #divide this by how many rows/observations we have \nprint(mean_squared_error)","output":{"0":{"name":"stdout","output_type":"stream","text":"1248597912.7858734\n"}},"pos":112,"type":"cell"}
{"cell_type":"code","exec_count":109,"id":"d105a8","input":"ridge_model.score(x_test, y_test)","output":{"0":{"data":{"text/plain":"0.925740640312327"},"exec_count":109,"output_type":"execute_result"}},"pos":113,"type":"cell"}
{"cell_type":"code","exec_count":11,"id":"a91b56","input":"df['tag'].value_counts() #see above note","output":{"0":{"data":{"text/plain":"Full Stack                        11382\nDistributed Systems (Back-End)    10838\nAPI Development (Back-End)         6277\nML / AI                            4204\nWeb Development (Front-End)        2971\n                                  ...  \nPublic Policy                         1\nD&I                                   1\nTeleSales                             1\nServerless                            1\nIndustry Cloud                        1\nName: tag, Length: 3058, dtype: int64"},"exec_count":11,"output_type":"execute_result"}},"pos":12,"type":"cell"}
{"cell_type":"code","exec_count":110,"id":"69e6aa","input":"plt.figure(figsize=(10,5))\nplt.plot(y_test, y_test, '--')\nplt.scatter(y_test,y_test, c='red')\nplt.scatter(y_test, y_ridge, c='green')\nplt.xlabel('x', fontsize=10)\nplt.ylabel('y', fontsize=10)\nplt.title('Ridge Regressor Results')\nplt.grid('on')\nplt.show()","output":{"0":{"data":{"image/png":"7772a048662e8ea7f0c618cba07336c9ed3e74fd","text/plain":"<Figure size 720x360 with 1 Axes>"},"exec_count":110,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":114,"type":"cell"}
{"cell_type":"code","exec_count":111,"id":"ae011e","input":"plt.scatter(y_test, y_test, color=\"black\")\nplt.plot(y_test, y_ridge, color=\"blue\", linewidth=3)\n\nplt.xticks(())\nplt.yticks(())\n\nplt.show()","output":{"0":{"data":{"image/png":"98a2df1573cc37e9093331de89e68786c940752c","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":111,"output_type":"execute_result"}},"pos":115,"type":"cell"}
{"cell_type":"code","exec_count":112,"id":"05b4f3","input":"from sklearn.svm import SVR","pos":116,"type":"cell"}
{"cell_type":"code","exec_count":113,"id":"636430","input":"my_SVR_model = SVR()","pos":117,"type":"cell"}
{"cell_type":"code","exec_count":114,"id":"c4dd73","input":"my_SVR_model.fit(x_train, y_train)","output":{"0":{"data":{"text/html":"<style>#sk-container-id-5 {color: black;background-color: white;}#sk-container-id-5 pre{padding: 0;}#sk-container-id-5 div.sk-toggleable {background-color: white;}#sk-container-id-5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-5 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-5 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-5 div.sk-item {position: relative;z-index: 1;}#sk-container-id-5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-5 div.sk-item::before, #sk-container-id-5 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-5 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-5 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-5 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-5 div.sk-label-container {text-align: center;}#sk-container-id-5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-5 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-5\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SVR()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-7\" type=\"checkbox\" checked><label for=\"sk-estimator-id-7\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SVR</label><div class=\"sk-toggleable__content\"><pre>SVR()</pre></div></div></div></div></div>","text/plain":"SVR()"},"exec_count":114,"output_type":"execute_result"}},"pos":118,"type":"cell"}
{"cell_type":"code","exec_count":115,"id":"20e65f","input":"SVR_pred = my_SVR_model.predict(x_test)\nSVR_pred","output":{"0":{"data":{"text/plain":"array([172412.59326179, 172744.16690739, 174231.67136812, ...,\n       171509.69450863, 172025.29369127, 172332.85723949])"},"exec_count":115,"output_type":"execute_result"}},"pos":119,"type":"cell"}
{"cell_type":"code","exec_count":116,"id":"13769a","input":"total_squared_error = (np.sum((y_test - SVR_pred)**2)) #get the sum of all the errors (error = what we want (y_test) - what we predicted (y_hat))\nmean_squared_error = total_squared_error/len(y_test) #divide this by how many rows/observations we have \nprint(mean_squared_error)","output":{"0":{"name":"stdout","output_type":"stream","text":"17039159060.458633\n"}},"pos":120,"type":"cell"}
{"cell_type":"code","exec_count":117,"id":"34e2ed","input":"my_SVR_model.score(x_test, y_test)","output":{"0":{"data":{"text/plain":"-0.013390322448081582"},"exec_count":117,"output_type":"execute_result"}},"pos":121,"type":"cell"}
{"cell_type":"code","exec_count":118,"id":"1cad99","input":"plt.figure(figsize=(10,5))\nplt.plot(y_test, y_test, '--')\nplt.scatter(y_test,y_test, c='orange')\nplt.scatter(y_test, SVR_pred, c='green')\nplt.xlabel('x', fontsize=10)\nplt.ylabel('y', fontsize=10)\nplt.title('SVR Results')\nplt.grid('on')\nplt.show()","output":{"0":{"data":{"image/png":"d4ad4a981f8195efa9389c152ccc98484fb3f3ed","text/plain":"<Figure size 720x360 with 1 Axes>"},"exec_count":118,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":122,"type":"cell"}
{"cell_type":"code","exec_count":119,"id":"fa7d7a","input":"plt.scatter(y_test, y_test, color=\"black\")\nplt.plot(y_test, SVR_pred, color=\"blue\", linewidth=3)\nplt.xticks(())\nplt.yticks(())\nplt.grid('on')\nplt.title('Results')\nplt.show()","output":{"0":{"data":{"image/png":"f49d2b81def679194b6753f3a3f42c813201728a","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":119,"output_type":"execute_result"}},"pos":123,"type":"cell"}
{"cell_type":"code","exec_count":12,"id":"cb8ed1","input":"df['level'].value_counts()","output":{"0":{"data":{"text/plain":"L4                             5014\nL5                             4871\nL3                             3337\nL6                             2871\nSenior Software Engineer       1443\n                               ... \nMid Market                        1\nGr 7                              1\nSenior BA                         1\nConsulting Analyst                1\nBioinformatics Scientist II       1\nName: level, Length: 2923, dtype: int64"},"exec_count":12,"output_type":"execute_result"}},"pos":13,"type":"cell"}
{"cell_type":"code","exec_count":120,"id":"b18017","input":"from sklearn.linear_model import SGDRegressor","pos":124,"type":"cell"}
{"cell_type":"code","exec_count":121,"id":"1aa40c","input":"my_SGD_model = SGDRegressor()\nmy_SGD_model","output":{"0":{"data":{"text/html":"<style>#sk-container-id-6 {color: black;background-color: white;}#sk-container-id-6 pre{padding: 0;}#sk-container-id-6 div.sk-toggleable {background-color: white;}#sk-container-id-6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-6 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-6 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-6 div.sk-item {position: relative;z-index: 1;}#sk-container-id-6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-6 div.sk-item::before, #sk-container-id-6 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-6 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-6 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-6 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-6 div.sk-label-container {text-align: center;}#sk-container-id-6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-6 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-6\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SGDRegressor()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-8\" type=\"checkbox\" checked><label for=\"sk-estimator-id-8\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SGDRegressor</label><div class=\"sk-toggleable__content\"><pre>SGDRegressor()</pre></div></div></div></div></div>","text/plain":"SGDRegressor()"},"exec_count":121,"output_type":"execute_result"}},"pos":125,"type":"cell"}
{"cell_type":"code","exec_count":122,"id":"3db43b","input":"my_SGD_model.fit(x_train, y_train)","output":{"0":{"data":{"text/html":"<style>#sk-container-id-7 {color: black;background-color: white;}#sk-container-id-7 pre{padding: 0;}#sk-container-id-7 div.sk-toggleable {background-color: white;}#sk-container-id-7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-7 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-7 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-7 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-7 div.sk-item {position: relative;z-index: 1;}#sk-container-id-7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-7 div.sk-item::before, #sk-container-id-7 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-7 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-7 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-7 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-7 div.sk-label-container {text-align: center;}#sk-container-id-7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-7 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-7\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SGDRegressor()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-9\" type=\"checkbox\" checked><label for=\"sk-estimator-id-9\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SGDRegressor</label><div class=\"sk-toggleable__content\"><pre>SGDRegressor()</pre></div></div></div></div></div>","text/plain":"SGDRegressor()"},"exec_count":122,"output_type":"execute_result"}},"pos":126,"type":"cell"}
{"cell_type":"code","exec_count":123,"id":"b5ef3b","input":"SGD_pred = my_SGD_model.predict(x_test)","pos":127,"type":"cell"}
{"cell_type":"code","exec_count":124,"id":"4daceb","input":"total_squared_error = (np.sum((y_test - SGD_pred)**2)) #get the sum of all the errors (error = what we want (y_test) - what we predicted (y_hat))\nmean_squared_error = total_squared_error/len(y_test) #divide this by how many rows/observations we have \nprint(mean_squared_error)","output":{"0":{"name":"stdout","output_type":"stream","text":"1.5116324476071885e+37\n"}},"pos":128,"type":"cell"}
{"cell_type":"code","exec_count":125,"id":"0798c6","input":"plt.figure(figsize=(10,5))\nplt.plot(y_test, y_test, '--')\nplt.scatter(y_test,y_test, c='orange')\nplt.scatter(y_test, SGD_pred, c='green')\nplt.xlabel('x', fontsize=10)\nplt.ylabel('y', fontsize=10)\nplt.title('SGD Results')\nplt.grid('on')\nplt.show()","output":{"0":{"data":{"image/png":"62131c010d4027d750eb097bbf06115e075d3ea9","text/plain":"<Figure size 720x360 with 1 Axes>"},"exec_count":125,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":129,"type":"cell"}
{"cell_type":"code","exec_count":126,"id":"7babd6","input":"from sklearn.neighbors import KNeighborsRegressor as KNN\nfrom sklearn.model_selection import GridSearchCV","pos":130,"type":"cell"}
{"cell_type":"code","exec_count":13,"id":"f1912a","input":"df['dmaid'].value_counts()","output":{"0":{"data":{"text/plain":"807.0    20400\n819.0    12343\n0.0       9826\n501.0     5156\n506.0     1773\n         ...  \n503.0        1\n687.0        1\n693.0        1\n651.0        1\n658.0        1\nName: dmaid, Length: 149, dtype: int64"},"exec_count":13,"output_type":"execute_result"}},"pos":14,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":135,"id":"0dc9e5","input":"parameters = {'n_neighbors':[7], 'weights':['uniform']}\nknn = KNN()\ngrid = GridSearchCV(knn, parameters)\ngrid.fit(x_train, y_train)","output":{"0":{"data":{"text/html":"<style>#sk-container-id-9 {color: black;background-color: white;}#sk-container-id-9 pre{padding: 0;}#sk-container-id-9 div.sk-toggleable {background-color: white;}#sk-container-id-9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-9 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-9 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-9 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-9 div.sk-item {position: relative;z-index: 1;}#sk-container-id-9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-9 div.sk-item::before, #sk-container-id-9 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-9 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-9 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-9 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-9 div.sk-label-container {text-align: center;}#sk-container-id-9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-9 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-9\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(estimator=KNeighborsRegressor(),\n             param_grid={&#x27;n_neighbors&#x27;: [7], &#x27;weights&#x27;: [&#x27;uniform&#x27;]})</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-13\" type=\"checkbox\" ><label for=\"sk-estimator-id-13\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(estimator=KNeighborsRegressor(),\n             param_grid={&#x27;n_neighbors&#x27;: [7], &#x27;weights&#x27;: [&#x27;uniform&#x27;]})</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-14\" type=\"checkbox\" ><label for=\"sk-estimator-id-14\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: KNeighborsRegressor</label><div class=\"sk-toggleable__content\"><pre>KNeighborsRegressor()</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-15\" type=\"checkbox\" ><label for=\"sk-estimator-id-15\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsRegressor</label><div class=\"sk-toggleable__content\"><pre>KNeighborsRegressor()</pre></div></div></div></div></div></div></div></div></div></div>","text/plain":"GridSearchCV(estimator=KNeighborsRegressor(),\n             param_grid={'n_neighbors': [7], 'weights': ['uniform']})"},"exec_count":135,"output_type":"execute_result"}},"pos":131,"type":"cell"}
{"cell_type":"code","exec_count":136,"id":"9d1b83","input":"grid.best_params_","output":{"0":{"data":{"text/plain":"{'n_neighbors': 7, 'weights': 'uniform'}"},"exec_count":136,"output_type":"execute_result"}},"pos":132,"type":"cell"}
{"cell_type":"code","exec_count":137,"id":"f5b542","input":"KNN_pred = grid.predict(x_test)","pos":133,"type":"cell"}
{"cell_type":"code","exec_count":138,"id":"10310b","input":"total_squared_error = (np.sum((y_test - KNN_pred)**2)) #get the sum of all the errors (error = what we want (y_test) - what we predicted (y_hat))\nmean_squared_error = total_squared_error/len(y_test) #divide this by how many rows/observations we have \nprint(mean_squared_error)","output":{"0":{"name":"stdout","output_type":"stream","text":"1386349653.310765\n"}},"pos":134,"type":"cell"}
{"cell_type":"code","exec_count":139,"id":"324b6e","input":"grid.score(x_test, y_test)","output":{"0":{"data":{"text/plain":"0.9175479659994119"},"exec_count":139,"output_type":"execute_result"}},"pos":135,"type":"cell"}
{"cell_type":"code","exec_count":14,"id":"8888ea","input":"df.columns","output":{"0":{"data":{"text/plain":"Index(['timestamp', 'company', 'level', 'title', 'totalyearlycompensation',\n       'location', 'yearsofexperience', 'yearsatcompany', 'tag', 'basesalary',\n       'stockgrantvalue', 'bonus', 'gender', 'otherdetails', 'cityid', 'dmaid',\n       'rowNumber', 'Masters_Degree', 'Bachelors_Degree', 'Doctorate_Degree',\n       'Highschool', 'Some_College', 'Race_Asian', 'Race_White',\n       'Race_Two_Or_More', 'Race_Black', 'Race_Hispanic', 'Race', 'Education'],\n      dtype='object')"},"exec_count":14,"output_type":"execute_result"}},"pos":15,"type":"cell"}
{"cell_type":"code","exec_count":140,"id":"aeea03","input":"plt.figure(figsize=(10,5))\nplt.plot(y_test, y_test, '--')\nplt.scatter(y_test,y_test, c='orange')\nplt.scatter(y_test, KNN_pred, c='green')\nplt.xlabel('x', fontsize=10)\nplt.ylabel('y', fontsize=10)\nplt.title('KNN Results')\nplt.grid('on')\nplt.show()","output":{"0":{"data":{"image/png":"020bdfcc7a423e4870795cfa7f9e2b65a6e8be31","text/plain":"<Figure size 720x360 with 1 Axes>"},"exec_count":140,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":136,"type":"cell"}
{"cell_type":"code","exec_count":15,"id":"4b6158","input":"df = df.drop(['level', 'tag', 'otherdetails', 'Education', 'Race', 'dmaid', 'cityid', 'rowNumber', 'timestamp'], axis = 1)","pos":16,"type":"cell"}
{"cell_type":"code","exec_count":16,"id":"8645b8","input":"df.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>location</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>Bachelors_Degree</th>\n      <th>Doctorate_Degree</th>\n      <th>Highschool</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Oracle</td>\n      <td>Product Manager</td>\n      <td>127000</td>\n      <td>Redwood City, CA</td>\n      <td>1.5</td>\n      <td>1.5</td>\n      <td>107000.0</td>\n      <td>20000.0</td>\n      <td>10000.0</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>eBay</td>\n      <td>Software Engineer</td>\n      <td>100000</td>\n      <td>San Francisco, CA</td>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Amazon</td>\n      <td>Product Manager</td>\n      <td>310000</td>\n      <td>Seattle, WA</td>\n      <td>8.0</td>\n      <td>0.0</td>\n      <td>155000.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Apple</td>\n      <td>Software Engineering Manager</td>\n      <td>372000</td>\n      <td>Sunnyvale, CA</td>\n      <td>7.0</td>\n      <td>5.0</td>\n      <td>157000.0</td>\n      <td>180000.0</td>\n      <td>35000.0</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>157000</td>\n      <td>Mountain View, CA</td>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"     company                         title  totalyearlycompensation  \\\n0     Oracle               Product Manager                   127000   \n1       eBay             Software Engineer                   100000   \n2     Amazon               Product Manager                   310000   \n3      Apple  Software Engineering Manager                   372000   \n4  Microsoft             Software Engineer                   157000   \n\n            location  yearsofexperience  yearsatcompany  basesalary  \\\n0   Redwood City, CA                1.5             1.5    107000.0   \n1  San Francisco, CA                5.0             3.0         0.0   \n2        Seattle, WA                8.0             0.0    155000.0   \n3      Sunnyvale, CA                7.0             5.0    157000.0   \n4  Mountain View, CA                5.0             3.0         0.0   \n\n   stockgrantvalue    bonus gender  Masters_Degree  Bachelors_Degree  \\\n0          20000.0  10000.0    NaN               0                 0   \n1              0.0      0.0    NaN               0                 0   \n2              0.0      0.0    NaN               0                 0   \n3         180000.0  35000.0    NaN               0                 0   \n4              0.0      0.0    NaN               0                 0   \n\n   Doctorate_Degree  Highschool  Some_College  Race_Asian  Race_White  \\\n0                 0           0             0           0           0   \n1                 0           0             0           0           0   \n2                 0           0             0           0           0   \n3                 0           0             0           0           0   \n4                 0           0             0           0           0   \n\n   Race_Two_Or_More  Race_Black  Race_Hispanic  \n0                 0           0              0  \n1                 0           0              0  \n2                 0           0              0  \n3                 0           0              0  \n4                 0           0              0  "},"exec_count":16,"output_type":"execute_result"}},"pos":17,"type":"cell"}
{"cell_type":"code","exec_count":17,"id":"18dac2","input":"df.dropna(inplace=True)\ndf.reset_index(drop=True, inplace=True)","pos":18,"type":"cell"}
{"cell_type":"code","exec_count":18,"id":"9863c4","input":"len(df)","output":{"0":{"data":{"text/plain":"43098"},"exec_count":18,"output_type":"execute_result"}},"pos":19,"type":"cell"}
{"cell_type":"code","exec_count":19,"id":"c694a2","input":"df.columns","output":{"0":{"data":{"text/plain":"Index(['company', 'title', 'totalyearlycompensation', 'location',\n       'yearsofexperience', 'yearsatcompany', 'basesalary', 'stockgrantvalue',\n       'bonus', 'gender', 'Masters_Degree', 'Bachelors_Degree',\n       'Doctorate_Degree', 'Highschool', 'Some_College', 'Race_Asian',\n       'Race_White', 'Race_Two_Or_More', 'Race_Black', 'Race_Hispanic'],\n      dtype='object')"},"exec_count":19,"output_type":"execute_result"}},"pos":20,"type":"cell"}
{"cell_type":"code","exec_count":2,"id":"1a4a44","input":"df = pd.read_csv(\"Levels_Fyi_Salary_Data.csv\")","pos":2,"type":"cell"}
{"cell_type":"code","exec_count":20,"id":"09b67a","input":"df[df[\"company\"] == \"Microsoft\"]","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>location</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>Bachelors_Degree</th>\n      <th>Doctorate_Degree</th>\n      <th>Highschool</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>3</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>150000</td>\n      <td>Seattle, WA</td>\n      <td>4.0</td>\n      <td>0.0</td>\n      <td>118000.0</td>\n      <td>5000.0</td>\n      <td>12000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>230000</td>\n      <td>Bellevue, WA</td>\n      <td>3.0</td>\n      <td>0.0</td>\n      <td>140000.0</td>\n      <td>75000.0</td>\n      <td>15000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>210000</td>\n      <td>Seattle, WA</td>\n      <td>10.0</td>\n      <td>10.0</td>\n      <td>160000.0</td>\n      <td>30000.0</td>\n      <td>20000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>Microsoft</td>\n      <td>Product Manager</td>\n      <td>174000</td>\n      <td>Seattle, WA</td>\n      <td>11.0</td>\n      <td>3.0</td>\n      <td>132000.0</td>\n      <td>22000.0</td>\n      <td>20000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>34</th>\n      <td>Microsoft</td>\n      <td>Product Manager</td>\n      <td>357000</td>\n      <td>Redmond, WA</td>\n      <td>13.0</td>\n      <td>13.0</td>\n      <td>201000.0</td>\n      <td>100000.0</td>\n      <td>50000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>43078</th>\n      <td>Microsoft</td>\n      <td>Product Manager</td>\n      <td>1240000</td>\n      <td>Seattle, WA</td>\n      <td>25.0</td>\n      <td>9.0</td>\n      <td>310000.0</td>\n      <td>550000.0</td>\n      <td>180000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>43087</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>135000</td>\n      <td>Redmond, WA</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>106000.0</td>\n      <td>7500.0</td>\n      <td>10000.0</td>\n      <td>Female</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>43089</th>\n      <td>Microsoft</td>\n      <td>Solution Architect</td>\n      <td>340000</td>\n      <td>San Jose, CA</td>\n      <td>23.0</td>\n      <td>13.0</td>\n      <td>200000.0</td>\n      <td>60000.0</td>\n      <td>80000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>43091</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>194000</td>\n      <td>Tel Aviv, TA, Israel</td>\n      <td>13.0</td>\n      <td>6.0</td>\n      <td>140000.0</td>\n      <td>29000.0</td>\n      <td>25000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>43095</th>\n      <td>Microsoft</td>\n      <td>Product Manager</td>\n      <td>305000</td>\n      <td>Seattle, WA</td>\n      <td>20.0</td>\n      <td>2.0</td>\n      <td>200000.0</td>\n      <td>75000.0</td>\n      <td>30000.0</td>\n      <td>Female</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>3641 rows × 20 columns</p>\n</div>","text/plain":"         company               title  totalyearlycompensation  \\\n3      Microsoft   Software Engineer                   150000   \n6      Microsoft   Software Engineer                   230000   \n22     Microsoft   Software Engineer                   210000   \n29     Microsoft     Product Manager                   174000   \n34     Microsoft     Product Manager                   357000   \n...          ...                 ...                      ...   \n43078  Microsoft     Product Manager                  1240000   \n43087  Microsoft   Software Engineer                   135000   \n43089  Microsoft  Solution Architect                   340000   \n43091  Microsoft   Software Engineer                   194000   \n43095  Microsoft     Product Manager                   305000   \n\n                   location  yearsofexperience  yearsatcompany  basesalary  \\\n3               Seattle, WA                4.0             0.0    118000.0   \n6              Bellevue, WA                3.0             0.0    140000.0   \n22              Seattle, WA               10.0            10.0    160000.0   \n29              Seattle, WA               11.0             3.0    132000.0   \n34              Redmond, WA               13.0            13.0    201000.0   \n...                     ...                ...             ...         ...   \n43078           Seattle, WA               25.0             9.0    310000.0   \n43087           Redmond, WA                1.0             1.0    106000.0   \n43089          San Jose, CA               23.0            13.0    200000.0   \n43091  Tel Aviv, TA, Israel               13.0             6.0    140000.0   \n43095           Seattle, WA               20.0             2.0    200000.0   \n\n       stockgrantvalue     bonus  gender  Masters_Degree  Bachelors_Degree  \\\n3               5000.0   12000.0    Male               0                 0   \n6              75000.0   15000.0    Male               0                 0   \n22             30000.0   20000.0    Male               0                 0   \n29             22000.0   20000.0    Male               0                 0   \n34            100000.0   50000.0    Male               0                 0   \n...                ...       ...     ...             ...               ...   \n43078         550000.0  180000.0    Male               0                 0   \n43087           7500.0   10000.0  Female               0                 0   \n43089          60000.0   80000.0    Male               0                 0   \n43091          29000.0   25000.0    Male               0                 0   \n43095          75000.0   30000.0  Female               0                 0   \n\n       Doctorate_Degree  Highschool  Some_College  Race_Asian  Race_White  \\\n3                     0           0             0           0           0   \n6                     0           0             0           0           0   \n22                    0           0             0           0           0   \n29                    0           0             0           0           0   \n34                    0           0             0           0           0   \n...                 ...         ...           ...         ...         ...   \n43078                 0           0             0           0           0   \n43087                 0           0             0           0           0   \n43089                 0           0             0           0           0   \n43091                 0           0             0           0           0   \n43095                 0           0             0           0           0   \n\n       Race_Two_Or_More  Race_Black  Race_Hispanic  \n3                     0           0              0  \n6                     0           0              0  \n22                    0           0              0  \n29                    0           0              0  \n34                    0           0              0  \n...                 ...         ...            ...  \n43078                 0           0              0  \n43087                 0           0              0  \n43089                 0           0              0  \n43091                 0           0              0  \n43095                 0           0              0  \n\n[3641 rows x 20 columns]"},"exec_count":20,"output_type":"execute_result"}},"pos":21,"type":"cell"}
{"cell_type":"code","exec_count":21,"id":"c3346a","input":"min(df[\"basesalary\"])","output":{"0":{"data":{"text/plain":"0.0"},"exec_count":21,"output_type":"execute_result"}},"pos":22,"type":"cell"}
{"cell_type":"code","exec_count":22,"id":"6889cc","input":"max(df['basesalary'])","output":{"0":{"data":{"text/plain":"1620000.0"},"exec_count":22,"output_type":"execute_result"}},"pos":23,"type":"cell"}
{"cell_type":"code","exec_count":23,"id":"63498d","input":"max(df['bonus'])","output":{"0":{"data":{"text/plain":"1000000.0"},"exec_count":23,"output_type":"execute_result"}},"pos":24,"type":"cell"}
{"cell_type":"code","exec_count":24,"id":"51215e","input":"df[df['bonus'] == 1000000]","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>location</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>Bachelors_Degree</th>\n      <th>Doctorate_Degree</th>\n      <th>Highschool</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>326</th>\n      <td>IBM</td>\n      <td>Software Engineer</td>\n      <td>125000</td>\n      <td>Austin, TX</td>\n      <td>6.0</td>\n      <td>3.0</td>\n      <td>125000.0</td>\n      <td>0.0</td>\n      <td>1000000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"    company              title  totalyearlycompensation    location  \\\n326     IBM  Software Engineer                   125000  Austin, TX   \n\n     yearsofexperience  yearsatcompany  basesalary  stockgrantvalue  \\\n326                6.0             3.0    125000.0              0.0   \n\n         bonus gender  Masters_Degree  Bachelors_Degree  Doctorate_Degree  \\\n326  1000000.0   Male               0                 0                 0   \n\n     Highschool  Some_College  Race_Asian  Race_White  Race_Two_Or_More  \\\n326           0             0           0           0                 0   \n\n     Race_Black  Race_Hispanic  \n326           0              0  "},"exec_count":24,"output_type":"execute_result"}},"pos":25,"type":"cell"}
{"cell_type":"code","exec_count":25,"id":"db14f1","input":"df.value_counts('yearsofexperience') # amount of years of experience","output":{"0":{"data":{"text/plain":"yearsofexperience\n5.00     4004\n3.00     3947\n2.00     3911\n4.00     3499\n0.00     3198\n10.00    3075\n1.00     2891\n6.00     2757\n8.00     2472\n7.00     2412\n15.00    1866\n12.00    1469\n9.00     1413\n20.00    1210\n11.00     816\n14.00     786\n13.00     777\n16.00     503\n18.00     437\n17.00     356\n25.00     273\n19.00     213\n22.00     163\n21.00     133\n23.00     110\n24.00      92\n30.00      90\n26.00      38\n28.00      29\n27.00      28\n35.00      25\n29.00      19\n40.00      12\n32.00      10\n33.00       9\n2.50        8\n31.00       6\n1.50        6\n38.00       4\n36.00       3\n3.50        3\n39.00       2\n41.00       2\n0.25        2\n42.00       2\n7.50        2\n37.00       2\n34.00       1\n4.50        1\n3.80        1\n0.30        1\n0.50        1\n0.58        1\n0.60        1\n0.80        1\n8.50        1\n1.60        1\n6.50        1\n5.50        1\n45.00       1\ndtype: int64"},"exec_count":25,"output_type":"execute_result"}},"pos":26,"type":"cell"}
{"cell_type":"code","exec_count":26,"id":"bf4862","input":"df.value_counts('company')","output":{"0":{"data":{"text/plain":"company\nAmazon             5525\nMicrosoft          3641\nGoogle             2978\nFacebook           2118\nApple              1384\n                   ... \nGeneral mills         1\nGlobal payments       1\nGloballogic           1\nGlu mobile            1\n Google               1\nLength: 1478, dtype: int64"},"exec_count":26,"output_type":"execute_result"}},"pos":27,"type":"cell"}
{"cell_type":"code","exec_count":27,"id":"92277a","input":"df[df['basesalary'] >= 1620000]","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>location</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>Bachelors_Degree</th>\n      <th>Doctorate_Degree</th>\n      <th>Highschool</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>42623</th>\n      <td>Squarespace</td>\n      <td>Software Engineer</td>\n      <td>162000</td>\n      <td>New York, NY</td>\n      <td>7.0</td>\n      <td>7.0</td>\n      <td>1620000.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"           company              title  totalyearlycompensation      location  \\\n42623  Squarespace  Software Engineer                   162000  New York, NY   \n\n       yearsofexperience  yearsatcompany  basesalary  stockgrantvalue  bonus  \\\n42623                7.0             7.0   1620000.0              0.0    0.0   \n\n      gender  Masters_Degree  Bachelors_Degree  Doctorate_Degree  Highschool  \\\n42623   Male               0                 0                 0           0   \n\n       Some_College  Race_Asian  Race_White  Race_Two_Or_More  Race_Black  \\\n42623             0           0           0                 0           0   \n\n       Race_Hispanic  \n42623              0  "},"exec_count":27,"output_type":"execute_result"}},"pos":29,"type":"cell"}
{"cell_type":"code","exec_count":28,"id":"e01c7c","input":"max(df['totalyearlycompensation'])","output":{"0":{"data":{"text/plain":"4980000"},"exec_count":28,"output_type":"execute_result"}},"pos":30,"type":"cell"}
{"cell_type":"code","exec_count":29,"id":"9193f6","input":"df[df['totalyearlycompensation'] >= 4980000]","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>location</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>Bachelors_Degree</th>\n      <th>Doctorate_Degree</th>\n      <th>Highschool</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>42714</th>\n      <td>Facebook</td>\n      <td>Product Manager</td>\n      <td>4980000</td>\n      <td>Menlo Park, CA</td>\n      <td>17.0</td>\n      <td>0.0</td>\n      <td>380000.0</td>\n      <td>4400.0</td>\n      <td>200000.0</td>\n      <td>Male</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"        company            title  totalyearlycompensation        location  \\\n42714  Facebook  Product Manager                  4980000  Menlo Park, CA   \n\n       yearsofexperience  yearsatcompany  basesalary  stockgrantvalue  \\\n42714               17.0             0.0    380000.0           4400.0   \n\n          bonus gender  Masters_Degree  Bachelors_Degree  Doctorate_Degree  \\\n42714  200000.0   Male               1                 0                 0   \n\n       Highschool  Some_College  Race_Asian  Race_White  Race_Two_Or_More  \\\n42714           0             0           1           0                 0   \n\n       Race_Black  Race_Hispanic  \n42714           0              0  "},"exec_count":29,"output_type":"execute_result"}},"pos":31,"type":"cell"}
{"cell_type":"code","exec_count":3,"id":"4ec8fc","input":"df.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>timestamp</th>\n      <th>company</th>\n      <th>level</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>location</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>tag</th>\n      <th>basesalary</th>\n      <th>...</th>\n      <th>Doctorate_Degree</th>\n      <th>Highschool</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>Race</th>\n      <th>Education</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>6/7/2017 11:33:27</td>\n      <td>Oracle</td>\n      <td>L3</td>\n      <td>Product Manager</td>\n      <td>127000</td>\n      <td>Redwood City, CA</td>\n      <td>1.5</td>\n      <td>1.5</td>\n      <td>NaN</td>\n      <td>107000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>6/10/2017 17:11:29</td>\n      <td>eBay</td>\n      <td>SE 2</td>\n      <td>Software Engineer</td>\n      <td>100000</td>\n      <td>San Francisco, CA</td>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>6/11/2017 14:53:57</td>\n      <td>Amazon</td>\n      <td>L7</td>\n      <td>Product Manager</td>\n      <td>310000</td>\n      <td>Seattle, WA</td>\n      <td>8.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>155000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>6/17/2017 0:23:14</td>\n      <td>Apple</td>\n      <td>M1</td>\n      <td>Software Engineering Manager</td>\n      <td>372000</td>\n      <td>Sunnyvale, CA</td>\n      <td>7.0</td>\n      <td>5.0</td>\n      <td>NaN</td>\n      <td>157000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>6/20/2017 10:58:51</td>\n      <td>Microsoft</td>\n      <td>60</td>\n      <td>Software Engineer</td>\n      <td>157000</td>\n      <td>Mountain View, CA</td>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 29 columns</p>\n</div>","text/plain":"            timestamp    company level                         title  \\\n0   6/7/2017 11:33:27     Oracle    L3               Product Manager   \n1  6/10/2017 17:11:29       eBay  SE 2             Software Engineer   \n2  6/11/2017 14:53:57     Amazon    L7               Product Manager   \n3   6/17/2017 0:23:14      Apple    M1  Software Engineering Manager   \n4  6/20/2017 10:58:51  Microsoft    60             Software Engineer   \n\n   totalyearlycompensation           location  yearsofexperience  \\\n0                   127000   Redwood City, CA                1.5   \n1                   100000  San Francisco, CA                5.0   \n2                   310000        Seattle, WA                8.0   \n3                   372000      Sunnyvale, CA                7.0   \n4                   157000  Mountain View, CA                5.0   \n\n   yearsatcompany  tag  basesalary  ...  Doctorate_Degree  Highschool  \\\n0             1.5  NaN    107000.0  ...                 0           0   \n1             3.0  NaN         0.0  ...                 0           0   \n2             0.0  NaN    155000.0  ...                 0           0   \n3             5.0  NaN    157000.0  ...                 0           0   \n4             3.0  NaN         0.0  ...                 0           0   \n\n  Some_College Race_Asian  Race_White  Race_Two_Or_More  Race_Black  \\\n0            0          0           0                 0           0   \n1            0          0           0                 0           0   \n2            0          0           0                 0           0   \n3            0          0           0                 0           0   \n4            0          0           0                 0           0   \n\n   Race_Hispanic  Race  Education  \n0              0   NaN        NaN  \n1              0   NaN        NaN  \n2              0   NaN        NaN  \n3              0   NaN        NaN  \n4              0   NaN        NaN  \n\n[5 rows x 29 columns]"},"exec_count":3,"output_type":"execute_result"}},"pos":3,"type":"cell"}
{"cell_type":"code","exec_count":30,"id":"50ea4c","input":"df[df['Race_Asian'] == 1]","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>location</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>Bachelors_Degree</th>\n      <th>Doctorate_Degree</th>\n      <th>Highschool</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>5129</th>\n      <td>Intel</td>\n      <td>Hardware Engineer</td>\n      <td>200000</td>\n      <td>Santa Clara, CA</td>\n      <td>14.0</td>\n      <td>3.0</td>\n      <td>163000.0</td>\n      <td>10000.0</td>\n      <td>27000.0</td>\n      <td>Female</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>7993</th>\n      <td>Latch</td>\n      <td>Software Engineering Manager</td>\n      <td>170000</td>\n      <td>New York, NY</td>\n      <td>6.0</td>\n      <td>2.0</td>\n      <td>170000.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>10054</th>\n      <td>Intuit</td>\n      <td>Software Engineer</td>\n      <td>134000</td>\n      <td>Mountain View, CA</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>110000.0</td>\n      <td>13000.0</td>\n      <td>11000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>11153</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>400000</td>\n      <td>Sunnyvale, CA</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>210000.0</td>\n      <td>145000.0</td>\n      <td>45000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>11984</th>\n      <td>Spotify</td>\n      <td>Software Engineer</td>\n      <td>210000</td>\n      <td>New York, NY</td>\n      <td>8.0</td>\n      <td>2.5</td>\n      <td>170000.0</td>\n      <td>40000.0</td>\n      <td>0.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>42611</th>\n      <td>Adobe</td>\n      <td>Product Designer</td>\n      <td>300000</td>\n      <td>San Francisco, CA</td>\n      <td>5.0</td>\n      <td>0.0</td>\n      <td>180000.0</td>\n      <td>100000.0</td>\n      <td>20000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>42709</th>\n      <td>Facebook</td>\n      <td>Software Engineering Manager</td>\n      <td>1470000</td>\n      <td>Menlo Park, CA</td>\n      <td>9.0</td>\n      <td>7.0</td>\n      <td>290000.0</td>\n      <td>1100.0</td>\n      <td>80000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>42710</th>\n      <td>Google</td>\n      <td>Product Manager</td>\n      <td>4500000</td>\n      <td>San Francisco, CA</td>\n      <td>20.0</td>\n      <td>14.0</td>\n      <td>450000.0</td>\n      <td>3700.0</td>\n      <td>350000.0</td>\n      <td>Male</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>42712</th>\n      <td>Amazon</td>\n      <td>Software Engineering Manager</td>\n      <td>1660000</td>\n      <td>Seattle, WA</td>\n      <td>15.0</td>\n      <td>15.0</td>\n      <td>160000.0</td>\n      <td>1500.0</td>\n      <td>0.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>42714</th>\n      <td>Facebook</td>\n      <td>Product Manager</td>\n      <td>4980000</td>\n      <td>Menlo Park, CA</td>\n      <td>17.0</td>\n      <td>0.0</td>\n      <td>380000.0</td>\n      <td>4400.0</td>\n      <td>200000.0</td>\n      <td>Male</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>11703 rows × 20 columns</p>\n</div>","text/plain":"        company                         title  totalyearlycompensation  \\\n5129      Intel             Hardware Engineer                   200000   \n7993      Latch  Software Engineering Manager                   170000   \n10054    Intuit             Software Engineer                   134000   \n11153    Google             Software Engineer                   400000   \n11984   Spotify             Software Engineer                   210000   \n...         ...                           ...                      ...   \n42611     Adobe              Product Designer                   300000   \n42709  Facebook  Software Engineering Manager                  1470000   \n42710    Google               Product Manager                  4500000   \n42712    Amazon  Software Engineering Manager                  1660000   \n42714  Facebook               Product Manager                  4980000   \n\n                location  yearsofexperience  yearsatcompany  basesalary  \\\n5129     Santa Clara, CA               14.0             3.0    163000.0   \n7993        New York, NY                6.0             2.0    170000.0   \n10054  Mountain View, CA                1.0             1.0    110000.0   \n11153      Sunnyvale, CA                5.0             5.0    210000.0   \n11984       New York, NY                8.0             2.5    170000.0   \n...                  ...                ...             ...         ...   \n42611  San Francisco, CA                5.0             0.0    180000.0   \n42709     Menlo Park, CA                9.0             7.0    290000.0   \n42710  San Francisco, CA               20.0            14.0    450000.0   \n42712        Seattle, WA               15.0            15.0    160000.0   \n42714     Menlo Park, CA               17.0             0.0    380000.0   \n\n       stockgrantvalue     bonus  gender  Masters_Degree  Bachelors_Degree  \\\n5129           10000.0   27000.0  Female               0                 0   \n7993               0.0       0.0    Male               0                 0   \n10054          13000.0   11000.0    Male               0                 0   \n11153         145000.0   45000.0    Male               0                 0   \n11984          40000.0       0.0    Male               0                 0   \n...                ...       ...     ...             ...               ...   \n42611         100000.0   20000.0    Male               0                 1   \n42709           1100.0   80000.0    Male               0                 1   \n42710           3700.0  350000.0    Male               1                 0   \n42712           1500.0       0.0    Male               0                 0   \n42714           4400.0  200000.0    Male               1                 0   \n\n       Doctorate_Degree  Highschool  Some_College  Race_Asian  Race_White  \\\n5129                  0           0             0           1           0   \n7993                  0           0             0           1           0   \n10054                 0           0             0           1           0   \n11153                 1           0             0           1           0   \n11984                 0           0             0           1           0   \n...                 ...         ...           ...         ...         ...   \n42611                 0           0             0           1           0   \n42709                 0           0             0           1           0   \n42710                 0           0             0           1           0   \n42712                 0           0             0           1           0   \n42714                 0           0             0           1           0   \n\n       Race_Two_Or_More  Race_Black  Race_Hispanic  \n5129                  0           0              0  \n7993                  0           0              0  \n10054                 0           0              0  \n11153                 0           0              0  \n11984                 0           0              0  \n...                 ...         ...            ...  \n42611                 0           0              0  \n42709                 0           0              0  \n42710                 0           0              0  \n42712                 0           0              0  \n42714                 0           0              0  \n\n[11703 rows x 20 columns]"},"exec_count":30,"output_type":"execute_result"}},"pos":32,"type":"cell"}
{"cell_type":"code","exec_count":31,"id":"d0d30a","input":"df.value_counts('Race_Asian')","output":{"0":{"data":{"text/plain":"Race_Asian\n0    31395\n1    11703\ndtype: int64"},"exec_count":31,"output_type":"execute_result"}},"pos":33,"type":"cell"}
{"cell_type":"code","exec_count":32,"id":"e06a2c","input":"df.location.value_counts()","output":{"0":{"data":{"text/plain":"Seattle, WA                          5800\nSan Francisco, CA                    4319\nNew York, NY                         3102\nRedmond, WA                          1838\nSunnyvale, CA                        1528\n                                     ... \nGraz, ST, Austria                       1\nTrondheim, ST, Norway                   1\nMandaluyong City, MM, Philippines       1\nElk Grove, CA                           1\nHilbert, WI                             1\nName: location, Length: 936, dtype: int64"},"exec_count":32,"output_type":"execute_result"}},"pos":34,"type":"cell"}
{"cell_type":"code","exec_count":33,"id":"e74e7e","input":"def get_state(x):\n    words = x.split(', ')\n    state = words[1]\n    if state == 'CA':\n        return 'CA'\n    elif state == 'WA':\n        return 'WA'\n    elif state == 'NY':\n        return 'NY'\n    else:\n        return 'Other'","pos":35,"type":"cell"}
{"cell_type":"code","exec_count":34,"id":"d79a2b","input":"df['state'] = df['location'].apply(get_state)\ndf.drop(['location'], axis = 1, inplace = True)","pos":36,"type":"cell"}
{"cell_type":"code","exec_count":35,"id":"5f5393","input":"df.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>Bachelors_Degree</th>\n      <th>Doctorate_Degree</th>\n      <th>Highschool</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>state</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>GE Digital</td>\n      <td>Software Engineer</td>\n      <td>140000</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>130000.0</td>\n      <td>0.0</td>\n      <td>10000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Amazon</td>\n      <td>Software Engineer</td>\n      <td>172000</td>\n      <td>12.0</td>\n      <td>2.0</td>\n      <td>142000.0</td>\n      <td>30000.0</td>\n      <td>0.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>WA</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Uber</td>\n      <td>Software Engineer</td>\n      <td>325000</td>\n      <td>7.0</td>\n      <td>2.0</td>\n      <td>161000.0</td>\n      <td>140000.0</td>\n      <td>25000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>150000</td>\n      <td>4.0</td>\n      <td>0.0</td>\n      <td>118000.0</td>\n      <td>5000.0</td>\n      <td>12000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>WA</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>640000</td>\n      <td>11.0</td>\n      <td>4.0</td>\n      <td>210000.0</td>\n      <td>380000.0</td>\n      <td>50000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"      company              title  totalyearlycompensation  yearsofexperience  \\\n0  GE Digital  Software Engineer                   140000                4.0   \n1      Amazon  Software Engineer                   172000               12.0   \n2        Uber  Software Engineer                   325000                7.0   \n3   Microsoft  Software Engineer                   150000                4.0   \n4      Google  Software Engineer                   640000               11.0   \n\n   yearsatcompany  basesalary  stockgrantvalue    bonus gender  \\\n0             4.0    130000.0              0.0  10000.0   Male   \n1             2.0    142000.0          30000.0      0.0   Male   \n2             2.0    161000.0         140000.0  25000.0   Male   \n3             0.0    118000.0           5000.0  12000.0   Male   \n4             4.0    210000.0         380000.0  50000.0   Male   \n\n   Masters_Degree  Bachelors_Degree  Doctorate_Degree  Highschool  \\\n0               0                 0                 0           0   \n1               0                 0                 0           0   \n2               0                 0                 0           0   \n3               0                 0                 0           0   \n4               0                 0                 0           0   \n\n   Some_College  Race_Asian  Race_White  Race_Two_Or_More  Race_Black  \\\n0             0           0           0                 0           0   \n1             0           0           0                 0           0   \n2             0           0           0                 0           0   \n3             0           0           0                 0           0   \n4             0           0           0                 0           0   \n\n   Race_Hispanic state  \n0              0    CA  \n1              0    WA  \n2              0    CA  \n3              0    WA  \n4              0    CA  "},"exec_count":35,"output_type":"execute_result"}},"pos":37,"type":"cell"}
{"cell_type":"code","exec_count":36,"id":"08e03a","input":"df.state.value_counts()","output":{"0":{"data":{"text/plain":"Other    16507\nCA       15023\nWA        8347\nNY        3221\nName: state, dtype: int64"},"exec_count":36,"output_type":"execute_result"}},"pos":38,"type":"cell"}
{"cell_type":"code","exec_count":37,"id":"85fbd1","input":"def check_education(master, bach, doc, high, some):\n    if master == 1:\n        return \"Masters\"\n    elif bach == 1:\n        return \"Bachelors\"\n    elif doc == 1:\n        return \"PHD\"\n    elif high == 1:\n        return 'Highschool'\n    elif some == 1:\n        return \"Some\"\n    else:\n        return \"Missing\"","pos":39,"type":"cell"}
{"cell_type":"code","exec_count":38,"id":"615b7b","input":"df['education'] = df.apply(lambda x: check_education(x.Masters_Degree, x.Bachelors_Degree, x.Doctorate_Degree, x.Highschool, x.Some_College), axis=1)\ndf.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>...</th>\n      <th>Doctorate_Degree</th>\n      <th>Highschool</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>state</th>\n      <th>education</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>GE Digital</td>\n      <td>Software Engineer</td>\n      <td>140000</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>130000.0</td>\n      <td>0.0</td>\n      <td>10000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>Missing</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Amazon</td>\n      <td>Software Engineer</td>\n      <td>172000</td>\n      <td>12.0</td>\n      <td>2.0</td>\n      <td>142000.0</td>\n      <td>30000.0</td>\n      <td>0.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>WA</td>\n      <td>Missing</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Uber</td>\n      <td>Software Engineer</td>\n      <td>325000</td>\n      <td>7.0</td>\n      <td>2.0</td>\n      <td>161000.0</td>\n      <td>140000.0</td>\n      <td>25000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>Missing</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>150000</td>\n      <td>4.0</td>\n      <td>0.0</td>\n      <td>118000.0</td>\n      <td>5000.0</td>\n      <td>12000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>WA</td>\n      <td>Missing</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>640000</td>\n      <td>11.0</td>\n      <td>4.0</td>\n      <td>210000.0</td>\n      <td>380000.0</td>\n      <td>50000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>Missing</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 21 columns</p>\n</div>","text/plain":"      company              title  totalyearlycompensation  yearsofexperience  \\\n0  GE Digital  Software Engineer                   140000                4.0   \n1      Amazon  Software Engineer                   172000               12.0   \n2        Uber  Software Engineer                   325000                7.0   \n3   Microsoft  Software Engineer                   150000                4.0   \n4      Google  Software Engineer                   640000               11.0   \n\n   yearsatcompany  basesalary  stockgrantvalue    bonus gender  \\\n0             4.0    130000.0              0.0  10000.0   Male   \n1             2.0    142000.0          30000.0      0.0   Male   \n2             2.0    161000.0         140000.0  25000.0   Male   \n3             0.0    118000.0           5000.0  12000.0   Male   \n4             4.0    210000.0         380000.0  50000.0   Male   \n\n   Masters_Degree  ...  Doctorate_Degree  Highschool  Some_College  \\\n0               0  ...                 0           0             0   \n1               0  ...                 0           0             0   \n2               0  ...                 0           0             0   \n3               0  ...                 0           0             0   \n4               0  ...                 0           0             0   \n\n   Race_Asian  Race_White  Race_Two_Or_More  Race_Black  Race_Hispanic  state  \\\n0           0           0                 0           0              0     CA   \n1           0           0                 0           0              0     WA   \n2           0           0                 0           0              0     CA   \n3           0           0                 0           0              0     WA   \n4           0           0                 0           0              0     CA   \n\n  education  \n0   Missing  \n1   Missing  \n2   Missing  \n3   Missing  \n4   Missing  \n\n[5 rows x 21 columns]"},"exec_count":38,"output_type":"execute_result"}},"pos":40,"type":"cell"}
{"cell_type":"code","exec_count":39,"id":"c61c45","input":"def check_race(asian, white, two, black, hispanic):\n    if asian == 1:\n        return \"Asian\"\n    elif white == 1:\n        return \"White\"\n    elif two == 1:\n        return \"Two or More\"\n    elif black == 1:\n        return 'Black'\n    elif hispanic == 1:\n        return \"Hispanic\"\n    else:\n        return \"Missing\"","pos":41,"type":"cell"}
{"cell_type":"code","exec_count":4,"id":"50aa49","input":"df.columns","output":{"0":{"data":{"text/plain":"Index(['timestamp', 'company', 'level', 'title', 'totalyearlycompensation',\n       'location', 'yearsofexperience', 'yearsatcompany', 'tag', 'basesalary',\n       'stockgrantvalue', 'bonus', 'gender', 'otherdetails', 'cityid', 'dmaid',\n       'rowNumber', 'Masters_Degree', 'Bachelors_Degree', 'Doctorate_Degree',\n       'Highschool', 'Some_College', 'Race_Asian', 'Race_White',\n       'Race_Two_Or_More', 'Race_Black', 'Race_Hispanic', 'Race', 'Education'],\n      dtype='object')"},"exec_count":4,"output_type":"execute_result"}},"pos":4,"type":"cell"}
{"cell_type":"code","exec_count":40,"id":"9b1416","input":"df['race'] = df.apply(lambda x: check_race(x.Race_Asian, x.Race_White, x.Race_Two_Or_More, x.Race_Black, x.Race_Hispanic), axis=1)\ndf.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>...</th>\n      <th>Highschool</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>state</th>\n      <th>education</th>\n      <th>race</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>GE Digital</td>\n      <td>Software Engineer</td>\n      <td>140000</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>130000.0</td>\n      <td>0.0</td>\n      <td>10000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>Missing</td>\n      <td>Missing</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Amazon</td>\n      <td>Software Engineer</td>\n      <td>172000</td>\n      <td>12.0</td>\n      <td>2.0</td>\n      <td>142000.0</td>\n      <td>30000.0</td>\n      <td>0.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>WA</td>\n      <td>Missing</td>\n      <td>Missing</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Uber</td>\n      <td>Software Engineer</td>\n      <td>325000</td>\n      <td>7.0</td>\n      <td>2.0</td>\n      <td>161000.0</td>\n      <td>140000.0</td>\n      <td>25000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>Missing</td>\n      <td>Missing</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>150000</td>\n      <td>4.0</td>\n      <td>0.0</td>\n      <td>118000.0</td>\n      <td>5000.0</td>\n      <td>12000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>WA</td>\n      <td>Missing</td>\n      <td>Missing</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>640000</td>\n      <td>11.0</td>\n      <td>4.0</td>\n      <td>210000.0</td>\n      <td>380000.0</td>\n      <td>50000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>Missing</td>\n      <td>Missing</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 22 columns</p>\n</div>","text/plain":"      company              title  totalyearlycompensation  yearsofexperience  \\\n0  GE Digital  Software Engineer                   140000                4.0   \n1      Amazon  Software Engineer                   172000               12.0   \n2        Uber  Software Engineer                   325000                7.0   \n3   Microsoft  Software Engineer                   150000                4.0   \n4      Google  Software Engineer                   640000               11.0   \n\n   yearsatcompany  basesalary  stockgrantvalue    bonus gender  \\\n0             4.0    130000.0              0.0  10000.0   Male   \n1             2.0    142000.0          30000.0      0.0   Male   \n2             2.0    161000.0         140000.0  25000.0   Male   \n3             0.0    118000.0           5000.0  12000.0   Male   \n4             4.0    210000.0         380000.0  50000.0   Male   \n\n   Masters_Degree  ...  Highschool  Some_College  Race_Asian  Race_White  \\\n0               0  ...           0             0           0           0   \n1               0  ...           0             0           0           0   \n2               0  ...           0             0           0           0   \n3               0  ...           0             0           0           0   \n4               0  ...           0             0           0           0   \n\n   Race_Two_Or_More  Race_Black  Race_Hispanic  state  education     race  \n0                 0           0              0     CA    Missing  Missing  \n1                 0           0              0     WA    Missing  Missing  \n2                 0           0              0     CA    Missing  Missing  \n3                 0           0              0     WA    Missing  Missing  \n4                 0           0              0     CA    Missing  Missing  \n\n[5 rows x 22 columns]"},"exec_count":40,"output_type":"execute_result"}},"pos":42,"type":"cell"}
{"cell_type":"code","exec_count":41,"id":"f46d59","input":"df.race.value_counts()","output":{"0":{"data":{"text/plain":"Missing        20789\nAsian          11703\nWhite           8003\nHispanic        1122\nTwo or More      796\nBlack            685\nName: race, dtype: int64"},"exec_count":41,"output_type":"execute_result"}},"pos":43,"type":"cell"}
{"cell_type":"code","exec_count":42,"id":"a778bb","input":"df.company.value_counts().index","output":{"0":{"data":{"text/plain":"Index(['Amazon', 'Microsoft', 'Google', 'Facebook', 'Apple', 'Oracle',\n       'Salesforce', 'Intel', 'IBM', 'Cisco',\n       ...\n       'Quantumblack', 'sony', 'commvault', 'atlassian', 'MICROSOFT', 'GOogle',\n       'Refinitiv', 'cadence design systems', 'Moody's analytics',\n       'tableau software'],\n      dtype='object', length=1478)"},"exec_count":42,"output_type":"execute_result"}},"pos":44,"type":"cell"}
{"cell_type":"code","exec_count":43,"id":"227e6e","input":"top_15_popular = list(df['company'].value_counts().index)[:15] #list of companies from 1-15\ndef in_popular(x): #this is a function\n    if x in top_15_popular:\n        return True\n    else:\n        return False\n    \ndf['in_top_15'] = df['company'].apply(in_popular) #applying the function in_popular","pos":45,"type":"cell"}
{"cell_type":"code","exec_count":44,"id":"774bc4","input":"df.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>...</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>state</th>\n      <th>education</th>\n      <th>race</th>\n      <th>in_top_15</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>GE Digital</td>\n      <td>Software Engineer</td>\n      <td>140000</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>130000.0</td>\n      <td>0.0</td>\n      <td>10000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>Missing</td>\n      <td>Missing</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Amazon</td>\n      <td>Software Engineer</td>\n      <td>172000</td>\n      <td>12.0</td>\n      <td>2.0</td>\n      <td>142000.0</td>\n      <td>30000.0</td>\n      <td>0.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>WA</td>\n      <td>Missing</td>\n      <td>Missing</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Uber</td>\n      <td>Software Engineer</td>\n      <td>325000</td>\n      <td>7.0</td>\n      <td>2.0</td>\n      <td>161000.0</td>\n      <td>140000.0</td>\n      <td>25000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>Missing</td>\n      <td>Missing</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>150000</td>\n      <td>4.0</td>\n      <td>0.0</td>\n      <td>118000.0</td>\n      <td>5000.0</td>\n      <td>12000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>WA</td>\n      <td>Missing</td>\n      <td>Missing</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>640000</td>\n      <td>11.0</td>\n      <td>4.0</td>\n      <td>210000.0</td>\n      <td>380000.0</td>\n      <td>50000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>Missing</td>\n      <td>Missing</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 23 columns</p>\n</div>","text/plain":"      company              title  totalyearlycompensation  yearsofexperience  \\\n0  GE Digital  Software Engineer                   140000                4.0   \n1      Amazon  Software Engineer                   172000               12.0   \n2        Uber  Software Engineer                   325000                7.0   \n3   Microsoft  Software Engineer                   150000                4.0   \n4      Google  Software Engineer                   640000               11.0   \n\n   yearsatcompany  basesalary  stockgrantvalue    bonus gender  \\\n0             4.0    130000.0              0.0  10000.0   Male   \n1             2.0    142000.0          30000.0      0.0   Male   \n2             2.0    161000.0         140000.0  25000.0   Male   \n3             0.0    118000.0           5000.0  12000.0   Male   \n4             4.0    210000.0         380000.0  50000.0   Male   \n\n   Masters_Degree  ...  Some_College  Race_Asian  Race_White  \\\n0               0  ...             0           0           0   \n1               0  ...             0           0           0   \n2               0  ...             0           0           0   \n3               0  ...             0           0           0   \n4               0  ...             0           0           0   \n\n   Race_Two_Or_More  Race_Black  Race_Hispanic  state  education     race  \\\n0                 0           0              0     CA    Missing  Missing   \n1                 0           0              0     WA    Missing  Missing   \n2                 0           0              0     CA    Missing  Missing   \n3                 0           0              0     WA    Missing  Missing   \n4                 0           0              0     CA    Missing  Missing   \n\n  in_top_15  \n0     False  \n1      True  \n2      True  \n3      True  \n4      True  \n\n[5 rows x 23 columns]"},"exec_count":44,"output_type":"execute_result"}},"pos":46,"type":"cell"}
{"cell_type":"code","exec_count":45,"id":"f9da6b","input":"# name of df.groupby(by = name of column you wanna group by)[column of data you want to look at].function to apply","pos":47,"type":"cell"}
{"cell_type":"code","exec_count":46,"id":"f33775","input":"df.groupby(by = 'gender')['basesalary'].mean()","output":{"0":{"data":{"text/plain":"gender\nFemale                             133823.203315\nMale                               136322.098381\nOther                              141050.000000\nTitle: Senior Software Engineer    177000.000000\nName: basesalary, dtype: float64"},"exec_count":46,"output_type":"execute_result"}},"pos":48,"type":"cell"}
{"cell_type":"code","exec_count":47,"id":"200d15","input":"df.groupby(by = 'title')['basesalary'].mean()","output":{"0":{"data":{"text/plain":"title\nBusiness Analyst                100979.127135\nData Scientist                  138795.977011\nHardware Engineer               137322.200393\nHuman Resources                 128033.816425\nManagement Consultant           133762.903226\nMarketing                       138347.517730\nMechanical Engineer             116832.236842\nProduct Designer                138979.877515\nProduct Manager                 149058.022200\nRecruiter                       115087.591241\nSales                           113321.428571\nSoftware Engineer               131683.194647\nSoftware Engineering Manager    175639.834926\nSolution Architect              140747.201493\nTechnical Program Manager       154503.919373\nName: basesalary, dtype: float64"},"exec_count":47,"output_type":"execute_result"}},"pos":49,"type":"cell"}
{"cell_type":"code","exec_count":48,"id":"1e8b5c","input":"df.groupby(by = 'title')['yearsofexperience'].max()","output":{"0":{"data":{"text/plain":"title\nBusiness Analyst                45.0\nData Scientist                  30.0\nHardware Engineer               40.0\nHuman Resources                 40.0\nManagement Consultant           33.0\nMarketing                       35.0\nMechanical Engineer             33.0\nProduct Designer                30.0\nProduct Manager                 38.0\nRecruiter                       32.0\nSales                           30.0\nSoftware Engineer               42.0\nSoftware Engineering Manager    40.0\nSolution Architect              35.0\nTechnical Program Manager       38.0\nName: yearsofexperience, dtype: float64"},"exec_count":48,"output_type":"execute_result"}},"pos":50,"type":"cell"}
{"cell_type":"code","exec_count":49,"id":"eb8c8f","input":"df.groupby(by = 'title')['yearsofexperience'].mean()","output":{"0":{"data":{"text/plain":"title\nBusiness Analyst                 5.812144\nData Scientist                   4.913218\nHardware Engineer                7.902423\nHuman Resources                 10.526570\nManagement Consultant            7.338710\nMarketing                        9.248227\nMechanical Engineer              6.115132\nProduct Designer                 7.584427\nProduct Manager                  9.084068\nRecruiter                        8.135036\nSales                            8.814286\nSoftware Engineer                6.027325\nSoftware Engineering Manager    14.123154\nSolution Architect              12.717662\nTechnical Program Manager       12.272116\nName: yearsofexperience, dtype: float64"},"exec_count":49,"output_type":"execute_result"}},"pos":51,"type":"cell"}
{"cell_type":"code","exec_count":5,"id":"d4af73","input":"len(df)","output":{"0":{"data":{"text/plain":"62642"},"exec_count":5,"output_type":"execute_result"}},"pos":5,"type":"cell"}
{"cell_type":"code","exec_count":50,"id":"5f78d4","input":"df.groupby(by = 'title')['yearsofexperience'].min()","output":{"0":{"data":{"text/plain":"title\nBusiness Analyst                0.0\nData Scientist                  0.0\nHardware Engineer               0.0\nHuman Resources                 0.0\nManagement Consultant           0.0\nMarketing                       0.0\nMechanical Engineer             0.0\nProduct Designer                0.0\nProduct Manager                 0.0\nRecruiter                       1.0\nSales                           1.0\nSoftware Engineer               0.0\nSoftware Engineering Manager    0.0\nSolution Architect              0.0\nTechnical Program Manager       0.0\nName: yearsofexperience, dtype: float64"},"exec_count":50,"output_type":"execute_result"}},"pos":52,"type":"cell"}
{"cell_type":"code","exec_count":51,"id":"4b8e44","input":"df.groupby(by = 'title').mean().reset_index() #gives mean of EVERYTHING, reset_index() gives index again","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>Masters_Degree</th>\n      <th>Bachelors_Degree</th>\n      <th>Doctorate_Degree</th>\n      <th>Highschool</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>in_top_15</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Business Analyst</td>\n      <td>124958.254269</td>\n      <td>5.812144</td>\n      <td>2.641935</td>\n      <td>100979.127135</td>\n      <td>12453.510436</td>\n      <td>11307.400380</td>\n      <td>0.413662</td>\n      <td>0.497154</td>\n      <td>0.007590</td>\n      <td>0.000000</td>\n      <td>0.005693</td>\n      <td>0.436433</td>\n      <td>0.309298</td>\n      <td>0.037951</td>\n      <td>0.039848</td>\n      <td>0.049336</td>\n      <td>0.387097</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Data Scientist</td>\n      <td>200444.252874</td>\n      <td>4.913218</td>\n      <td>1.987701</td>\n      <td>138795.977011</td>\n      <td>39868.390805</td>\n      <td>17522.988506</td>\n      <td>0.413218</td>\n      <td>0.134483</td>\n      <td>0.186207</td>\n      <td>0.001724</td>\n      <td>0.000575</td>\n      <td>0.287931</td>\n      <td>0.181609</td>\n      <td>0.016092</td>\n      <td>0.007471</td>\n      <td>0.018391</td>\n      <td>0.448851</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Hardware Engineer</td>\n      <td>206120.497708</td>\n      <td>7.902423</td>\n      <td>4.011329</td>\n      <td>137322.200393</td>\n      <td>44319.253438</td>\n      <td>21451.866405</td>\n      <td>0.478716</td>\n      <td>0.131631</td>\n      <td>0.123772</td>\n      <td>0.000000</td>\n      <td>0.001310</td>\n      <td>0.371971</td>\n      <td>0.110020</td>\n      <td>0.018991</td>\n      <td>0.010478</td>\n      <td>0.017027</td>\n      <td>0.550098</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Human Resources</td>\n      <td>177980.676329</td>\n      <td>10.526570</td>\n      <td>3.623188</td>\n      <td>128033.816425</td>\n      <td>31236.714976</td>\n      <td>18830.917874</td>\n      <td>0.449275</td>\n      <td>0.400966</td>\n      <td>0.024155</td>\n      <td>0.009662</td>\n      <td>0.009662</td>\n      <td>0.188406</td>\n      <td>0.449275</td>\n      <td>0.048309</td>\n      <td>0.111111</td>\n      <td>0.067633</td>\n      <td>0.487923</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Management Consultant</td>\n      <td>157732.258065</td>\n      <td>7.338710</td>\n      <td>3.153629</td>\n      <td>133762.903226</td>\n      <td>5204.838710</td>\n      <td>18872.580645</td>\n      <td>0.479032</td>\n      <td>0.382258</td>\n      <td>0.012903</td>\n      <td>0.000000</td>\n      <td>0.006452</td>\n      <td>0.287097</td>\n      <td>0.345161</td>\n      <td>0.017742</td>\n      <td>0.038710</td>\n      <td>0.050000</td>\n      <td>0.090323</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Marketing</td>\n      <td>198356.973995</td>\n      <td>9.248227</td>\n      <td>3.369976</td>\n      <td>138347.517730</td>\n      <td>37392.671395</td>\n      <td>19572.104019</td>\n      <td>0.375887</td>\n      <td>0.510638</td>\n      <td>0.009456</td>\n      <td>0.016548</td>\n      <td>0.009456</td>\n      <td>0.255319</td>\n      <td>0.460993</td>\n      <td>0.054374</td>\n      <td>0.056738</td>\n      <td>0.056738</td>\n      <td>0.520095</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Mechanical Engineer</td>\n      <td>156250.000000</td>\n      <td>6.115132</td>\n      <td>3.115132</td>\n      <td>116832.236842</td>\n      <td>28049.342105</td>\n      <td>11148.026316</td>\n      <td>0.388158</td>\n      <td>0.467105</td>\n      <td>0.075658</td>\n      <td>0.000000</td>\n      <td>0.009868</td>\n      <td>0.404605</td>\n      <td>0.345395</td>\n      <td>0.032895</td>\n      <td>0.013158</td>\n      <td>0.052632</td>\n      <td>0.302632</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Product Designer</td>\n      <td>209460.192476</td>\n      <td>7.584427</td>\n      <td>2.318591</td>\n      <td>138979.877515</td>\n      <td>46653.543307</td>\n      <td>18667.541557</td>\n      <td>0.274716</td>\n      <td>0.324584</td>\n      <td>0.016623</td>\n      <td>0.015748</td>\n      <td>0.011374</td>\n      <td>0.223097</td>\n      <td>0.240595</td>\n      <td>0.029746</td>\n      <td>0.028871</td>\n      <td>0.032371</td>\n      <td>0.530184</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Product Manager</td>\n      <td>250075.416259</td>\n      <td>9.084068</td>\n      <td>3.186565</td>\n      <td>149058.022200</td>\n      <td>65295.401567</td>\n      <td>24226.660137</td>\n      <td>0.426706</td>\n      <td>0.206334</td>\n      <td>0.012080</td>\n      <td>0.004244</td>\n      <td>0.005550</td>\n      <td>0.236696</td>\n      <td>0.190989</td>\n      <td>0.020895</td>\n      <td>0.016324</td>\n      <td>0.023506</td>\n      <td>0.557950</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Recruiter</td>\n      <td>153773.722628</td>\n      <td>8.135036</td>\n      <td>2.306569</td>\n      <td>115087.591241</td>\n      <td>24656.934307</td>\n      <td>12328.467153</td>\n      <td>0.149635</td>\n      <td>0.653285</td>\n      <td>0.000000</td>\n      <td>0.025547</td>\n      <td>0.029197</td>\n      <td>0.171533</td>\n      <td>0.437956</td>\n      <td>0.062044</td>\n      <td>0.062044</td>\n      <td>0.083942</td>\n      <td>0.551095</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>Sales</td>\n      <td>207146.428571</td>\n      <td>8.814286</td>\n      <td>3.580357</td>\n      <td>113321.428571</td>\n      <td>28525.000000</td>\n      <td>62207.142857</td>\n      <td>0.314286</td>\n      <td>0.517857</td>\n      <td>0.010714</td>\n      <td>0.010714</td>\n      <td>0.021429</td>\n      <td>0.221429</td>\n      <td>0.442857</td>\n      <td>0.021429</td>\n      <td>0.064286</td>\n      <td>0.050000</td>\n      <td>0.625000</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>Software Engineer</td>\n      <td>199124.142182</td>\n      <td>6.027325</td>\n      <td>2.312506</td>\n      <td>131683.194647</td>\n      <td>46497.313209</td>\n      <td>16877.938731</td>\n      <td>0.286158</td>\n      <td>0.281536</td>\n      <td>0.027284</td>\n      <td>0.007485</td>\n      <td>0.007899</td>\n      <td>0.270429</td>\n      <td>0.164430</td>\n      <td>0.016212</td>\n      <td>0.012763</td>\n      <td>0.024076</td>\n      <td>0.495671</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>Software Engineering Manager</td>\n      <td>344371.850565</td>\n      <td>14.123154</td>\n      <td>5.001195</td>\n      <td>175639.834926</td>\n      <td>113412.614683</td>\n      <td>33957.312337</td>\n      <td>0.326238</td>\n      <td>0.215899</td>\n      <td>0.034318</td>\n      <td>0.006950</td>\n      <td>0.014335</td>\n      <td>0.229800</td>\n      <td>0.188966</td>\n      <td>0.014770</td>\n      <td>0.009557</td>\n      <td>0.020417</td>\n      <td>0.530843</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>Solution Architect</td>\n      <td>210384.328358</td>\n      <td>12.717662</td>\n      <td>3.910199</td>\n      <td>140747.201493</td>\n      <td>35901.741294</td>\n      <td>26208.955224</td>\n      <td>0.308458</td>\n      <td>0.274876</td>\n      <td>0.019900</td>\n      <td>0.017413</td>\n      <td>0.007463</td>\n      <td>0.225124</td>\n      <td>0.228856</td>\n      <td>0.016169</td>\n      <td>0.027363</td>\n      <td>0.042289</td>\n      <td>0.577114</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>Technical Program Manager</td>\n      <td>232503.919373</td>\n      <td>12.272116</td>\n      <td>3.904031</td>\n      <td>154503.919373</td>\n      <td>53080.935050</td>\n      <td>23340.425532</td>\n      <td>0.464726</td>\n      <td>0.330347</td>\n      <td>0.029115</td>\n      <td>0.011198</td>\n      <td>0.019037</td>\n      <td>0.354983</td>\n      <td>0.290034</td>\n      <td>0.030235</td>\n      <td>0.031355</td>\n      <td>0.032475</td>\n      <td>0.685330</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"                           title  totalyearlycompensation  yearsofexperience  \\\n0               Business Analyst            124958.254269           5.812144   \n1                 Data Scientist            200444.252874           4.913218   \n2              Hardware Engineer            206120.497708           7.902423   \n3                Human Resources            177980.676329          10.526570   \n4          Management Consultant            157732.258065           7.338710   \n5                      Marketing            198356.973995           9.248227   \n6            Mechanical Engineer            156250.000000           6.115132   \n7               Product Designer            209460.192476           7.584427   \n8                Product Manager            250075.416259           9.084068   \n9                      Recruiter            153773.722628           8.135036   \n10                         Sales            207146.428571           8.814286   \n11             Software Engineer            199124.142182           6.027325   \n12  Software Engineering Manager            344371.850565          14.123154   \n13            Solution Architect            210384.328358          12.717662   \n14     Technical Program Manager            232503.919373          12.272116   \n\n    yearsatcompany     basesalary  stockgrantvalue         bonus  \\\n0         2.641935  100979.127135     12453.510436  11307.400380   \n1         1.987701  138795.977011     39868.390805  17522.988506   \n2         4.011329  137322.200393     44319.253438  21451.866405   \n3         3.623188  128033.816425     31236.714976  18830.917874   \n4         3.153629  133762.903226      5204.838710  18872.580645   \n5         3.369976  138347.517730     37392.671395  19572.104019   \n6         3.115132  116832.236842     28049.342105  11148.026316   \n7         2.318591  138979.877515     46653.543307  18667.541557   \n8         3.186565  149058.022200     65295.401567  24226.660137   \n9         2.306569  115087.591241     24656.934307  12328.467153   \n10        3.580357  113321.428571     28525.000000  62207.142857   \n11        2.312506  131683.194647     46497.313209  16877.938731   \n12        5.001195  175639.834926    113412.614683  33957.312337   \n13        3.910199  140747.201493     35901.741294  26208.955224   \n14        3.904031  154503.919373     53080.935050  23340.425532   \n\n    Masters_Degree  Bachelors_Degree  Doctorate_Degree  Highschool  \\\n0         0.413662          0.497154          0.007590    0.000000   \n1         0.413218          0.134483          0.186207    0.001724   \n2         0.478716          0.131631          0.123772    0.000000   \n3         0.449275          0.400966          0.024155    0.009662   \n4         0.479032          0.382258          0.012903    0.000000   \n5         0.375887          0.510638          0.009456    0.016548   \n6         0.388158          0.467105          0.075658    0.000000   \n7         0.274716          0.324584          0.016623    0.015748   \n8         0.426706          0.206334          0.012080    0.004244   \n9         0.149635          0.653285          0.000000    0.025547   \n10        0.314286          0.517857          0.010714    0.010714   \n11        0.286158          0.281536          0.027284    0.007485   \n12        0.326238          0.215899          0.034318    0.006950   \n13        0.308458          0.274876          0.019900    0.017413   \n14        0.464726          0.330347          0.029115    0.011198   \n\n    Some_College  Race_Asian  Race_White  Race_Two_Or_More  Race_Black  \\\n0       0.005693    0.436433    0.309298          0.037951    0.039848   \n1       0.000575    0.287931    0.181609          0.016092    0.007471   \n2       0.001310    0.371971    0.110020          0.018991    0.010478   \n3       0.009662    0.188406    0.449275          0.048309    0.111111   \n4       0.006452    0.287097    0.345161          0.017742    0.038710   \n5       0.009456    0.255319    0.460993          0.054374    0.056738   \n6       0.009868    0.404605    0.345395          0.032895    0.013158   \n7       0.011374    0.223097    0.240595          0.029746    0.028871   \n8       0.005550    0.236696    0.190989          0.020895    0.016324   \n9       0.029197    0.171533    0.437956          0.062044    0.062044   \n10      0.021429    0.221429    0.442857          0.021429    0.064286   \n11      0.007899    0.270429    0.164430          0.016212    0.012763   \n12      0.014335    0.229800    0.188966          0.014770    0.009557   \n13      0.007463    0.225124    0.228856          0.016169    0.027363   \n14      0.019037    0.354983    0.290034          0.030235    0.031355   \n\n    Race_Hispanic  in_top_15  \n0        0.049336   0.387097  \n1        0.018391   0.448851  \n2        0.017027   0.550098  \n3        0.067633   0.487923  \n4        0.050000   0.090323  \n5        0.056738   0.520095  \n6        0.052632   0.302632  \n7        0.032371   0.530184  \n8        0.023506   0.557950  \n9        0.083942   0.551095  \n10       0.050000   0.625000  \n11       0.024076   0.495671  \n12       0.020417   0.530843  \n13       0.042289   0.577114  \n14       0.032475   0.685330  "},"exec_count":51,"output_type":"execute_result"}},"pos":53,"type":"cell"}
{"cell_type":"code","exec_count":52,"id":"707fd2","input":"import plotly.express as px","pos":54,"type":"cell"}
{"cell_type":"code","exec_count":53,"id":"b0cb3c","input":"df.plot.scatter(x='yearsofexperience', y='totalyearlycompensation')","output":{"0":{"data":{"text/plain":"<AxesSubplot:xlabel='yearsofexperience', ylabel='totalyearlycompensation'>"},"exec_count":53,"output_type":"execute_result"},"1":{"data":{"image/png":"cd83af24803b5665db3cefd97bd666884e01ba60","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":53,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":55,"type":"cell"}
{"cell_type":"code","exec_count":54,"id":"25b528","input":"plot1 = px.pie(df, 'yearsofexperience', title = 'years of experience as a percentage')\nplot1.show()","output":{"0":{"data":{"iframe":"49a25088f0e49eb2ab0bf0b72a553960885ebac7"},"exec_count":54,"output_type":"execute_result"}},"pos":56,"type":"cell"}
{"cell_type":"code","exec_count":55,"id":"9804b4","input":"plot2 = px.histogram(df, x = 'yearsatcompany', y = 'totalyearlycompensation', title = 'total yearly salary by years at company', color = 'in_top_15')\nplot2.show()","output":{"0":{"data":{"iframe":"0b82ebb9babd7f36a18f7fc9b3118301e0d36cae"},"exec_count":55,"output_type":"execute_result"}},"pos":57,"type":"cell"}
{"cell_type":"code","exec_count":56,"id":"7b3b5e","input":"plot2 = px.scatter(df, x = 'yearsatcompany', y = 'totalyearlycompensation', title = 'fun', color = 'in_top_15')\nplot2.show()","output":{"0":{"data":{"iframe":"72e95c28467144b93922c21d266f7fced98d8190"},"exec_count":56,"output_type":"execute_result"}},"pos":58,"type":"cell"}
{"cell_type":"code","exec_count":57,"id":"d8580e","input":"plot4 = px.scatter(df, x = 'gender', y = 'totalyearlycompensation', title = 'extra fun', color = 'in_top_15')\nplot4.show()","output":{"0":{"data":{"iframe":"da032e08dfe8bf6476234f514ee4763f18500148"},"exec_count":57,"output_type":"execute_result"}},"pos":59,"type":"cell"}
{"cell_type":"code","exec_count":58,"id":"55ddd8","input":"plot5 = px.histogram(df, x = 'state', y = 'totalyearlycompensation', title = 'STEM Salary Based on State', color = 'gender')\nplot5.show()","output":{"0":{"data":{"iframe":"b1ccdc96cae0900e02c881352f3a85aa208f50c4"},"exec_count":58,"output_type":"execute_result"}},"pos":60,"type":"cell"}
{"cell_type":"code","exec_count":59,"id":"8760bf","input":"plot6 = px.pie(df, 'gender')\nplot6.show()","output":{"0":{"data":{"iframe":"9bd9b80fb5aa04da45dc1b539564963051fdb81c"},"exec_count":59,"output_type":"execute_result"}},"pos":61,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"2214b6","input":"df['company'].isnull().values.any() #tells if missing value in column","output":{"0":{"data":{"text/plain":"True"},"exec_count":6,"output_type":"execute_result"}},"pos":6,"type":"cell"}
{"cell_type":"code","exec_count":60,"id":"adee20","input":"plot7 = px.pie(df, 'Masters_Degree')\nplot7.show()","output":{"0":{"data":{"iframe":"cddc95009cec2a6a1953fd0efbaf58bb46e83b0d"},"exec_count":60,"output_type":"execute_result"}},"pos":62,"type":"cell"}
{"cell_type":"code","exec_count":61,"id":"37bd4d","input":"plot8 = px.histogram(df, x = 'totalyearlycompensation', title = 'total yearly salary of STEM Workers', color = 'in_top_15')\nplot8.show() #WE'RE USING THIS ONE","output":{"0":{"data":{"iframe":"86299c47a154d86fa7f0c7496837bb66152e4a4e"},"exec_count":61,"output_type":"execute_result"}},"pos":63,"type":"cell"}
{"cell_type":"code","exec_count":62,"id":"1b7294","input":"plot9 = px.histogram(df, x = 'basesalary', title = 'Base Salary in Top 15 Companies', color = 'in_top_15')\nplot9.show()","output":{"0":{"data":{"iframe":"c852d7b801debafdebb5d6d984ae94f80aa0bc60"},"exec_count":62,"output_type":"execute_result"}},"pos":64,"type":"cell"}
{"cell_type":"code","exec_count":63,"id":"bdd0a9","input":"plot10 = px.pie(df, 'title', title = 'Most Common Job Titles')\nplot10.show()","output":{"0":{"data":{"iframe":"019973486fbdb5b0941ca299f540c3ad8f600e66"},"exec_count":63,"output_type":"execute_result"}},"pos":65,"type":"cell"}
{"cell_type":"code","exec_count":64,"id":"5dbb2f","input":"df.groupby(by = 'state')['basesalary'].mean()","output":{"0":{"data":{"text/plain":"state\nCA       162629.939559\nNY       154821.018317\nOther    102847.745199\nWA       146169.408889\nName: basesalary, dtype: float64"},"exec_count":64,"output_type":"execute_result"}},"pos":66,"type":"cell"}
{"cell_type":"code","exec_count":65,"id":"aaa0f7","input":"companys = df.groupby(by = 'company').count().reset_index().sort_values(by = 'title', ascending = False).head(10)\ncompanys","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>...</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>state</th>\n      <th>education</th>\n      <th>race</th>\n      <th>in_top_15</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>61</th>\n      <td>Amazon</td>\n      <td>5525</td>\n      <td>5525</td>\n      <td>5525</td>\n      <td>5525</td>\n      <td>5525</td>\n      <td>5525</td>\n      <td>5525</td>\n      <td>5525</td>\n      <td>5525</td>\n      <td>...</td>\n      <td>5525</td>\n      <td>5525</td>\n      <td>5525</td>\n      <td>5525</td>\n      <td>5525</td>\n      <td>5525</td>\n      <td>5525</td>\n      <td>5525</td>\n      <td>5525</td>\n      <td>5525</td>\n    </tr>\n    <tr>\n      <th>769</th>\n      <td>Microsoft</td>\n      <td>3641</td>\n      <td>3641</td>\n      <td>3641</td>\n      <td>3641</td>\n      <td>3641</td>\n      <td>3641</td>\n      <td>3641</td>\n      <td>3641</td>\n      <td>3641</td>\n      <td>...</td>\n      <td>3641</td>\n      <td>3641</td>\n      <td>3641</td>\n      <td>3641</td>\n      <td>3641</td>\n      <td>3641</td>\n      <td>3641</td>\n      <td>3641</td>\n      <td>3641</td>\n      <td>3641</td>\n    </tr>\n    <tr>\n      <th>523</th>\n      <td>Google</td>\n      <td>2978</td>\n      <td>2978</td>\n      <td>2978</td>\n      <td>2978</td>\n      <td>2978</td>\n      <td>2978</td>\n      <td>2978</td>\n      <td>2978</td>\n      <td>2978</td>\n      <td>...</td>\n      <td>2978</td>\n      <td>2978</td>\n      <td>2978</td>\n      <td>2978</td>\n      <td>2978</td>\n      <td>2978</td>\n      <td>2978</td>\n      <td>2978</td>\n      <td>2978</td>\n      <td>2978</td>\n    </tr>\n    <tr>\n      <th>432</th>\n      <td>Facebook</td>\n      <td>2118</td>\n      <td>2118</td>\n      <td>2118</td>\n      <td>2118</td>\n      <td>2118</td>\n      <td>2118</td>\n      <td>2118</td>\n      <td>2118</td>\n      <td>2118</td>\n      <td>...</td>\n      <td>2118</td>\n      <td>2118</td>\n      <td>2118</td>\n      <td>2118</td>\n      <td>2118</td>\n      <td>2118</td>\n      <td>2118</td>\n      <td>2118</td>\n      <td>2118</td>\n      <td>2118</td>\n    </tr>\n    <tr>\n      <th>91</th>\n      <td>Apple</td>\n      <td>1384</td>\n      <td>1384</td>\n      <td>1384</td>\n      <td>1384</td>\n      <td>1384</td>\n      <td>1384</td>\n      <td>1384</td>\n      <td>1384</td>\n      <td>1384</td>\n      <td>...</td>\n      <td>1384</td>\n      <td>1384</td>\n      <td>1384</td>\n      <td>1384</td>\n      <td>1384</td>\n      <td>1384</td>\n      <td>1384</td>\n      <td>1384</td>\n      <td>1384</td>\n      <td>1384</td>\n    </tr>\n    <tr>\n      <th>865</th>\n      <td>Oracle</td>\n      <td>802</td>\n      <td>802</td>\n      <td>802</td>\n      <td>802</td>\n      <td>802</td>\n      <td>802</td>\n      <td>802</td>\n      <td>802</td>\n      <td>802</td>\n      <td>...</td>\n      <td>802</td>\n      <td>802</td>\n      <td>802</td>\n      <td>802</td>\n      <td>802</td>\n      <td>802</td>\n      <td>802</td>\n      <td>802</td>\n      <td>802</td>\n      <td>802</td>\n    </tr>\n    <tr>\n      <th>1004</th>\n      <td>Salesforce</td>\n      <td>695</td>\n      <td>695</td>\n      <td>695</td>\n      <td>695</td>\n      <td>695</td>\n      <td>695</td>\n      <td>695</td>\n      <td>695</td>\n      <td>695</td>\n      <td>...</td>\n      <td>695</td>\n      <td>695</td>\n      <td>695</td>\n      <td>695</td>\n      <td>695</td>\n      <td>695</td>\n      <td>695</td>\n      <td>695</td>\n      <td>695</td>\n      <td>695</td>\n    </tr>\n    <tr>\n      <th>610</th>\n      <td>Intel</td>\n      <td>693</td>\n      <td>693</td>\n      <td>693</td>\n      <td>693</td>\n      <td>693</td>\n      <td>693</td>\n      <td>693</td>\n      <td>693</td>\n      <td>693</td>\n      <td>...</td>\n      <td>693</td>\n      <td>693</td>\n      <td>693</td>\n      <td>693</td>\n      <td>693</td>\n      <td>693</td>\n      <td>693</td>\n      <td>693</td>\n      <td>693</td>\n      <td>693</td>\n    </tr>\n    <tr>\n      <th>578</th>\n      <td>IBM</td>\n      <td>676</td>\n      <td>676</td>\n      <td>676</td>\n      <td>676</td>\n      <td>676</td>\n      <td>676</td>\n      <td>676</td>\n      <td>676</td>\n      <td>676</td>\n      <td>...</td>\n      <td>676</td>\n      <td>676</td>\n      <td>676</td>\n      <td>676</td>\n      <td>676</td>\n      <td>676</td>\n      <td>676</td>\n      <td>676</td>\n      <td>676</td>\n      <td>676</td>\n    </tr>\n    <tr>\n      <th>260</th>\n      <td>Cisco</td>\n      <td>645</td>\n      <td>645</td>\n      <td>645</td>\n      <td>645</td>\n      <td>645</td>\n      <td>645</td>\n      <td>645</td>\n      <td>645</td>\n      <td>645</td>\n      <td>...</td>\n      <td>645</td>\n      <td>645</td>\n      <td>645</td>\n      <td>645</td>\n      <td>645</td>\n      <td>645</td>\n      <td>645</td>\n      <td>645</td>\n      <td>645</td>\n      <td>645</td>\n    </tr>\n  </tbody>\n</table>\n<p>10 rows × 23 columns</p>\n</div>","text/plain":"         company  title  totalyearlycompensation  yearsofexperience  \\\n61        Amazon   5525                     5525               5525   \n769    Microsoft   3641                     3641               3641   \n523       Google   2978                     2978               2978   \n432     Facebook   2118                     2118               2118   \n91         Apple   1384                     1384               1384   \n865       Oracle    802                      802                802   \n1004  Salesforce    695                      695                695   \n610        Intel    693                      693                693   \n578          IBM    676                      676                676   \n260        Cisco    645                      645                645   \n\n      yearsatcompany  basesalary  stockgrantvalue  bonus  gender  \\\n61              5525        5525             5525   5525    5525   \n769             3641        3641             3641   3641    3641   \n523             2978        2978             2978   2978    2978   \n432             2118        2118             2118   2118    2118   \n91              1384        1384             1384   1384    1384   \n865              802         802              802    802     802   \n1004             695         695              695    695     695   \n610              693         693              693    693     693   \n578              676         676              676    676     676   \n260              645         645              645    645     645   \n\n      Masters_Degree  ...  Some_College  Race_Asian  Race_White  \\\n61              5525  ...          5525        5525        5525   \n769             3641  ...          3641        3641        3641   \n523             2978  ...          2978        2978        2978   \n432             2118  ...          2118        2118        2118   \n91              1384  ...          1384        1384        1384   \n865              802  ...           802         802         802   \n1004             695  ...           695         695         695   \n610              693  ...           693         693         693   \n578              676  ...           676         676         676   \n260              645  ...           645         645         645   \n\n      Race_Two_Or_More  Race_Black  Race_Hispanic  state  education  race  \\\n61                5525        5525           5525   5525       5525  5525   \n769               3641        3641           3641   3641       3641  3641   \n523               2978        2978           2978   2978       2978  2978   \n432               2118        2118           2118   2118       2118  2118   \n91                1384        1384           1384   1384       1384  1384   \n865                802         802            802    802        802   802   \n1004               695         695            695    695        695   695   \n610                693         693            693    693        693   693   \n578                676         676            676    676        676   676   \n260                645         645            645    645        645   645   \n\n      in_top_15  \n61         5525  \n769        3641  \n523        2978  \n432        2118  \n91         1384  \n865         802  \n1004        695  \n610         693  \n578         676  \n260         645  \n\n[10 rows x 23 columns]"},"exec_count":65,"output_type":"execute_result"}},"pos":67,"type":"cell"}
{"cell_type":"code","exec_count":66,"id":"bc7879","input":"df.groupby(by='gender')['basesalary'].max()","output":{"0":{"data":{"text/plain":"gender\nFemale                              680000.0\nMale                               1620000.0\nOther                               650000.0\nTitle: Senior Software Engineer     177000.0\nName: basesalary, dtype: float64"},"exec_count":66,"output_type":"execute_result"}},"pos":68,"type":"cell"}
{"cell_type":"code","exec_count":67,"id":"30bf47","input":"#What is the avg year total compensation for a female that works at google\nsort1 = df[df['company'] == 'Google']\nsort1.groupby(by = 'gender')['totalyearlycompensation'].mean()","output":{"0":{"data":{"text/plain":"gender\nFemale    255969.635628\nMale      282906.237260\nOther     284193.548387\nName: totalyearlycompensation, dtype: float64"},"exec_count":67,"output_type":"execute_result"}},"pos":69,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":68,"id":"221f30","input":"min(df['basesalary'])","output":{"0":{"data":{"text/plain":"0.0"},"exec_count":68,"output_type":"execute_result"}},"pos":70,"type":"cell"}
{"cell_type":"code","exec_count":69,"id":"db5f01","input":"df = df[df['basesalary'] != 0]","pos":71,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"e86da0","input":"df['company'].isnull().sum() #tells how many null in column","output":{"0":{"data":{"text/plain":"5"},"exec_count":7,"output_type":"execute_result"}},"pos":7,"type":"cell"}
{"cell_type":"code","exec_count":70,"id":"4fb325","input":"softeng = df[df['title'] == 'Software Engineer']\nplot12 = px.histogram(softeng, x='basesalary', title='Software Engineer Base Salary per State', color='state')\nplot12.show()","output":{"0":{"data":{"iframe":"df2fc8443d2b4a1d67e68f633f5e1af72c385c4d"},"exec_count":70,"output_type":"execute_result"}},"pos":72,"type":"cell"}
{"cell_type":"code","exec_count":71,"id":"07a1b1","input":"#user should input gender, title, race, education(?), company, location, years of exp","pos":73,"type":"cell"}
{"cell_type":"code","exec_count":72,"id":"40f71d","input":"df.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>...</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>state</th>\n      <th>education</th>\n      <th>race</th>\n      <th>in_top_15</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>GE Digital</td>\n      <td>Software Engineer</td>\n      <td>140000</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>130000.0</td>\n      <td>0.0</td>\n      <td>10000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>Missing</td>\n      <td>Missing</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Amazon</td>\n      <td>Software Engineer</td>\n      <td>172000</td>\n      <td>12.0</td>\n      <td>2.0</td>\n      <td>142000.0</td>\n      <td>30000.0</td>\n      <td>0.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>WA</td>\n      <td>Missing</td>\n      <td>Missing</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Uber</td>\n      <td>Software Engineer</td>\n      <td>325000</td>\n      <td>7.0</td>\n      <td>2.0</td>\n      <td>161000.0</td>\n      <td>140000.0</td>\n      <td>25000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>Missing</td>\n      <td>Missing</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>150000</td>\n      <td>4.0</td>\n      <td>0.0</td>\n      <td>118000.0</td>\n      <td>5000.0</td>\n      <td>12000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>WA</td>\n      <td>Missing</td>\n      <td>Missing</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>640000</td>\n      <td>11.0</td>\n      <td>4.0</td>\n      <td>210000.0</td>\n      <td>380000.0</td>\n      <td>50000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>Missing</td>\n      <td>Missing</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 23 columns</p>\n</div>","text/plain":"      company              title  totalyearlycompensation  yearsofexperience  \\\n0  GE Digital  Software Engineer                   140000                4.0   \n1      Amazon  Software Engineer                   172000               12.0   \n2        Uber  Software Engineer                   325000                7.0   \n3   Microsoft  Software Engineer                   150000                4.0   \n4      Google  Software Engineer                   640000               11.0   \n\n   yearsatcompany  basesalary  stockgrantvalue    bonus gender  \\\n0             4.0    130000.0              0.0  10000.0   Male   \n1             2.0    142000.0          30000.0      0.0   Male   \n2             2.0    161000.0         140000.0  25000.0   Male   \n3             0.0    118000.0           5000.0  12000.0   Male   \n4             4.0    210000.0         380000.0  50000.0   Male   \n\n   Masters_Degree  ...  Some_College  Race_Asian  Race_White  \\\n0               0  ...             0           0           0   \n1               0  ...             0           0           0   \n2               0  ...             0           0           0   \n3               0  ...             0           0           0   \n4               0  ...             0           0           0   \n\n   Race_Two_Or_More  Race_Black  Race_Hispanic  state  education     race  \\\n0                 0           0              0     CA    Missing  Missing   \n1                 0           0              0     WA    Missing  Missing   \n2                 0           0              0     CA    Missing  Missing   \n3                 0           0              0     WA    Missing  Missing   \n4                 0           0              0     CA    Missing  Missing   \n\n  in_top_15  \n0     False  \n1      True  \n2      True  \n3      True  \n4      True  \n\n[5 rows x 23 columns]"},"exec_count":72,"output_type":"execute_result"}},"pos":74,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":73,"id":"2fa8bb","input":"len(df)","output":{"0":{"data":{"text/plain":"42109"},"exec_count":73,"output_type":"execute_result"}},"pos":75,"type":"cell"}
{"cell_type":"code","exec_count":74,"id":"e9e73b","input":"df.education.value_counts()","output":{"0":{"data":{"text/plain":"Missing       14346\nMasters       13794\nBachelors     11873\nPHD            1438\nSome            348\nHighschool      310\nName: education, dtype: int64"},"exec_count":74,"output_type":"execute_result"}},"pos":76,"type":"cell"}
{"cell_type":"code","exec_count":75,"id":"15111f","input":"len(df[df['education'] == 'Missing'])","output":{"0":{"data":{"text/plain":"14346"},"exec_count":75,"output_type":"execute_result"}},"pos":77,"type":"cell"}
{"cell_type":"code","exec_count":76,"id":"26d328","input":"df = df[df['education'] != 'Missing']\ndf.reset_index(drop=True, inplace=True)","pos":78,"type":"cell"}
{"cell_type":"code","exec_count":77,"id":"bea4be","input":"df.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>...</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>state</th>\n      <th>education</th>\n      <th>race</th>\n      <th>in_top_15</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Capital One</td>\n      <td>Data Scientist</td>\n      <td>125000</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>121000.0</td>\n      <td>0.0</td>\n      <td>4000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Other</td>\n      <td>PHD</td>\n      <td>Missing</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Bloomberg</td>\n      <td>Software Engineer</td>\n      <td>170000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>142000.0</td>\n      <td>0.0</td>\n      <td>18000.0</td>\n      <td>Male</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NY</td>\n      <td>Masters</td>\n      <td>Missing</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Amazon</td>\n      <td>Data Scientist</td>\n      <td>332000</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>185000.0</td>\n      <td>17000.0</td>\n      <td>130000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>PHD</td>\n      <td>Missing</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Apple</td>\n      <td>Software Engineer</td>\n      <td>240000</td>\n      <td>3.0</td>\n      <td>3.0</td>\n      <td>150000.0</td>\n      <td>75000.0</td>\n      <td>15000.0</td>\n      <td>Female</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>PHD</td>\n      <td>Missing</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Synopsys</td>\n      <td>Software Engineer</td>\n      <td>310000</td>\n      <td>25.0</td>\n      <td>9.0</td>\n      <td>210000.0</td>\n      <td>40000.0</td>\n      <td>60000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>PHD</td>\n      <td>Missing</td>\n      <td>False</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 23 columns</p>\n</div>","text/plain":"       company              title  totalyearlycompensation  yearsofexperience  \\\n0  Capital One     Data Scientist                   125000                1.0   \n1    Bloomberg  Software Engineer                   170000                0.0   \n2       Amazon     Data Scientist                   332000                1.0   \n3        Apple  Software Engineer                   240000                3.0   \n4     Synopsys  Software Engineer                   310000               25.0   \n\n   yearsatcompany  basesalary  stockgrantvalue     bonus  gender  \\\n0             0.0    121000.0              0.0    4000.0    Male   \n1             0.0    142000.0              0.0   18000.0    Male   \n2             0.0    185000.0          17000.0  130000.0    Male   \n3             3.0    150000.0          75000.0   15000.0  Female   \n4             9.0    210000.0          40000.0   60000.0    Male   \n\n   Masters_Degree  ...  Some_College  Race_Asian  Race_White  \\\n0               0  ...             0           0           0   \n1               1  ...             0           0           0   \n2               0  ...             0           0           0   \n3               0  ...             0           0           0   \n4               0  ...             0           0           0   \n\n   Race_Two_Or_More  Race_Black  Race_Hispanic  state  education     race  \\\n0                 0           0              0  Other        PHD  Missing   \n1                 0           0              0     NY    Masters  Missing   \n2                 0           0              0     CA        PHD  Missing   \n3                 0           0              0     CA        PHD  Missing   \n4                 0           0              0     CA        PHD  Missing   \n\n  in_top_15  \n0      True  \n1     False  \n2      True  \n3      True  \n4     False  \n\n[5 rows x 23 columns]"},"exec_count":77,"output_type":"execute_result"}},"pos":79,"type":"cell"}
{"cell_type":"code","exec_count":78,"id":"48a5c0","input":"len(df)","output":{"0":{"data":{"text/plain":"27763"},"exec_count":78,"output_type":"execute_result"}},"pos":80,"type":"cell"}
{"cell_type":"code","exec_count":79,"id":"9865d1","input":"len(df[df['race'] == 'Missing'])","output":{"0":{"data":{"text/plain":"6174"},"exec_count":79,"output_type":"execute_result"}},"pos":81,"type":"cell"}
{"cell_type":"code","exec_count":8,"id":"757bc4","input":"missing_cols = []\nfor col in df:\n    if df[col].isnull().values.any():\n        num = df[col].isnull().sum()\n        missing_cols.append([col, num]) #shorter way of doing it (not one by one)","pos":8,"type":"cell"}
{"cell_type":"code","exec_count":80,"id":"201d16","input":"df = df[df['race'] != 'Missing']\ndf.reset_index(drop=True, inplace=True)","pos":82,"type":"cell"}
{"cell_type":"code","exec_count":81,"id":"e7cc9b","input":"len(df)","output":{"0":{"data":{"text/plain":"21589"},"exec_count":81,"output_type":"execute_result"}},"pos":83,"type":"cell"}
{"cell_type":"code","exec_count":82,"id":"603645","input":"df.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>...</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>state</th>\n      <th>education</th>\n      <th>race</th>\n      <th>in_top_15</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>400000</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>210000.0</td>\n      <td>145000.0</td>\n      <td>45000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>PHD</td>\n      <td>Asian</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>136000</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>124000.0</td>\n      <td>1000.0</td>\n      <td>11000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>WA</td>\n      <td>Bachelors</td>\n      <td>Two or More</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>337000</td>\n      <td>6.0</td>\n      <td>6.0</td>\n      <td>177000.0</td>\n      <td>125000.0</td>\n      <td>36000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>Bachelors</td>\n      <td>Asian</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>222000</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>164000.0</td>\n      <td>38000.0</td>\n      <td>20000.0</td>\n      <td>Male</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>WA</td>\n      <td>Masters</td>\n      <td>Asian</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Blend</td>\n      <td>Software Engineer</td>\n      <td>187000</td>\n      <td>5.0</td>\n      <td>0.0</td>\n      <td>165000.0</td>\n      <td>22000.0</td>\n      <td>0.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>Bachelors</td>\n      <td>White</td>\n      <td>False</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 23 columns</p>\n</div>","text/plain":"     company              title  totalyearlycompensation  yearsofexperience  \\\n0     Google  Software Engineer                   400000                5.0   \n1  Microsoft  Software Engineer                   136000                3.0   \n2     Google  Software Engineer                   337000                6.0   \n3  Microsoft  Software Engineer                   222000                4.0   \n4      Blend  Software Engineer                   187000                5.0   \n\n   yearsatcompany  basesalary  stockgrantvalue    bonus gender  \\\n0             5.0    210000.0         145000.0  45000.0   Male   \n1             2.0    124000.0           1000.0  11000.0   Male   \n2             6.0    177000.0         125000.0  36000.0   Male   \n3             4.0    164000.0          38000.0  20000.0   Male   \n4             0.0    165000.0          22000.0      0.0   Male   \n\n   Masters_Degree  ...  Some_College  Race_Asian  Race_White  \\\n0               0  ...             0           1           0   \n1               0  ...             0           0           0   \n2               0  ...             0           1           0   \n3               1  ...             0           1           0   \n4               0  ...             0           0           1   \n\n   Race_Two_Or_More  Race_Black  Race_Hispanic  state  education         race  \\\n0                 0           0              0     CA        PHD        Asian   \n1                 1           0              0     WA  Bachelors  Two or More   \n2                 0           0              0     CA  Bachelors        Asian   \n3                 0           0              0     WA    Masters        Asian   \n4                 0           0              0     CA  Bachelors        White   \n\n  in_top_15  \n0      True  \n1      True  \n2      True  \n3      True  \n4     False  \n\n[5 rows x 23 columns]"},"exec_count":82,"output_type":"execute_result"}},"pos":84,"type":"cell"}
{"cell_type":"code","exec_count":83,"id":"3bed62","input":"#MACHINE LEARNING MODELS","pos":85,"type":"cell"}
{"cell_type":"code","exec_count":84,"id":"7d3c9e","input":"from sklearn.preprocessing import OneHotEncoder\nfrom sklearn.compose import make_column_transformer","pos":86,"type":"cell"}
{"cell_type":"code","exec_count":85,"id":"259346","input":"transformer = make_column_transformer(\n    (OneHotEncoder(), ['title', 'gender', 'state']),\n    remainder='passthrough')","pos":87,"type":"cell"}
{"cell_type":"code","exec_count":86,"id":"132ea3","input":"transformed = transformer.fit_transform(df)\ntransformed_df = pd.DataFrame(transformed, columns=transformer.get_feature_names_out())","pos":88,"type":"cell"}
{"cell_type":"code","exec_count":87,"id":"06b553","input":"transformed_df.columns","output":{"0":{"data":{"text/plain":"Index(['onehotencoder__title_Business Analyst',\n       'onehotencoder__title_Data Scientist',\n       'onehotencoder__title_Hardware Engineer',\n       'onehotencoder__title_Human Resources',\n       'onehotencoder__title_Management Consultant',\n       'onehotencoder__title_Marketing',\n       'onehotencoder__title_Mechanical Engineer',\n       'onehotencoder__title_Product Designer',\n       'onehotencoder__title_Product Manager',\n       'onehotencoder__title_Recruiter', 'onehotencoder__title_Sales',\n       'onehotencoder__title_Software Engineer',\n       'onehotencoder__title_Software Engineering Manager',\n       'onehotencoder__title_Solution Architect',\n       'onehotencoder__title_Technical Program Manager',\n       'onehotencoder__gender_Female', 'onehotencoder__gender_Male',\n       'onehotencoder__gender_Other', 'onehotencoder__state_CA',\n       'onehotencoder__state_NY', 'onehotencoder__state_Other',\n       'onehotencoder__state_WA', 'remainder__company',\n       'remainder__totalyearlycompensation', 'remainder__yearsofexperience',\n       'remainder__yearsatcompany', 'remainder__basesalary',\n       'remainder__stockgrantvalue', 'remainder__bonus',\n       'remainder__Masters_Degree', 'remainder__Bachelors_Degree',\n       'remainder__Doctorate_Degree', 'remainder__Highschool',\n       'remainder__Some_College', 'remainder__Race_Asian',\n       'remainder__Race_White', 'remainder__Race_Two_Or_More',\n       'remainder__Race_Black', 'remainder__Race_Hispanic',\n       'remainder__education', 'remainder__race', 'remainder__in_top_15'],\n      dtype='object')"},"exec_count":87,"output_type":"execute_result"}},"pos":89,"type":"cell"}
{"cell_type":"code","exec_count":88,"id":"29e697","input":"cols = ['remainder__company', 'remainder__education', 'remainder__race']\ntransformed_df.drop(cols, axis=1, inplace=True)","pos":90,"type":"cell"}
{"cell_type":"code","exec_count":89,"id":"9495ca","input":"transformed_df['remainder__in_top_15'] = transformed_df['remainder__in_top_15'].astype(int)","pos":91,"type":"cell"}
{"cell_type":"code","exec_count":9,"id":"8dd038","input":"print(missing_cols)","output":{"0":{"name":"stdout","output_type":"stream","text":"[['company', 5], ['level', 119], ['tag', 854], ['gender', 19540], ['otherdetails', 22505], ['dmaid', 2], ['Race', 40215], ['Education', 32272]]\n"}},"pos":10,"type":"cell"}
{"cell_type":"code","exec_count":90,"id":"1bb8e7","input":"transformed_df.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>onehotencoder__title_Business Analyst</th>\n      <th>onehotencoder__title_Data Scientist</th>\n      <th>onehotencoder__title_Hardware Engineer</th>\n      <th>onehotencoder__title_Human Resources</th>\n      <th>onehotencoder__title_Management Consultant</th>\n      <th>onehotencoder__title_Marketing</th>\n      <th>onehotencoder__title_Mechanical Engineer</th>\n      <th>onehotencoder__title_Product Designer</th>\n      <th>onehotencoder__title_Product Manager</th>\n      <th>onehotencoder__title_Recruiter</th>\n      <th>...</th>\n      <th>remainder__Bachelors_Degree</th>\n      <th>remainder__Doctorate_Degree</th>\n      <th>remainder__Highschool</th>\n      <th>remainder__Some_College</th>\n      <th>remainder__Race_Asian</th>\n      <th>remainder__Race_White</th>\n      <th>remainder__Race_Two_Or_More</th>\n      <th>remainder__Race_Black</th>\n      <th>remainder__Race_Hispanic</th>\n      <th>remainder__in_top_15</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 39 columns</p>\n</div>","text/plain":"  onehotencoder__title_Business Analyst onehotencoder__title_Data Scientist  \\\n0                                   0.0                                 0.0   \n1                                   0.0                                 0.0   \n2                                   0.0                                 0.0   \n3                                   0.0                                 0.0   \n4                                   0.0                                 0.0   \n\n  onehotencoder__title_Hardware Engineer onehotencoder__title_Human Resources  \\\n0                                    0.0                                  0.0   \n1                                    0.0                                  0.0   \n2                                    0.0                                  0.0   \n3                                    0.0                                  0.0   \n4                                    0.0                                  0.0   \n\n  onehotencoder__title_Management Consultant onehotencoder__title_Marketing  \\\n0                                        0.0                            0.0   \n1                                        0.0                            0.0   \n2                                        0.0                            0.0   \n3                                        0.0                            0.0   \n4                                        0.0                            0.0   \n\n  onehotencoder__title_Mechanical Engineer  \\\n0                                      0.0   \n1                                      0.0   \n2                                      0.0   \n3                                      0.0   \n4                                      0.0   \n\n  onehotencoder__title_Product Designer onehotencoder__title_Product Manager  \\\n0                                   0.0                                  0.0   \n1                                   0.0                                  0.0   \n2                                   0.0                                  0.0   \n3                                   0.0                                  0.0   \n4                                   0.0                                  0.0   \n\n  onehotencoder__title_Recruiter  ... remainder__Bachelors_Degree  \\\n0                            0.0  ...                           0   \n1                            0.0  ...                           1   \n2                            0.0  ...                           1   \n3                            0.0  ...                           0   \n4                            0.0  ...                           1   \n\n  remainder__Doctorate_Degree remainder__Highschool remainder__Some_College  \\\n0                           1                     0                       0   \n1                           0                     0                       0   \n2                           0                     0                       0   \n3                           0                     0                       0   \n4                           0                     0                       0   \n\n  remainder__Race_Asian remainder__Race_White remainder__Race_Two_Or_More  \\\n0                     1                     0                           0   \n1                     0                     0                           1   \n2                     1                     0                           0   \n3                     1                     0                           0   \n4                     0                     1                           0   \n\n  remainder__Race_Black remainder__Race_Hispanic remainder__in_top_15  \n0                     0                        0                    1  \n1                     0                        0                    1  \n2                     0                        0                    1  \n3                     0                        0                    1  \n4                     0                        0                    0  \n\n[5 rows x 39 columns]"},"exec_count":90,"output_type":"execute_result"}},"pos":92,"type":"cell"}
{"cell_type":"code","exec_count":91,"id":"ab37c9","input":"#TRAIN TEST SPLIT","pos":94,"type":"cell"}
{"cell_type":"code","exec_count":92,"id":"44aeb8","input":"import sklearn\nfrom sklearn.model_selection import train_test_split","pos":95,"type":"cell"}
{"cell_type":"code","exec_count":93,"id":"45d594","input":"x = transformed_df.loc[:, transformed_df.columns != \"remainder__totalyearlycompensation\"]\ny = transformed_df.remainder__totalyearlycompensation","pos":96,"type":"cell"}
{"cell_type":"code","exec_count":94,"id":"b4bf8f","input":"x_train, x_test, y_train, y_test = train_test_split(x,y, random_state=42)","pos":97,"type":"cell"}
{"cell_type":"code","exec_count":95,"id":"ddb6b4","input":"from sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import GridSearchCV\nimport matplotlib.pyplot as plt\nparameters = {'n_jobs': [1]}\nlin = LinearRegression()\ngrid = GridSearchCV(lin, parameters)","pos":98,"type":"cell"}
{"cell_type":"code","exec_count":96,"id":"cb72bc","input":"lin.fit(x_train, y_train)","output":{"0":{"data":{"text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>","text/plain":"LinearRegression()"},"exec_count":96,"output_type":"execute_result"}},"pos":99,"type":"cell"}
{"cell_type":"code","exec_count":97,"id":"c7b7e4","input":"grid.fit(x_train, y_train)","output":{"0":{"data":{"text/html":"<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(estimator=LinearRegression(), param_grid={&#x27;n_jobs&#x27;: [1]})</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(estimator=LinearRegression(), param_grid={&#x27;n_jobs&#x27;: [1]})</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" ><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div></div></div></div></div></div>","text/plain":"GridSearchCV(estimator=LinearRegression(), param_grid={'n_jobs': [1]})"},"exec_count":97,"output_type":"execute_result"}},"pos":100,"type":"cell"}
{"cell_type":"code","exec_count":98,"id":"e845c7","input":"grid.best_params_","output":{"0":{"data":{"text/plain":"{'n_jobs': 1}"},"exec_count":98,"output_type":"execute_result"}},"pos":101,"type":"cell"}
{"cell_type":"code","exec_count":99,"id":"b2a8c5","input":"lin_pred = grid.predict(x_test)","pos":102,"type":"cell"}
{"cell_type":"markdown","id":"136201","input":"doing a ridge regression model","pos":108,"type":"cell"}
{"cell_type":"markdown","id":"2be642","input":"Our dataset is from: [https://www.kaggle.com/datasets/jackogozaly/data\\-science\\-and\\-stem\\-salaries?datasetId=1640011&sortBy=voteCount](https://www.kaggle.com/datasets/jackogozaly/data-science-and-stem-salaries?datasetId=1640011&sortBy=voteCount)\n","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"b246a6","input":"","pos":28,"type":"cell"}
{"cell_type":"raw","id":"026dfc","input":"","pos":93,"type":"cell"}
{"cell_type":"raw","id":"bb4d97","input":"","pos":9,"type":"cell"}
{"id":0,"time":1659116798509,"type":"user"}
{"last_load":1659115709698,"type":"file"}