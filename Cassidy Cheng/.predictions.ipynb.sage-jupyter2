{"backend_state":"running","connection_file":"/projects/0bcf82e6-7441-4432-a339-19b67c22cc5c/.local/share/jupyter/runtime/kernel-01578e6b-d07f-41de-9621-14d44eb2ad85.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1659551046606,"exec_count":142,"id":"260e18","input":"import pandas as pd\nimport numpy as np","kernel":"ds_env","pos":0,"start":1659551046587,"state":"done","type":"cell"}
{"cell_type":"code","end":1659551046930,"exec_count":143,"id":"68ed19","input":"df = pd.read_csv('cleaned_data')\ndf.drop(['Unnamed: 0'], axis=1, inplace=True)","kernel":"ds_env","pos":1,"start":1659551046861,"state":"done","type":"cell"}
{"cell_type":"code","end":1659551047088,"exec_count":144,"id":"e05193","input":"df.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>...</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>state</th>\n      <th>in_top_15</th>\n      <th>education</th>\n      <th>race</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>400000</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>210000.0</td>\n      <td>145000.0</td>\n      <td>45000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>True</td>\n      <td>PHD</td>\n      <td>Asian</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>136000</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>124000.0</td>\n      <td>1000.0</td>\n      <td>11000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>WA</td>\n      <td>True</td>\n      <td>Bachelors</td>\n      <td>Two</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>337000</td>\n      <td>6.0</td>\n      <td>6.0</td>\n      <td>177000.0</td>\n      <td>125000.0</td>\n      <td>36000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>True</td>\n      <td>Bachelors</td>\n      <td>Asian</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>222000</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>164000.0</td>\n      <td>38000.0</td>\n      <td>20000.0</td>\n      <td>Male</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>WA</td>\n      <td>True</td>\n      <td>Masters</td>\n      <td>Asian</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Blend</td>\n      <td>Software Engineer</td>\n      <td>187000</td>\n      <td>5.0</td>\n      <td>0.0</td>\n      <td>165000.0</td>\n      <td>22000.0</td>\n      <td>0.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>False</td>\n      <td>Bachelors</td>\n      <td>White</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 23 columns</p>\n</div>","text/plain":"     company              title  totalyearlycompensation  yearsofexperience  \\\n0     Google  Software Engineer                   400000                5.0   \n1  Microsoft  Software Engineer                   136000                3.0   \n2     Google  Software Engineer                   337000                6.0   \n3  Microsoft  Software Engineer                   222000                4.0   \n4      Blend  Software Engineer                   187000                5.0   \n\n   yearsatcompany  basesalary  stockgrantvalue    bonus gender  \\\n0             5.0    210000.0         145000.0  45000.0   Male   \n1             2.0    124000.0           1000.0  11000.0   Male   \n2             6.0    177000.0         125000.0  36000.0   Male   \n3             4.0    164000.0          38000.0  20000.0   Male   \n4             0.0    165000.0          22000.0      0.0   Male   \n\n   Masters_Degree  ...  Some_College  Race_Asian  Race_White  \\\n0               0  ...             0           1           0   \n1               0  ...             0           0           0   \n2               0  ...             0           1           0   \n3               1  ...             0           1           0   \n4               0  ...             0           0           1   \n\n   Race_Two_Or_More  Race_Black  Race_Hispanic  state  in_top_15  education  \\\n0                 0           0              0     CA       True        PHD   \n1                 1           0              0     WA       True  Bachelors   \n2                 0           0              0     CA       True  Bachelors   \n3                 0           0              0     WA       True    Masters   \n4                 0           0              0     CA      False  Bachelors   \n\n    race  \n0  Asian  \n1    Two  \n2  Asian  \n3  Asian  \n4  White  \n\n[5 rows x 23 columns]"},"exec_count":144}},"pos":2,"start":1659551047062,"state":"done","type":"cell"}
{"cell_type":"code","end":1659551047305,"exec_count":145,"id":"baae72","input":"df.columns","kernel":"ds_env","output":{"0":{"data":{"text/plain":"Index(['company', 'title', 'totalyearlycompensation', 'yearsofexperience',\n       'yearsatcompany', 'basesalary', 'stockgrantvalue', 'bonus', 'gender',\n       'Masters_Degree', 'Bachelors_Degree', 'Doctorate_Degree', 'Highschool',\n       'Some_College', 'Race_Asian', 'Race_White', 'Race_Two_Or_More',\n       'Race_Black', 'Race_Hispanic', 'state', 'in_top_15', 'education',\n       'race'],\n      dtype='object')"},"exec_count":145}},"pos":3,"start":1659551047296,"state":"done","type":"cell"}
{"cell_type":"code","end":1659551047888,"exec_count":146,"id":"053f7f","input":"#state, title, race, education, company, gender, experience","kernel":"ds_env","pos":4,"start":1659551047886,"state":"done","type":"cell"}
{"cell_type":"code","end":1659551048910,"exec_count":147,"id":"fe2e02","input":"def convert(years):\n    if years == 0:\n        return 'NO EXPERIENCE'\n    elif 1 <= years <= 3:\n        return 'LITTLE EXPERIENCE'\n    elif 4 <= years <= 6:\n        return 'MEDIUM EXPERIENCE'\n    else:\n        return 'VERY EXPERIENCED'","kernel":"ds_env","pos":5,"start":1659551048903,"state":"done","type":"cell"}
{"cell_type":"code","end":1659551049845,"exec_count":148,"id":"99e6e0","input":"df['experience'] = df.apply(lambda x: convert(x.yearsofexperience), axis=1)\ndf.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>...</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>state</th>\n      <th>in_top_15</th>\n      <th>education</th>\n      <th>race</th>\n      <th>experience</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>400000</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>210000.0</td>\n      <td>145000.0</td>\n      <td>45000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>True</td>\n      <td>PHD</td>\n      <td>Asian</td>\n      <td>MEDIUM EXPERIENCE</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>136000</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>124000.0</td>\n      <td>1000.0</td>\n      <td>11000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>WA</td>\n      <td>True</td>\n      <td>Bachelors</td>\n      <td>Two</td>\n      <td>LITTLE EXPERIENCE</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>337000</td>\n      <td>6.0</td>\n      <td>6.0</td>\n      <td>177000.0</td>\n      <td>125000.0</td>\n      <td>36000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>True</td>\n      <td>Bachelors</td>\n      <td>Asian</td>\n      <td>MEDIUM EXPERIENCE</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>222000</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>164000.0</td>\n      <td>38000.0</td>\n      <td>20000.0</td>\n      <td>Male</td>\n      <td>1</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>WA</td>\n      <td>True</td>\n      <td>Masters</td>\n      <td>Asian</td>\n      <td>MEDIUM EXPERIENCE</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Blend</td>\n      <td>Software Engineer</td>\n      <td>187000</td>\n      <td>5.0</td>\n      <td>0.0</td>\n      <td>165000.0</td>\n      <td>22000.0</td>\n      <td>0.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>False</td>\n      <td>Bachelors</td>\n      <td>White</td>\n      <td>MEDIUM EXPERIENCE</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 24 columns</p>\n</div>","text/plain":"     company              title  totalyearlycompensation  yearsofexperience  \\\n0     Google  Software Engineer                   400000                5.0   \n1  Microsoft  Software Engineer                   136000                3.0   \n2     Google  Software Engineer                   337000                6.0   \n3  Microsoft  Software Engineer                   222000                4.0   \n4      Blend  Software Engineer                   187000                5.0   \n\n   yearsatcompany  basesalary  stockgrantvalue    bonus gender  \\\n0             5.0    210000.0         145000.0  45000.0   Male   \n1             2.0    124000.0           1000.0  11000.0   Male   \n2             6.0    177000.0         125000.0  36000.0   Male   \n3             4.0    164000.0          38000.0  20000.0   Male   \n4             0.0    165000.0          22000.0      0.0   Male   \n\n   Masters_Degree  ...  Race_Asian  Race_White  Race_Two_Or_More  Race_Black  \\\n0               0  ...           1           0                 0           0   \n1               0  ...           0           0                 1           0   \n2               0  ...           1           0                 0           0   \n3               1  ...           1           0                 0           0   \n4               0  ...           0           1                 0           0   \n\n   Race_Hispanic  state  in_top_15  education   race         experience  \n0              0     CA       True        PHD  Asian  MEDIUM EXPERIENCE  \n1              0     WA       True  Bachelors    Two  LITTLE EXPERIENCE  \n2              0     CA       True  Bachelors  Asian  MEDIUM EXPERIENCE  \n3              0     WA       True    Masters  Asian  MEDIUM EXPERIENCE  \n4              0     CA      False  Bachelors  White  MEDIUM EXPERIENCE  \n\n[5 rows x 24 columns]"},"exec_count":148}},"pos":6,"start":1659551049558,"state":"done","type":"cell"}
{"cell_type":"code","end":1659551050373,"exec_count":149,"id":"dd3520","input":"input = ['state', 'title', 'race', 'education', 'gender', 'experience', 'in_top_15']\nfiller = df.groupby(by = input)['yearsatcompany', 'basesalary', 'stockgrantvalue', 'bonus'].mean()\nfiller.reset_index(inplace=True)\nfiller","kernel":"ds_env","output":{"0":{"name":"stderr","text":"/tmp/ipykernel_15133/2292288465.py:2: FutureWarning: Indexing with multiple keys (implicitly converted to a tuple of keys) will be deprecated, use a list instead.\n  filler = df.groupby(by = input)['yearsatcompany', 'basesalary', 'stockgrantvalue', 'bonus'].mean()\n"},"1":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>title</th>\n      <th>race</th>\n      <th>education</th>\n      <th>gender</th>\n      <th>experience</th>\n      <th>in_top_15</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>CA</td>\n      <td>Business Analyst</td>\n      <td>Asian</td>\n      <td>Bachelors</td>\n      <td>Female</td>\n      <td>LITTLE EXPERIENCE</td>\n      <td>False</td>\n      <td>0.800000</td>\n      <td>98000.000000</td>\n      <td>10600.000000</td>\n      <td>10600.000000</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>CA</td>\n      <td>Business Analyst</td>\n      <td>Asian</td>\n      <td>Bachelors</td>\n      <td>Female</td>\n      <td>LITTLE EXPERIENCE</td>\n      <td>True</td>\n      <td>1.666667</td>\n      <td>87333.333333</td>\n      <td>1000.000000</td>\n      <td>8333.333333</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>CA</td>\n      <td>Business Analyst</td>\n      <td>Asian</td>\n      <td>Bachelors</td>\n      <td>Female</td>\n      <td>MEDIUM EXPERIENCE</td>\n      <td>False</td>\n      <td>0.500000</td>\n      <td>130000.000000</td>\n      <td>5000.000000</td>\n      <td>5000.000000</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>CA</td>\n      <td>Business Analyst</td>\n      <td>Asian</td>\n      <td>Bachelors</td>\n      <td>Female</td>\n      <td>MEDIUM EXPERIENCE</td>\n      <td>True</td>\n      <td>1.000000</td>\n      <td>140000.000000</td>\n      <td>31000.000000</td>\n      <td>21000.000000</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>CA</td>\n      <td>Business Analyst</td>\n      <td>Asian</td>\n      <td>Bachelors</td>\n      <td>Female</td>\n      <td>NO EXPERIENCE</td>\n      <td>True</td>\n      <td>0.000000</td>\n      <td>79500.000000</td>\n      <td>0.000000</td>\n      <td>7000.000000</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>3382</th>\n      <td>WA</td>\n      <td>Technical Program Manager</td>\n      <td>White</td>\n      <td>Masters</td>\n      <td>Male</td>\n      <td>VERY EXPERIENCED</td>\n      <td>False</td>\n      <td>8.428571</td>\n      <td>162571.428571</td>\n      <td>5714.285714</td>\n      <td>16857.142857</td>\n    </tr>\n    <tr>\n      <th>3383</th>\n      <td>WA</td>\n      <td>Technical Program Manager</td>\n      <td>White</td>\n      <td>Masters</td>\n      <td>Male</td>\n      <td>VERY EXPERIENCED</td>\n      <td>True</td>\n      <td>5.142857</td>\n      <td>182571.428571</td>\n      <td>53785.714286</td>\n      <td>33857.142857</td>\n    </tr>\n    <tr>\n      <th>3384</th>\n      <td>WA</td>\n      <td>Technical Program Manager</td>\n      <td>White</td>\n      <td>PHD</td>\n      <td>Male</td>\n      <td>VERY EXPERIENCED</td>\n      <td>True</td>\n      <td>7.000000</td>\n      <td>185000.000000</td>\n      <td>232500.000000</td>\n      <td>20000.000000</td>\n    </tr>\n    <tr>\n      <th>3385</th>\n      <td>WA</td>\n      <td>Technical Program Manager</td>\n      <td>White</td>\n      <td>Some</td>\n      <td>Female</td>\n      <td>VERY EXPERIENCED</td>\n      <td>True</td>\n      <td>16.000000</td>\n      <td>182000.000000</td>\n      <td>40000.000000</td>\n      <td>42000.000000</td>\n    </tr>\n    <tr>\n      <th>3386</th>\n      <td>WA</td>\n      <td>Technical Program Manager</td>\n      <td>White</td>\n      <td>Some</td>\n      <td>Male</td>\n      <td>VERY EXPERIENCED</td>\n      <td>True</td>\n      <td>2.000000</td>\n      <td>206000.000000</td>\n      <td>36750.000000</td>\n      <td>35250.000000</td>\n    </tr>\n  </tbody>\n</table>\n<p>3387 rows Ã— 11 columns</p>\n</div>","text/plain":"     state                      title   race  education  gender  \\\n0       CA           Business Analyst  Asian  Bachelors  Female   \n1       CA           Business Analyst  Asian  Bachelors  Female   \n2       CA           Business Analyst  Asian  Bachelors  Female   \n3       CA           Business Analyst  Asian  Bachelors  Female   \n4       CA           Business Analyst  Asian  Bachelors  Female   \n...    ...                        ...    ...        ...     ...   \n3382    WA  Technical Program Manager  White    Masters    Male   \n3383    WA  Technical Program Manager  White    Masters    Male   \n3384    WA  Technical Program Manager  White        PHD    Male   \n3385    WA  Technical Program Manager  White       Some  Female   \n3386    WA  Technical Program Manager  White       Some    Male   \n\n             experience  in_top_15  yearsatcompany     basesalary  \\\n0     LITTLE EXPERIENCE      False        0.800000   98000.000000   \n1     LITTLE EXPERIENCE       True        1.666667   87333.333333   \n2     MEDIUM EXPERIENCE      False        0.500000  130000.000000   \n3     MEDIUM EXPERIENCE       True        1.000000  140000.000000   \n4         NO EXPERIENCE       True        0.000000   79500.000000   \n...                 ...        ...             ...            ...   \n3382   VERY EXPERIENCED      False        8.428571  162571.428571   \n3383   VERY EXPERIENCED       True        5.142857  182571.428571   \n3384   VERY EXPERIENCED       True        7.000000  185000.000000   \n3385   VERY EXPERIENCED       True       16.000000  182000.000000   \n3386   VERY EXPERIENCED       True        2.000000  206000.000000   \n\n      stockgrantvalue         bonus  \n0        10600.000000  10600.000000  \n1         1000.000000   8333.333333  \n2         5000.000000   5000.000000  \n3        31000.000000  21000.000000  \n4            0.000000   7000.000000  \n...               ...           ...  \n3382      5714.285714  16857.142857  \n3383     53785.714286  33857.142857  \n3384    232500.000000  20000.000000  \n3385     40000.000000  42000.000000  \n3386     36750.000000  35250.000000  \n\n[3387 rows x 11 columns]"},"exec_count":149}},"pos":7,"start":1659551050326,"state":"done","type":"cell"}
{"cell_type":"code","end":1659551050867,"exec_count":150,"id":"6013f7","input":"filler.reset_index(inplace=True)","kernel":"ds_env","pos":8,"start":1659551050858,"state":"done","type":"cell"}
{"cell_type":"code","end":1659551051509,"exec_count":151,"id":"5a050b","input":"filler[(filler['state'] == 'CA') & (filler['title'] == 'Business Analyst') & (filler['race'] == 'Asian') & (filler['gender'] == 'Female') & (filler['in_top_15'] == True) & (filler['education'] == 'PHD')]","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>index</th>\n      <th>state</th>\n      <th>title</th>\n      <th>race</th>\n      <th>education</th>\n      <th>gender</th>\n      <th>experience</th>\n      <th>in_top_15</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n    </tr>\n  </thead>\n  <tbody>\n  </tbody>\n</table>\n</div>","text/plain":"Empty DataFrame\nColumns: [index, state, title, race, education, gender, experience, in_top_15, yearsatcompany, basesalary, stockgrantvalue, bonus]\nIndex: []"},"exec_count":151}},"pos":9,"start":1659551051418,"state":"done","type":"cell"}
{"cell_type":"code","end":1659551052878,"exec_count":153,"id":"ac8d16","input":"#change experience from numerical to categorical\n#no = 0 years\n#little = 1-3\n#medium = 4-6\n#a lot = 6+","kernel":"ds_env","pos":10,"start":1659551052876,"state":"done","type":"cell"}
{"cell_type":"code","end":1659551054038,"exec_count":154,"id":"c11786","input":"df.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>...</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>state</th>\n      <th>in_top_15</th>\n      <th>education</th>\n      <th>race</th>\n      <th>experience</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>400000</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>210000.0</td>\n      <td>145000.0</td>\n      <td>45000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>True</td>\n      <td>PHD</td>\n      <td>Asian</td>\n      <td>MEDIUM EXPERIENCE</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>136000</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>124000.0</td>\n      <td>1000.0</td>\n      <td>11000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>WA</td>\n      <td>True</td>\n      <td>Bachelors</td>\n      <td>Two</td>\n      <td>LITTLE EXPERIENCE</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>337000</td>\n      <td>6.0</td>\n      <td>6.0</td>\n      <td>177000.0</td>\n      <td>125000.0</td>\n      <td>36000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>True</td>\n      <td>Bachelors</td>\n      <td>Asian</td>\n      <td>MEDIUM EXPERIENCE</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>222000</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>164000.0</td>\n      <td>38000.0</td>\n      <td>20000.0</td>\n      <td>Male</td>\n      <td>1</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>WA</td>\n      <td>True</td>\n      <td>Masters</td>\n      <td>Asian</td>\n      <td>MEDIUM EXPERIENCE</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Blend</td>\n      <td>Software Engineer</td>\n      <td>187000</td>\n      <td>5.0</td>\n      <td>0.0</td>\n      <td>165000.0</td>\n      <td>22000.0</td>\n      <td>0.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>False</td>\n      <td>Bachelors</td>\n      <td>White</td>\n      <td>MEDIUM EXPERIENCE</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 24 columns</p>\n</div>","text/plain":"     company              title  totalyearlycompensation  yearsofexperience  \\\n0     Google  Software Engineer                   400000                5.0   \n1  Microsoft  Software Engineer                   136000                3.0   \n2     Google  Software Engineer                   337000                6.0   \n3  Microsoft  Software Engineer                   222000                4.0   \n4      Blend  Software Engineer                   187000                5.0   \n\n   yearsatcompany  basesalary  stockgrantvalue    bonus gender  \\\n0             5.0    210000.0         145000.0  45000.0   Male   \n1             2.0    124000.0           1000.0  11000.0   Male   \n2             6.0    177000.0         125000.0  36000.0   Male   \n3             4.0    164000.0          38000.0  20000.0   Male   \n4             0.0    165000.0          22000.0      0.0   Male   \n\n   Masters_Degree  ...  Race_Asian  Race_White  Race_Two_Or_More  Race_Black  \\\n0               0  ...           1           0                 0           0   \n1               0  ...           0           0                 1           0   \n2               0  ...           1           0                 0           0   \n3               1  ...           1           0                 0           0   \n4               0  ...           0           1                 0           0   \n\n   Race_Hispanic  state  in_top_15  education   race         experience  \n0              0     CA       True        PHD  Asian  MEDIUM EXPERIENCE  \n1              0     WA       True  Bachelors    Two  LITTLE EXPERIENCE  \n2              0     CA       True  Bachelors  Asian  MEDIUM EXPERIENCE  \n3              0     WA       True    Masters  Asian  MEDIUM EXPERIENCE  \n4              0     CA      False  Bachelors  White  MEDIUM EXPERIENCE  \n\n[5 rows x 24 columns]"},"exec_count":154}},"pos":11,"start":1659551053566,"state":"done","type":"cell"}
{"cell_type":"code","end":1659551054726,"exec_count":155,"id":"a955e5","input":"#create groupby seven inputs & mean of outputs\ninput = ['state', 'title', 'race', 'gender', 'experience', 'education', 'in_top_15']\nfiller = df.groupby(by = input)['yearsatcompany', 'basesalary', 'stockgrantvalue', 'bonus'].mean()\nfiller.reset_index(inplace = True)","kernel":"ds_env","output":{"0":{"name":"stderr","text":"/tmp/ipykernel_15133/1973704127.py:3: FutureWarning: Indexing with multiple keys (implicitly converted to a tuple of keys) will be deprecated, use a list instead.\n  filler = df.groupby(by = input)['yearsatcompany', 'basesalary', 'stockgrantvalue', 'bonus'].mean()\n"}},"pos":12,"start":1659551054692,"state":"done","type":"cell"}
{"end":1659551052204,"exec_count":152,"id":"a99086","input":"filler[(filler['state'] == 'WA') & (filler['title'] == 'Software Engineer') & (filler['race'] == 'Asian') & (filler['gender'] == 'Male') & (filler['in_top_15'] == True) & (filler['education'] == 'PHD')]","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>index</th>\n      <th>state</th>\n      <th>title</th>\n      <th>race</th>\n      <th>education</th>\n      <th>gender</th>\n      <th>experience</th>\n      <th>in_top_15</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>3137</th>\n      <td>3137</td>\n      <td>WA</td>\n      <td>Software Engineer</td>\n      <td>Asian</td>\n      <td>PHD</td>\n      <td>Male</td>\n      <td>LITTLE EXPERIENCE</td>\n      <td>True</td>\n      <td>1.800000</td>\n      <td>165600.000000</td>\n      <td>87600.0</td>\n      <td>21200.000000</td>\n    </tr>\n    <tr>\n      <th>3139</th>\n      <td>3139</td>\n      <td>WA</td>\n      <td>Software Engineer</td>\n      <td>Asian</td>\n      <td>PHD</td>\n      <td>Male</td>\n      <td>MEDIUM EXPERIENCE</td>\n      <td>True</td>\n      <td>2.714286</td>\n      <td>164857.142857</td>\n      <td>86000.0</td>\n      <td>24428.571429</td>\n    </tr>\n    <tr>\n      <th>3141</th>\n      <td>3141</td>\n      <td>WA</td>\n      <td>Software Engineer</td>\n      <td>Asian</td>\n      <td>PHD</td>\n      <td>Male</td>\n      <td>NO EXPERIENCE</td>\n      <td>True</td>\n      <td>0.000000</td>\n      <td>157800.000000</td>\n      <td>70200.0</td>\n      <td>33000.000000</td>\n    </tr>\n    <tr>\n      <th>3143</th>\n      <td>3143</td>\n      <td>WA</td>\n      <td>Software Engineer</td>\n      <td>Asian</td>\n      <td>PHD</td>\n      <td>Male</td>\n      <td>VERY EXPERIENCED</td>\n      <td>True</td>\n      <td>2.500000</td>\n      <td>187250.000000</td>\n      <td>200500.0</td>\n      <td>62375.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"      index state              title   race education gender  \\\n3137   3137    WA  Software Engineer  Asian       PHD   Male   \n3139   3139    WA  Software Engineer  Asian       PHD   Male   \n3141   3141    WA  Software Engineer  Asian       PHD   Male   \n3143   3143    WA  Software Engineer  Asian       PHD   Male   \n\n             experience  in_top_15  yearsatcompany     basesalary  \\\n3137  LITTLE EXPERIENCE       True        1.800000  165600.000000   \n3139  MEDIUM EXPERIENCE       True        2.714286  164857.142857   \n3141      NO EXPERIENCE       True        0.000000  157800.000000   \n3143   VERY EXPERIENCED       True        2.500000  187250.000000   \n\n      stockgrantvalue         bonus  \n3137          87600.0  21200.000000  \n3139          86000.0  24428.571429  \n3141          70200.0  33000.000000  \n3143         200500.0  62375.000000  "},"exec_count":152}},"pos":9.5,"start":1659551052187,"state":"done","type":"cell"}
{"end":1659551059705,"exec_count":156,"id":"c00e51","input":"#when there is no filler data it returns an empty df\n#def find filler data ( user input) \n    #if df is empty\n        #return sorry no data found\n    #else\n        #return filler data","kernel":"ds_env","pos":16,"start":1659551059702,"state":"done","type":"cell"}
{"end":1659551061999,"exec_count":157,"id":"4e79df","input":"top_15 = list(df['company'].value_counts().head(15).index)\ntop_15","kernel":"ds_env","output":{"0":{"data":{"text/plain":"['Amazon',\n 'Microsoft',\n 'Google',\n 'Facebook',\n 'Apple',\n 'Oracle',\n 'IBM',\n 'Intel',\n 'Cisco',\n 'Salesforce',\n 'Capital One',\n 'VMware',\n 'JPMorgan Chase',\n 'Deloitte',\n 'Uber']"},"exec_count":157}},"pos":17.5,"start":1659551061989,"state":"done","type":"cell"}
{"end":1659552191385,"exec_count":180,"id":"e475cf","input":"userinput = ['state', 'title', 'race', 'gender', 'experience', 'education', 'in_top_15']\nfiller2 = df.groupby(by = userinput)['yearsatcompany', 'basesalary', 'stockgrantvalue', 'bonus'].mean()\nfiller2.reset_index(inplace = True)\nfiller2.head()","kernel":"ds_env","output":{"0":{"name":"stderr","text":"/tmp/ipykernel_15133/1658636948.py:2: FutureWarning: Indexing with multiple keys (implicitly converted to a tuple of keys) will be deprecated, use a list instead.\n  filler2 = df.groupby(by = userinput)['yearsatcompany', 'basesalary', 'stockgrantvalue', 'bonus'].mean()\n"},"1":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>title</th>\n      <th>race</th>\n      <th>gender</th>\n      <th>experience</th>\n      <th>education</th>\n      <th>in_top_15</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>CA</td>\n      <td>Business Analyst</td>\n      <td>Asian</td>\n      <td>Female</td>\n      <td>LITTLE EXPERIENCE</td>\n      <td>Bachelors</td>\n      <td>False</td>\n      <td>0.800000</td>\n      <td>98000.000000</td>\n      <td>10600.0</td>\n      <td>10600.000000</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>CA</td>\n      <td>Business Analyst</td>\n      <td>Asian</td>\n      <td>Female</td>\n      <td>LITTLE EXPERIENCE</td>\n      <td>Bachelors</td>\n      <td>True</td>\n      <td>1.666667</td>\n      <td>87333.333333</td>\n      <td>1000.0</td>\n      <td>8333.333333</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>CA</td>\n      <td>Business Analyst</td>\n      <td>Asian</td>\n      <td>Female</td>\n      <td>LITTLE EXPERIENCE</td>\n      <td>Masters</td>\n      <td>False</td>\n      <td>1.200000</td>\n      <td>102000.000000</td>\n      <td>8400.0</td>\n      <td>19600.000000</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>CA</td>\n      <td>Business Analyst</td>\n      <td>Asian</td>\n      <td>Female</td>\n      <td>MEDIUM EXPERIENCE</td>\n      <td>Bachelors</td>\n      <td>False</td>\n      <td>0.500000</td>\n      <td>130000.000000</td>\n      <td>5000.0</td>\n      <td>5000.000000</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>CA</td>\n      <td>Business Analyst</td>\n      <td>Asian</td>\n      <td>Female</td>\n      <td>MEDIUM EXPERIENCE</td>\n      <td>Bachelors</td>\n      <td>True</td>\n      <td>1.000000</td>\n      <td>140000.000000</td>\n      <td>31000.0</td>\n      <td>21000.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"  state             title   race  gender         experience  education  \\\n0    CA  Business Analyst  Asian  Female  LITTLE EXPERIENCE  Bachelors   \n1    CA  Business Analyst  Asian  Female  LITTLE EXPERIENCE  Bachelors   \n2    CA  Business Analyst  Asian  Female  LITTLE EXPERIENCE    Masters   \n3    CA  Business Analyst  Asian  Female  MEDIUM EXPERIENCE  Bachelors   \n4    CA  Business Analyst  Asian  Female  MEDIUM EXPERIENCE  Bachelors   \n\n   in_top_15  yearsatcompany     basesalary  stockgrantvalue         bonus  \n0      False        0.800000   98000.000000          10600.0  10600.000000  \n1       True        1.666667   87333.333333           1000.0   8333.333333  \n2      False        1.200000  102000.000000           8400.0  19600.000000  \n3      False        0.500000  130000.000000           5000.0   5000.000000  \n4       True        1.000000  140000.000000          31000.0  21000.000000  "},"exec_count":180}},"pos":18.25,"start":1659552191340,"state":"done","type":"cell"}
{"end":1659552198774,"exec_count":181,"id":"46941b","input":"def findfillerdata(state, title, race, gender, company, education, yearsofexperience):\n    top_15_data = None\n    if company in top_15:\n        top_15_data = True\n    else:\n        top_15_data = False\n    \n    experience = convert(yearsofexperience)\n    fillerdata = filler2[(filler2['state'] == state) & \n                     (filler2['title'] == title) & \n                     (filler2['race'] == race) & \n                     (filler2['gender'] == gender) & \n                     (filler2['in_top_15'] == top_15_data) & \n                     (filler2['education'] == education) & \n                     (filler2['experience'] == experience)]\n    if len(fillerdata) == 0:\n        return 'sorry no data found'\n    else:\n        return fillerdata","kernel":"ds_env","pos":19,"start":1659552198762,"state":"done","type":"cell"}
{"end":1659561389086,"exec_count":187,"id":"b46cfa","input":"findfillerdata('WA', 'Software Engineer', 'Asian', 'Female', 'Google', 'Masters', 2)","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>title</th>\n      <th>race</th>\n      <th>gender</th>\n      <th>experience</th>\n      <th>education</th>\n      <th>in_top_15</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>3105</th>\n      <td>WA</td>\n      <td>Software Engineer</td>\n      <td>Asian</td>\n      <td>Female</td>\n      <td>LITTLE EXPERIENCE</td>\n      <td>Masters</td>\n      <td>True</td>\n      <td>1.348837</td>\n      <td>131232.55814</td>\n      <td>33069.767442</td>\n      <td>15209.302326</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"     state              title   race  gender         experience education  \\\n3105    WA  Software Engineer  Asian  Female  LITTLE EXPERIENCE   Masters   \n\n      in_top_15  yearsatcompany    basesalary  stockgrantvalue         bonus  \n3105       True        1.348837  131232.55814     33069.767442  15209.302326  "},"exec_count":187}},"pos":23,"start":1659561389058,"state":"done","type":"cell"}
{"end":1659562765206,"exec_count":194,"id":"854c26","input":"from sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler, OneHotEncoder\nfrom sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import FunctionTransformer","kernel":"ds_env","pos":24,"start":1659562765142,"state":"done","type":"cell"}
{"end":1659562998014,"exec_count":196,"id":"c5972c","input":"numeric_features = ['yearsofexperience', 'yearsatcompany', 'basesalary', 'stockgrantvalue', 'bonus', 'Masters_Degree', 'Bachelors_Degree', 'Doctorate_Degree', 'Highschool', 'Some_College', 'Race_Asian', 'Race_White', 'Race_White', 'Race_Two_Or_More', 'Race_Black', 'Race_Hispanic', 'in_top_15']\nnumeric_transformer = FunctionTransformer(np.square)","kernel":"ds_env","pos":26,"start":1659562998008,"state":"done","type":"cell"}
{"end":1659563020120,"exec_count":197,"id":"14f71e","input":"categorical_features = ['title', 'gender', 'state']\ncategorical_transformer = OneHotEncoder(handle_unknown='ignore')","kernel":"ds_env","pos":27,"start":1659563020112,"state":"done","type":"cell"}
{"end":1659563271523,"exec_count":200,"id":"e5d37d","input":"preprocessor = ColumnTransformer(transformers = [('num', numeric_transformer, numeric_features), ('cat', categorical_transformer, categorical_features)])","kernel":"ds_env","pos":28,"start":1659563271512,"state":"done","type":"cell"}
{"end":1659563291041,"exec_count":201,"id":"5566fe","input":"clf = Pipeline(\n    steps=[('preprocessor', preprocessor),('classifier', KNeighborsRegressor())]\n)","kernel":"ds_env","pos":29,"start":1659563291032,"state":"done","type":"cell"}
{"end":1659563376475,"exec_count":203,"id":"67adbe","input":"x = df.loc[:, (df.columns !='totalyearlycompensation')]\ny = df.totalyearlycompensation\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)","kernel":"ds_env","pos":30,"start":1659563376460,"state":"done","type":"cell"}
{"end":1659563382955,"exec_count":205,"id":"bb2fb7","input":"clf.fit(x_train, y_train)","kernel":"ds_env","output":{"0":{"data":{"text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,\n                 ColumnTransformer(transformers=[(&#x27;num&#x27;,\n                                                  FunctionTransformer(func=&lt;ufunc &#x27;square&#x27;&gt;),\n                                                  [&#x27;yearsofexperience&#x27;,\n                                                   &#x27;yearsatcompany&#x27;,\n                                                   &#x27;basesalary&#x27;,\n                                                   &#x27;stockgrantvalue&#x27;, &#x27;bonus&#x27;,\n                                                   &#x27;Masters_Degree&#x27;,\n                                                   &#x27;Bachelors_Degree&#x27;,\n                                                   &#x27;Doctorate_Degree&#x27;,\n                                                   &#x27;Highschool&#x27;, &#x27;Some_College&#x27;,\n                                                   &#x27;Race_Asian&#x27;, &#x27;Race_White&#x27;,\n                                                   &#x27;Race_White&#x27;,\n                                                   &#x27;Race_Two_Or_More&#x27;,\n                                                   &#x27;Race_Black&#x27;,\n                                                   &#x27;Race_Hispanic&#x27;,\n                                                   &#x27;in_top_15&#x27;]),\n                                                 (&#x27;cat&#x27;,\n                                                  OneHotEncoder(handle_unknown=&#x27;ignore&#x27;),\n                                                  [&#x27;title&#x27;, &#x27;gender&#x27;,\n                                                   &#x27;state&#x27;])])),\n                (&#x27;classifier&#x27;, KNeighborsRegressor())])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" ><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Pipeline</label><div class=\"sk-toggleable__content\"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,\n                 ColumnTransformer(transformers=[(&#x27;num&#x27;,\n                                                  FunctionTransformer(func=&lt;ufunc &#x27;square&#x27;&gt;),\n                                                  [&#x27;yearsofexperience&#x27;,\n                                                   &#x27;yearsatcompany&#x27;,\n                                                   &#x27;basesalary&#x27;,\n                                                   &#x27;stockgrantvalue&#x27;, &#x27;bonus&#x27;,\n                                                   &#x27;Masters_Degree&#x27;,\n                                                   &#x27;Bachelors_Degree&#x27;,\n                                                   &#x27;Doctorate_Degree&#x27;,\n                                                   &#x27;Highschool&#x27;, &#x27;Some_College&#x27;,\n                                                   &#x27;Race_Asian&#x27;, &#x27;Race_White&#x27;,\n                                                   &#x27;Race_White&#x27;,\n                                                   &#x27;Race_Two_Or_More&#x27;,\n                                                   &#x27;Race_Black&#x27;,\n                                                   &#x27;Race_Hispanic&#x27;,\n                                                   &#x27;in_top_15&#x27;]),\n                                                 (&#x27;cat&#x27;,\n                                                  OneHotEncoder(handle_unknown=&#x27;ignore&#x27;),\n                                                  [&#x27;title&#x27;, &#x27;gender&#x27;,\n                                                   &#x27;state&#x27;])])),\n                (&#x27;classifier&#x27;, KNeighborsRegressor())])</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">preprocessor: ColumnTransformer</label><div class=\"sk-toggleable__content\"><pre>ColumnTransformer(transformers=[(&#x27;num&#x27;,\n                                 FunctionTransformer(func=&lt;ufunc &#x27;square&#x27;&gt;),\n                                 [&#x27;yearsofexperience&#x27;, &#x27;yearsatcompany&#x27;,\n                                  &#x27;basesalary&#x27;, &#x27;stockgrantvalue&#x27;, &#x27;bonus&#x27;,\n                                  &#x27;Masters_Degree&#x27;, &#x27;Bachelors_Degree&#x27;,\n                                  &#x27;Doctorate_Degree&#x27;, &#x27;Highschool&#x27;,\n                                  &#x27;Some_College&#x27;, &#x27;Race_Asian&#x27;, &#x27;Race_White&#x27;,\n                                  &#x27;Race_White&#x27;, &#x27;Race_Two_Or_More&#x27;,\n                                  &#x27;Race_Black&#x27;, &#x27;Race_Hispanic&#x27;, &#x27;in_top_15&#x27;]),\n                                (&#x27;cat&#x27;, OneHotEncoder(handle_unknown=&#x27;ignore&#x27;),\n                                 [&#x27;title&#x27;, &#x27;gender&#x27;, &#x27;state&#x27;])])</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">num</label><div class=\"sk-toggleable__content\"><pre>[&#x27;yearsofexperience&#x27;, &#x27;yearsatcompany&#x27;, &#x27;basesalary&#x27;, &#x27;stockgrantvalue&#x27;, &#x27;bonus&#x27;, &#x27;Masters_Degree&#x27;, &#x27;Bachelors_Degree&#x27;, &#x27;Doctorate_Degree&#x27;, &#x27;Highschool&#x27;, &#x27;Some_College&#x27;, &#x27;Race_Asian&#x27;, &#x27;Race_White&#x27;, &#x27;Race_White&#x27;, &#x27;Race_Two_Or_More&#x27;, &#x27;Race_Black&#x27;, &#x27;Race_Hispanic&#x27;, &#x27;in_top_15&#x27;]</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" ><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">FunctionTransformer</label><div class=\"sk-toggleable__content\"><pre>FunctionTransformer(func=&lt;ufunc &#x27;square&#x27;&gt;)</pre></div></div></div></div></div></div><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" ><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">cat</label><div class=\"sk-toggleable__content\"><pre>[&#x27;title&#x27;, &#x27;gender&#x27;, &#x27;state&#x27;]</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-6\" type=\"checkbox\" ><label for=\"sk-estimator-id-6\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">OneHotEncoder</label><div class=\"sk-toggleable__content\"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-7\" type=\"checkbox\" ><label for=\"sk-estimator-id-7\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsRegressor</label><div class=\"sk-toggleable__content\"><pre>KNeighborsRegressor()</pre></div></div></div></div></div></div></div>","text/plain":"Pipeline(steps=[('preprocessor',\n                 ColumnTransformer(transformers=[('num',\n                                                  FunctionTransformer(func=<ufunc 'square'>),\n                                                  ['yearsofexperience',\n                                                   'yearsatcompany',\n                                                   'basesalary',\n                                                   'stockgrantvalue', 'bonus',\n                                                   'Masters_Degree',\n                                                   'Bachelors_Degree',\n                                                   'Doctorate_Degree',\n                                                   'Highschool', 'Some_College',\n                                                   'Race_Asian', 'Race_White',\n                                                   'Race_White',\n                                                   'Race_Two_Or_More',\n                                                   'Race_Black',\n                                                   'Race_Hispanic',\n                                                   'in_top_15']),\n                                                 ('cat',\n                                                  OneHotEncoder(handle_unknown='ignore'),\n                                                  ['title', 'gender',\n                                                   'state'])])),\n                ('classifier', KNeighborsRegressor())])"},"exec_count":205}},"pos":31,"start":1659563382895,"state":"done","type":"cell"}
{"end":1659563425316,"exec_count":208,"id":"f073b1","input":"clf.score(x_test, y_test)","kernel":"ds_env","output":{"0":{"data":{"text/plain":"0.9050458531996377"},"exec_count":208}},"pos":32,"start":1659563424770,"state":"done","type":"cell"}
{"end":1659563427074,"exec_count":209,"id":"679266","input":"test = x_train.head(1)\ntest","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>Bachelors_Degree</th>\n      <th>...</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>state</th>\n      <th>in_top_15</th>\n      <th>education</th>\n      <th>race</th>\n      <th>experience</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>8981</th>\n      <td>IBM</td>\n      <td>Solution Architect</td>\n      <td>14.0</td>\n      <td>8.0</td>\n      <td>155000.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>Female</td>\n      <td>0</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>WA</td>\n      <td>True</td>\n      <td>Bachelors</td>\n      <td>White</td>\n      <td>VERY EXPERIENCED</td>\n    </tr>\n  </tbody>\n</table>\n<p>1 rows Ã— 23 columns</p>\n</div>","text/plain":"     company               title  yearsofexperience  yearsatcompany  \\\n8981     IBM  Solution Architect               14.0             8.0   \n\n      basesalary  stockgrantvalue  bonus  gender  Masters_Degree  \\\n8981    155000.0              0.0    0.0  Female               0   \n\n      Bachelors_Degree  ...  Race_Asian  Race_White  Race_Two_Or_More  \\\n8981                 1  ...           0           1                 0   \n\n      Race_Black  Race_Hispanic  state  in_top_15  education   race  \\\n8981           0              0     WA       True  Bachelors  White   \n\n            experience  \n8981  VERY EXPERIENCED  \n\n[1 rows x 23 columns]"},"exec_count":209}},"pos":33,"start":1659563427059,"state":"done","type":"cell"}
{"end":1659563658553,"exec_count":210,"id":"e5796f","input":"clf.predict(test)","kernel":"ds_env","output":{"0":{"data":{"text/plain":"array([155200.])"},"exec_count":210}},"pos":34,"start":1659563658527,"state":"done","type":"cell"}
{"id":"3465d9","input":"","pos":35,"type":"cell"}
{"id":0,"time":1659562696238,"type":"user"}
{"last_load":1659546522963,"type":"file"}