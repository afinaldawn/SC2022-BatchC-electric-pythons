{"backend_state":"running","connection_file":"/projects/0bcf82e6-7441-4432-a339-19b67c22cc5c/.local/share/jupyter/runtime/kernel-2c34fb9d-b1b8-40e6-b2a5-9ea46aabc66e.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1659461599302,"exec_count":1,"id":"0af10a","input":"#Loading And Understanding Our Data","kernel":"ds_env","pos":0,"start":1659461599232,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461599762,"exec_count":2,"id":"158e38","input":"import pandas as pd\nimport numpy as np","kernel":"ds_env","pos":1,"start":1659461599325,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461600217,"exec_count":3,"id":"72c9b1","input":"df = pd.read_csv(\"Levels_Fyi_Salary_Data.csv\")","kernel":"ds_env","pos":3,"start":1659461599772,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461600267,"exec_count":4,"id":"5fdc29","input":"df.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>timestamp</th>\n      <th>company</th>\n      <th>level</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>location</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>tag</th>\n      <th>basesalary</th>\n      <th>...</th>\n      <th>Doctorate_Degree</th>\n      <th>Highschool</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>Race</th>\n      <th>Education</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>6/7/2017 11:33:27</td>\n      <td>Oracle</td>\n      <td>L3</td>\n      <td>Product Manager</td>\n      <td>127000</td>\n      <td>Redwood City, CA</td>\n      <td>1.5</td>\n      <td>1.5</td>\n      <td>NaN</td>\n      <td>107000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>6/10/2017 17:11:29</td>\n      <td>eBay</td>\n      <td>SE 2</td>\n      <td>Software Engineer</td>\n      <td>100000</td>\n      <td>San Francisco, CA</td>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>6/11/2017 14:53:57</td>\n      <td>Amazon</td>\n      <td>L7</td>\n      <td>Product Manager</td>\n      <td>310000</td>\n      <td>Seattle, WA</td>\n      <td>8.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>155000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>6/17/2017 0:23:14</td>\n      <td>Apple</td>\n      <td>M1</td>\n      <td>Software Engineering Manager</td>\n      <td>372000</td>\n      <td>Sunnyvale, CA</td>\n      <td>7.0</td>\n      <td>5.0</td>\n      <td>NaN</td>\n      <td>157000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>6/20/2017 10:58:51</td>\n      <td>Microsoft</td>\n      <td>60</td>\n      <td>Software Engineer</td>\n      <td>157000</td>\n      <td>Mountain View, CA</td>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 29 columns</p>\n</div>","text/plain":"            timestamp    company level                         title  \\\n0   6/7/2017 11:33:27     Oracle    L3               Product Manager   \n1  6/10/2017 17:11:29       eBay  SE 2             Software Engineer   \n2  6/11/2017 14:53:57     Amazon    L7               Product Manager   \n3   6/17/2017 0:23:14      Apple    M1  Software Engineering Manager   \n4  6/20/2017 10:58:51  Microsoft    60             Software Engineer   \n\n   totalyearlycompensation           location  yearsofexperience  \\\n0                   127000   Redwood City, CA                1.5   \n1                   100000  San Francisco, CA                5.0   \n2                   310000        Seattle, WA                8.0   \n3                   372000      Sunnyvale, CA                7.0   \n4                   157000  Mountain View, CA                5.0   \n\n   yearsatcompany  tag  basesalary  ...  Doctorate_Degree  Highschool  \\\n0             1.5  NaN    107000.0  ...                 0           0   \n1             3.0  NaN         0.0  ...                 0           0   \n2             0.0  NaN    155000.0  ...                 0           0   \n3             5.0  NaN    157000.0  ...                 0           0   \n4             3.0  NaN         0.0  ...                 0           0   \n\n  Some_College Race_Asian  Race_White  Race_Two_Or_More  Race_Black  \\\n0            0          0           0                 0           0   \n1            0          0           0                 0           0   \n2            0          0           0                 0           0   \n3            0          0           0                 0           0   \n4            0          0           0                 0           0   \n\n   Race_Hispanic  Race  Education  \n0              0   NaN        NaN  \n1              0   NaN        NaN  \n2              0   NaN        NaN  \n3              0   NaN        NaN  \n4              0   NaN        NaN  \n\n[5 rows x 29 columns]"},"exec_count":4}},"pos":4,"start":1659461600233,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461600278,"exec_count":5,"id":"e68454","input":"#Cleaning Our Data","kernel":"ds_env","pos":5,"start":1659461600272,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461600289,"exec_count":6,"id":"c7c8f4","input":"df.columns","kernel":"ds_env","output":{"0":{"data":{"text/plain":"Index(['timestamp', 'company', 'level', 'title', 'totalyearlycompensation',\n       'location', 'yearsofexperience', 'yearsatcompany', 'tag', 'basesalary',\n       'stockgrantvalue', 'bonus', 'gender', 'otherdetails', 'cityid', 'dmaid',\n       'rowNumber', 'Masters_Degree', 'Bachelors_Degree', 'Doctorate_Degree',\n       'Highschool', 'Some_College', 'Race_Asian', 'Race_White',\n       'Race_Two_Or_More', 'Race_Black', 'Race_Hispanic', 'Race', 'Education'],\n      dtype='object')"},"exec_count":6}},"pos":6,"start":1659461600283,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461600298,"exec_count":7,"id":"515e99","input":"#numbers of rows in dataset\nlen(df)","kernel":"ds_env","output":{"0":{"data":{"text/plain":"62642"},"exec_count":7}},"pos":7,"start":1659461600293,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461600316,"exec_count":8,"id":"f93c17","input":"df['company'].isnull().values.any() #tells us if there are missing values in this column","kernel":"ds_env","output":{"0":{"data":{"text/plain":"True"},"exec_count":8}},"pos":8,"start":1659461600310,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461600330,"exec_count":9,"id":"d4b092","input":"df['timestamp'].isnull().sum() #tells us how many null values are in a specific column","kernel":"ds_env","output":{"0":{"data":{"text/plain":"0"},"exec_count":9}},"pos":9,"start":1659461600327,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461600345,"exec_count":10,"id":"f08b75","input":"df['company'].isnull().sum","kernel":"ds_env","output":{"0":{"data":{"text/plain":"<bound method NDFrame._add_numeric_operations.<locals>.sum of 0        False\n1        False\n2        False\n3        False\n4        False\n         ...  \n62637    False\n62638    False\n62639    False\n62640    False\n62641    False\nName: company, Length: 62642, dtype: bool>"},"exec_count":10}},"pos":10,"start":1659461600334,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461600454,"exec_count":11,"id":"70fa8e","input":"#identifies all missing variables in all columns\npd.isnull(df).sum()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"timestamp                      0\ncompany                        5\nlevel                        119\ntitle                          0\ntotalyearlycompensation        0\nlocation                       0\nyearsofexperience              0\nyearsatcompany                 0\ntag                          854\nbasesalary                     0\nstockgrantvalue                0\nbonus                          0\ngender                     19540\notherdetails               22505\ncityid                         0\ndmaid                          2\nrowNumber                      0\nMasters_Degree                 0\nBachelors_Degree               0\nDoctorate_Degree               0\nHighschool                     0\nSome_College                   0\nRace_Asian                     0\nRace_White                     0\nRace_Two_Or_More               0\nRace_Black                     0\nRace_Hispanic                  0\nRace                       40215\nEducation                  32272\ndtype: int64"},"exec_count":11}},"pos":11,"start":1659461600348,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461600520,"exec_count":12,"id":"3469c3","input":"# code that identifies the number  of all N/A's in columns\nmissing_cols = []\nfor col in df.columns:\n    if df[col].isnull().values.any():\n        num = df[col].isnull().sum()\n        missing_cols.append([col, num])","kernel":"ds_env","pos":12,"start":1659461600462,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461600529,"exec_count":13,"id":"8e1a87","input":"missing_cols","kernel":"ds_env","output":{"0":{"data":{"text/plain":"[['company', 5],\n ['level', 119],\n ['tag', 854],\n ['gender', 19540],\n ['otherdetails', 22505],\n ['dmaid', 2],\n ['Race', 40215],\n ['Education', 32272]]"},"exec_count":13}},"pos":13,"start":1659461600523,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461600547,"exec_count":14,"id":"dd2494","input":"#Finding the useless variables\ndf['Race'].notnull().sum()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"22427"},"exec_count":14}},"pos":14,"start":1659461600533,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461600570,"exec_count":15,"id":"bcc416","input":"df['level'].value_counts()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"L4                             5014\nL5                             4871\nL3                             3337\nL6                             2871\nSenior Software Engineer       1443\n                               ... \nMid Market                        1\nGr 7                              1\nSenior BA                         1\nConsulting Analyst                1\nBioinformatics Scientist II       1\nName: level, Length: 2923, dtype: int64"},"exec_count":15}},"pos":15,"start":1659461600550,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461600589,"exec_count":16,"id":"3cb241","input":"#Dropping all the N/A's\ndf = df.drop(['Race'], axis = 1)","kernel":"ds_env","pos":16,"start":1659461600574,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461600609,"exec_count":17,"id":"100f18","input":"df = df.drop(['Education'], axis = 1)","kernel":"ds_env","pos":17,"start":1659461600596,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461600623,"exec_count":18,"id":"6035ae","input":"df = df.drop(['otherdetails'], axis = 1)","kernel":"ds_env","pos":18,"start":1659461600615,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461600639,"exec_count":19,"id":"78cfd1","input":"df = df.drop(['level'], axis = 1)","kernel":"ds_env","pos":19,"start":1659461600629,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461600652,"exec_count":20,"id":"7fee24","input":"df = df.drop(['tag'], axis = 1)","kernel":"ds_env","pos":20,"start":1659461600644,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461600665,"exec_count":21,"id":"988c3b","input":"df = df.drop(['dmaid'], axis = 1)","kernel":"ds_env","pos":21,"start":1659461600657,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461600678,"exec_count":22,"id":"1a4eb4","input":"df = df.drop(['cityid'], axis = 1)","kernel":"ds_env","pos":22,"start":1659461600670,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461600691,"exec_count":23,"id":"19508d","input":"df = df.drop(['rowNumber'], axis = 1)","kernel":"ds_env","pos":23,"start":1659461600684,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461600714,"exec_count":24,"id":"167ae4","input":"df = df.drop(['timestamp'], axis = 1)","kernel":"ds_env","pos":24,"start":1659461600710,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461600775,"exec_count":25,"id":"900a0c","input":"df.dropna(inplace=True)\ndf.reset_index(drop=True, inplace = True)","kernel":"ds_env","pos":25,"start":1659461600725,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461600797,"exec_count":26,"id":"046c50","input":"# Columns left after dropping\ndf.columns","kernel":"ds_env","output":{"0":{"data":{"text/plain":"Index(['company', 'title', 'totalyearlycompensation', 'location',\n       'yearsofexperience', 'yearsatcompany', 'basesalary', 'stockgrantvalue',\n       'bonus', 'gender', 'Masters_Degree', 'Bachelors_Degree',\n       'Doctorate_Degree', 'Highschool', 'Some_College', 'Race_Asian',\n       'Race_White', 'Race_Two_Or_More', 'Race_Black', 'Race_Hispanic'],\n      dtype='object')"},"exec_count":26}},"pos":26,"start":1659461600784,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461600820,"exec_count":27,"id":"ea3521","input":"df.tail()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>location</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>Bachelors_Degree</th>\n      <th>Doctorate_Degree</th>\n      <th>Highschool</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>43093</th>\n      <td>Amazon</td>\n      <td>Software Engineer</td>\n      <td>135000</td>\n      <td>Seattle, WA</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>104000.0</td>\n      <td>3000.0</td>\n      <td>18500.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>43094</th>\n      <td>Amazon</td>\n      <td>Software Engineer</td>\n      <td>350000</td>\n      <td>Austin, TX</td>\n      <td>14.0</td>\n      <td>1.0</td>\n      <td>160000.0</td>\n      <td>175000.0</td>\n      <td>56250.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>43095</th>\n      <td>Microsoft</td>\n      <td>Product Manager</td>\n      <td>305000</td>\n      <td>Seattle, WA</td>\n      <td>20.0</td>\n      <td>2.0</td>\n      <td>200000.0</td>\n      <td>75000.0</td>\n      <td>30000.0</td>\n      <td>Female</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>43096</th>\n      <td>Amazon</td>\n      <td>Software Engineer</td>\n      <td>152000</td>\n      <td>Seattle, WA</td>\n      <td>3.0</td>\n      <td>0.0</td>\n      <td>106000.0</td>\n      <td>26000.0</td>\n      <td>20000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>43097</th>\n      <td>apple</td>\n      <td>Software Engineer</td>\n      <td>200000</td>\n      <td>Sunnyvale, CA</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>155000.0</td>\n      <td>27000.0</td>\n      <td>19000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"         company              title  totalyearlycompensation       location  \\\n43093     Amazon  Software Engineer                   135000    Seattle, WA   \n43094     Amazon  Software Engineer                   350000     Austin, TX   \n43095  Microsoft    Product Manager                   305000    Seattle, WA   \n43096     Amazon  Software Engineer                   152000    Seattle, WA   \n43097      apple  Software Engineer                   200000  Sunnyvale, CA   \n\n       yearsofexperience  yearsatcompany  basesalary  stockgrantvalue  \\\n43093                1.0             0.0    104000.0           3000.0   \n43094               14.0             1.0    160000.0         175000.0   \n43095               20.0             2.0    200000.0          75000.0   \n43096                3.0             0.0    106000.0          26000.0   \n43097                0.0             0.0    155000.0          27000.0   \n\n         bonus  gender  Masters_Degree  Bachelors_Degree  Doctorate_Degree  \\\n43093  18500.0    Male               0                 0                 0   \n43094  56250.0    Male               0                 0                 0   \n43095  30000.0  Female               0                 0                 0   \n43096  20000.0    Male               0                 0                 0   \n43097  19000.0    Male               0                 0                 0   \n\n       Highschool  Some_College  Race_Asian  Race_White  Race_Two_Or_More  \\\n43093           0             0           0           0                 0   \n43094           0             0           0           0                 0   \n43095           0             0           0           0                 0   \n43096           0             0           0           0                 0   \n43097           0             0           0           0                 0   \n\n       Race_Black  Race_Hispanic  \n43093           0              0  \n43094           0              0  \n43095           0              0  \n43096           0              0  \n43097           0              0  "},"exec_count":27}},"pos":27,"start":1659461600803,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461600838,"exec_count":28,"id":"5e2271","input":"df = df[df['basesalary'] != 0]","kernel":"ds_env","pos":28,"start":1659461600824,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461600864,"exec_count":29,"id":"850e0e","input":"#the number of rows in this dataset after cleaning data\nlen(df)","kernel":"ds_env","output":{"0":{"data":{"text/plain":"42109"},"exec_count":29}},"pos":29,"start":1659461600845,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461600874,"exec_count":30,"id":"fc705a","input":"#making a new column for degree's/education\ndef check_education(master, bach, doc, high, some):\n    if master == 1:\n        return \"Masters\"\n    elif bach == 1:\n        return \"Bachelors\"\n    elif doc == 1:\n        return \"PHD\"\n    elif high == 1:\n        return 'Highschool'\n    elif some == 1:\n        return \"Some\"\n    else:\n        return \"Missing\"","kernel":"ds_env","pos":30,"start":1659461600872,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461602478,"exec_count":31,"id":"95424b","input":"df['education'] = df.apply(lambda x: check_education(x.Masters_Degree, x.Bachelors_Degree, x.Doctorate_Degree, x.Highschool, x.Some_College), axis = 1)\ndf.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>location</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>...</th>\n      <th>Bachelors_Degree</th>\n      <th>Doctorate_Degree</th>\n      <th>Highschool</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>education</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>GE Digital</td>\n      <td>Software Engineer</td>\n      <td>140000</td>\n      <td>San Ramon, CA</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>130000.0</td>\n      <td>0.0</td>\n      <td>10000.0</td>\n      <td>Male</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Missing</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Amazon</td>\n      <td>Software Engineer</td>\n      <td>172000</td>\n      <td>Seattle, WA</td>\n      <td>12.0</td>\n      <td>2.0</td>\n      <td>142000.0</td>\n      <td>30000.0</td>\n      <td>0.0</td>\n      <td>Male</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Missing</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Uber</td>\n      <td>Software Engineer</td>\n      <td>325000</td>\n      <td>San Francisco, CA</td>\n      <td>7.0</td>\n      <td>2.0</td>\n      <td>161000.0</td>\n      <td>140000.0</td>\n      <td>25000.0</td>\n      <td>Male</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Missing</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>150000</td>\n      <td>Seattle, WA</td>\n      <td>4.0</td>\n      <td>0.0</td>\n      <td>118000.0</td>\n      <td>5000.0</td>\n      <td>12000.0</td>\n      <td>Male</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Missing</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>640000</td>\n      <td>Mountain View, CA</td>\n      <td>11.0</td>\n      <td>4.0</td>\n      <td>210000.0</td>\n      <td>380000.0</td>\n      <td>50000.0</td>\n      <td>Male</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Missing</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 21 columns</p>\n</div>","text/plain":"      company              title  totalyearlycompensation           location  \\\n0  GE Digital  Software Engineer                   140000      San Ramon, CA   \n1      Amazon  Software Engineer                   172000        Seattle, WA   \n2        Uber  Software Engineer                   325000  San Francisco, CA   \n3   Microsoft  Software Engineer                   150000        Seattle, WA   \n4      Google  Software Engineer                   640000  Mountain View, CA   \n\n   yearsofexperience  yearsatcompany  basesalary  stockgrantvalue    bonus  \\\n0                4.0             4.0    130000.0              0.0  10000.0   \n1               12.0             2.0    142000.0          30000.0      0.0   \n2                7.0             2.0    161000.0         140000.0  25000.0   \n3                4.0             0.0    118000.0           5000.0  12000.0   \n4               11.0             4.0    210000.0         380000.0  50000.0   \n\n  gender  ...  Bachelors_Degree  Doctorate_Degree  Highschool  Some_College  \\\n0   Male  ...                 0                 0           0             0   \n1   Male  ...                 0                 0           0             0   \n2   Male  ...                 0                 0           0             0   \n3   Male  ...                 0                 0           0             0   \n4   Male  ...                 0                 0           0             0   \n\n   Race_Asian  Race_White  Race_Two_Or_More  Race_Black  Race_Hispanic  \\\n0           0           0                 0           0              0   \n1           0           0                 0           0              0   \n2           0           0                 0           0              0   \n3           0           0                 0           0              0   \n4           0           0                 0           0              0   \n\n   education  \n0    Missing  \n1    Missing  \n2    Missing  \n3    Missing  \n4    Missing  \n\n[5 rows x 21 columns]"},"exec_count":31}},"pos":31,"start":1659461600885,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461602503,"exec_count":32,"id":"2957bb","input":"# see how many are variables missing \nlen(df[df['education'] == 'Missing'])","kernel":"ds_env","output":{"0":{"data":{"text/plain":"14346"},"exec_count":32}},"pos":32,"start":1659461602483,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461602524,"exec_count":33,"id":"0e05cc","input":"df = df[df['education'] != 'Missing']\ndf.reset_index(drop=True, inplace=True)","kernel":"ds_env","pos":33,"start":1659461602516,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461602558,"exec_count":34,"id":"e6f51f","input":"# post results after cleaning data\nlen(df[df['education'] == 'Missing'])","kernel":"ds_env","output":{"0":{"data":{"text/plain":"0"},"exec_count":34}},"pos":34,"start":1659461602552,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461602568,"exec_count":35,"id":"0857f2","input":"#what is the largest bonus\nmax(df['bonus'])","kernel":"ds_env","output":{"0":{"data":{"text/plain":"900000.0"},"exec_count":35}},"pos":36,"start":1659461602565,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461602626,"exec_count":36,"id":"3407fe","input":"#find how much years of expierence is needed to get a base salary above $1,000,000\ndf.describe()\ndf['yearsofexperience'][df['basesalary'] >= 1000000 ]","kernel":"ds_env","output":{"0":{"data":{"text/plain":"Series([], Name: yearsofexperience, dtype: float64)"},"exec_count":36}},"pos":37,"start":1659461602573,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461602637,"exec_count":37,"id":"790eb6","input":"#find which company is more popular\ndf['company'].mode #finds out the most frequent variable in a column","kernel":"ds_env","output":{"0":{"data":{"text/plain":"<bound method Series.mode of 0        Capital One\n1          Bloomberg\n2             Amazon\n3              Apple\n4           Synopsys\n            ...     \n27758       Facebook\n27759         Google\n27760         Zapier\n27761       Facebook\n27762       Facebook\nName: company, Length: 27763, dtype: object>"},"exec_count":37}},"pos":38,"start":1659461602633,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461602644,"exec_count":38,"id":"849f37","input":"#Featuring engineering and more cleaning","kernel":"ds_env","pos":39,"start":1659461602642,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461602653,"exec_count":39,"id":"bc89d5","input":"#basically simplifying to show the popular state\ndef get_state(x):\n    words = x.split(', ')\n    state = words[1]\n    if state == 'CA':\n        return 'CA'\n    elif state == 'WA':\n        return 'WA'\n    elif state == 'NY':\n        return 'NY'\n    else:\n        return 'Other'","kernel":"ds_env","pos":40,"start":1659461602649,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461602687,"exec_count":40,"id":"f0f179","input":"df['state'] = df['location'].apply(get_state)\ndf.drop(['location'], axis = 1, inplace = True)","kernel":"ds_env","pos":41,"start":1659461602673,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461602723,"exec_count":41,"id":"69c8f2","input":"df.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>...</th>\n      <th>Doctorate_Degree</th>\n      <th>Highschool</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>education</th>\n      <th>state</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Capital One</td>\n      <td>Data Scientist</td>\n      <td>125000</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>121000.0</td>\n      <td>0.0</td>\n      <td>4000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>PHD</td>\n      <td>Other</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Bloomberg</td>\n      <td>Software Engineer</td>\n      <td>170000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>142000.0</td>\n      <td>0.0</td>\n      <td>18000.0</td>\n      <td>Male</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Masters</td>\n      <td>NY</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Amazon</td>\n      <td>Data Scientist</td>\n      <td>332000</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>185000.0</td>\n      <td>17000.0</td>\n      <td>130000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>PHD</td>\n      <td>CA</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Apple</td>\n      <td>Software Engineer</td>\n      <td>240000</td>\n      <td>3.0</td>\n      <td>3.0</td>\n      <td>150000.0</td>\n      <td>75000.0</td>\n      <td>15000.0</td>\n      <td>Female</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>PHD</td>\n      <td>CA</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Synopsys</td>\n      <td>Software Engineer</td>\n      <td>310000</td>\n      <td>25.0</td>\n      <td>9.0</td>\n      <td>210000.0</td>\n      <td>40000.0</td>\n      <td>60000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>PHD</td>\n      <td>CA</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 21 columns</p>\n</div>","text/plain":"       company              title  totalyearlycompensation  yearsofexperience  \\\n0  Capital One     Data Scientist                   125000                1.0   \n1    Bloomberg  Software Engineer                   170000                0.0   \n2       Amazon     Data Scientist                   332000                1.0   \n3        Apple  Software Engineer                   240000                3.0   \n4     Synopsys  Software Engineer                   310000               25.0   \n\n   yearsatcompany  basesalary  stockgrantvalue     bonus  gender  \\\n0             0.0    121000.0              0.0    4000.0    Male   \n1             0.0    142000.0              0.0   18000.0    Male   \n2             0.0    185000.0          17000.0  130000.0    Male   \n3             3.0    150000.0          75000.0   15000.0  Female   \n4             9.0    210000.0          40000.0   60000.0    Male   \n\n   Masters_Degree  ...  Doctorate_Degree  Highschool  Some_College  \\\n0               0  ...                 1           0             0   \n1               1  ...                 0           0             0   \n2               0  ...                 1           0             0   \n3               0  ...                 1           0             0   \n4               0  ...                 1           0             0   \n\n   Race_Asian  Race_White  Race_Two_Or_More  Race_Black  Race_Hispanic  \\\n0           0           0                 0           0              0   \n1           0           0                 0           0              0   \n2           0           0                 0           0              0   \n3           0           0                 0           0              0   \n4           0           0                 0           0              0   \n\n   education  state  \n0        PHD  Other  \n1    Masters     NY  \n2        PHD     CA  \n3        PHD     CA  \n4        PHD     CA  \n\n[5 rows x 21 columns]"},"exec_count":41}},"pos":42,"start":1659461602693,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461602734,"exec_count":42,"id":"57036a","input":"df.state.value_counts()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"Other    11907\nCA        9042\nWA        4742\nNY        2072\nName: state, dtype: int64"},"exec_count":42}},"pos":43,"start":1659461602730,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461602754,"exec_count":43,"id":"5e0e58","input":"#making a new column for top 15 companies\ntop_15_popular = list(df['company'].value_counts().index)[:15]\ndef in_popular(x):\n    if x in top_15_popular:\n        return True\n    else:\n        return False\ndf['in_top_15'] = df['company'].apply(in_popular)","kernel":"ds_env","pos":44,"start":1659461602737,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461602798,"exec_count":44,"id":"a30940","input":"df.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>...</th>\n      <th>Highschool</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>education</th>\n      <th>state</th>\n      <th>in_top_15</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Capital One</td>\n      <td>Data Scientist</td>\n      <td>125000</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>121000.0</td>\n      <td>0.0</td>\n      <td>4000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>PHD</td>\n      <td>Other</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Bloomberg</td>\n      <td>Software Engineer</td>\n      <td>170000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>142000.0</td>\n      <td>0.0</td>\n      <td>18000.0</td>\n      <td>Male</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Masters</td>\n      <td>NY</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Amazon</td>\n      <td>Data Scientist</td>\n      <td>332000</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>185000.0</td>\n      <td>17000.0</td>\n      <td>130000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>PHD</td>\n      <td>CA</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Apple</td>\n      <td>Software Engineer</td>\n      <td>240000</td>\n      <td>3.0</td>\n      <td>3.0</td>\n      <td>150000.0</td>\n      <td>75000.0</td>\n      <td>15000.0</td>\n      <td>Female</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>PHD</td>\n      <td>CA</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Synopsys</td>\n      <td>Software Engineer</td>\n      <td>310000</td>\n      <td>25.0</td>\n      <td>9.0</td>\n      <td>210000.0</td>\n      <td>40000.0</td>\n      <td>60000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>PHD</td>\n      <td>CA</td>\n      <td>False</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 22 columns</p>\n</div>","text/plain":"       company              title  totalyearlycompensation  yearsofexperience  \\\n0  Capital One     Data Scientist                   125000                1.0   \n1    Bloomberg  Software Engineer                   170000                0.0   \n2       Amazon     Data Scientist                   332000                1.0   \n3        Apple  Software Engineer                   240000                3.0   \n4     Synopsys  Software Engineer                   310000               25.0   \n\n   yearsatcompany  basesalary  stockgrantvalue     bonus  gender  \\\n0             0.0    121000.0              0.0    4000.0    Male   \n1             0.0    142000.0              0.0   18000.0    Male   \n2             0.0    185000.0          17000.0  130000.0    Male   \n3             3.0    150000.0          75000.0   15000.0  Female   \n4             9.0    210000.0          40000.0   60000.0    Male   \n\n   Masters_Degree  ...  Highschool  Some_College  Race_Asian  Race_White  \\\n0               0  ...           0             0           0           0   \n1               1  ...           0             0           0           0   \n2               0  ...           0             0           0           0   \n3               0  ...           0             0           0           0   \n4               0  ...           0             0           0           0   \n\n   Race_Two_Or_More  Race_Black  Race_Hispanic  education  state in_top_15  \n0                 0           0              0        PHD  Other      True  \n1                 0           0              0    Masters     NY      True  \n2                 0           0              0        PHD     CA      True  \n3                 0           0              0        PHD     CA      True  \n4                 0           0              0        PHD     CA     False  \n\n[5 rows x 22 columns]"},"exec_count":44}},"pos":45,"scrolled":true,"start":1659461602758,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461602807,"exec_count":45,"id":"dc544f","input":"# name_of_dataframe.groupby(by = name of column you want to group by)[column of data you want to look at].what function you want to apply\n# u can use .max, .min, .mean, .count, .reset_index, \n# https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.groupby.html","kernel":"ds_env","pos":46,"start":1659461602803,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461602833,"exec_count":46,"id":"189e4d","input":"df.groupby(by = 'title')['yearsofexperience'].mean()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"title\nBusiness Analyst                 5.866530\nData Scientist                   5.021361\nHardware Engineer                7.889088\nHuman Resources                 10.789189\nManagement Consultant            7.697802\nMarketing                        9.328205\nMechanical Engineer              6.045455\nProduct Designer                 7.465306\nProduct Manager                  9.074825\nRecruiter                        8.302128\nSales                            8.693878\nSoftware Engineer                6.058590\nSoftware Engineering Manager    14.254038\nSolution Architect              12.027944\nTechnical Program Manager       12.370904\nName: yearsofexperience, dtype: float64"},"exec_count":46}},"pos":47,"start":1659461602817,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461602842,"exec_count":47,"id":"4b7a31","input":"#Graphs","kernel":"ds_env","pos":48,"start":1659461602839,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461602960,"exec_count":48,"id":"575592","input":"import plotly.express as px #importing plotly","kernel":"ds_env","pos":49,"start":1659461602852,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461602977,"exec_count":49,"id":"44c52c","input":"len('Female')","kernel":"ds_env","output":{"0":{"data":{"text/plain":"6"},"exec_count":49}},"pos":50,"start":1659461602974,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461603386,"exec_count":50,"id":"8bafe8","input":"#histogram\nsofteng = df[df['title'] == 'Software Engineer']\nfig = px.histogram(softeng, x='basesalary', title='Software Engineer Base Salary per State', color='state')\nfig.show()","kernel":"ds_env","output":{"0":{"data":{"iframe":"ce6a83264e05cbdc9d1dd7079ea91cafbc90e1ff"}}},"pos":51,"start":1659461602982,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461603447,"exec_count":51,"id":"51e0a3","input":"#piechart\npopular_titles = df.groupby(by = 'title').count().reset_index().sort_values(by = 'company', ascending = False).head()\npopular_titles","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>title</th>\n      <th>company</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>...</th>\n      <th>Highschool</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>education</th>\n      <th>state</th>\n      <th>in_top_15</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>11</th>\n      <td>Software Engineer</td>\n      <td>17648</td>\n      <td>17648</td>\n      <td>17648</td>\n      <td>17648</td>\n      <td>17648</td>\n      <td>17648</td>\n      <td>17648</td>\n      <td>17648</td>\n      <td>17648</td>\n      <td>...</td>\n      <td>17648</td>\n      <td>17648</td>\n      <td>17648</td>\n      <td>17648</td>\n      <td>17648</td>\n      <td>17648</td>\n      <td>17648</td>\n      <td>17648</td>\n      <td>17648</td>\n      <td>17648</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Product Manager</td>\n      <td>1998</td>\n      <td>1998</td>\n      <td>1998</td>\n      <td>1998</td>\n      <td>1998</td>\n      <td>1998</td>\n      <td>1998</td>\n      <td>1998</td>\n      <td>1998</td>\n      <td>...</td>\n      <td>1998</td>\n      <td>1998</td>\n      <td>1998</td>\n      <td>1998</td>\n      <td>1998</td>\n      <td>1998</td>\n      <td>1998</td>\n      <td>1998</td>\n      <td>1998</td>\n      <td>1998</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>Software Engineering Manager</td>\n      <td>1362</td>\n      <td>1362</td>\n      <td>1362</td>\n      <td>1362</td>\n      <td>1362</td>\n      <td>1362</td>\n      <td>1362</td>\n      <td>1362</td>\n      <td>1362</td>\n      <td>...</td>\n      <td>1362</td>\n      <td>1362</td>\n      <td>1362</td>\n      <td>1362</td>\n      <td>1362</td>\n      <td>1362</td>\n      <td>1362</td>\n      <td>1362</td>\n      <td>1362</td>\n      <td>1362</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Data Scientist</td>\n      <td>1264</td>\n      <td>1264</td>\n      <td>1264</td>\n      <td>1264</td>\n      <td>1264</td>\n      <td>1264</td>\n      <td>1264</td>\n      <td>1264</td>\n      <td>1264</td>\n      <td>...</td>\n      <td>1264</td>\n      <td>1264</td>\n      <td>1264</td>\n      <td>1264</td>\n      <td>1264</td>\n      <td>1264</td>\n      <td>1264</td>\n      <td>1264</td>\n      <td>1264</td>\n      <td>1264</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Hardware Engineer</td>\n      <td>1118</td>\n      <td>1118</td>\n      <td>1118</td>\n      <td>1118</td>\n      <td>1118</td>\n      <td>1118</td>\n      <td>1118</td>\n      <td>1118</td>\n      <td>1118</td>\n      <td>...</td>\n      <td>1118</td>\n      <td>1118</td>\n      <td>1118</td>\n      <td>1118</td>\n      <td>1118</td>\n      <td>1118</td>\n      <td>1118</td>\n      <td>1118</td>\n      <td>1118</td>\n      <td>1118</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 22 columns</p>\n</div>","text/plain":"                           title  company  totalyearlycompensation  \\\n11             Software Engineer    17648                    17648   \n8                Product Manager     1998                     1998   \n12  Software Engineering Manager     1362                     1362   \n1                 Data Scientist     1264                     1264   \n2              Hardware Engineer     1118                     1118   \n\n    yearsofexperience  yearsatcompany  basesalary  stockgrantvalue  bonus  \\\n11              17648           17648       17648            17648  17648   \n8                1998            1998        1998             1998   1998   \n12               1362            1362        1362             1362   1362   \n1                1264            1264        1264             1264   1264   \n2                1118            1118        1118             1118   1118   \n\n    gender  Masters_Degree  ...  Highschool  Some_College  Race_Asian  \\\n11   17648           17648  ...       17648         17648       17648   \n8     1998            1998  ...        1998          1998        1998   \n12    1362            1362  ...        1362          1362        1362   \n1     1264            1264  ...        1264          1264        1264   \n2     1118            1118  ...        1118          1118        1118   \n\n    Race_White  Race_Two_Or_More  Race_Black  Race_Hispanic  education  state  \\\n11       17648             17648       17648          17648      17648  17648   \n8         1998              1998        1998           1998       1998   1998   \n12        1362              1362        1362           1362       1362   1362   \n1         1264              1264        1264           1264       1264   1264   \n2         1118              1118        1118           1118       1118   1118   \n\n    in_top_15  \n11      17648  \n8        1998  \n12       1362  \n1        1264  \n2        1118  \n\n[5 rows x 22 columns]"},"exec_count":51}},"pos":52,"start":1659461603397,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461603504,"exec_count":52,"id":"0d3e61","input":"fig = px.pie(popular_titles, values = 'company', names = 'title', title = 'Job Positions in the Data Science and STEM Feild')\nfig.show()","kernel":"ds_env","output":{"0":{"data":{"iframe":"5b44bd234b92430323a9987449b50cba6fe3be30"}}},"pos":53,"start":1659461603450,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461603581,"exec_count":53,"id":"a46a40","input":"df.describe()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>Masters_Degree</th>\n      <th>Bachelors_Degree</th>\n      <th>Doctorate_Degree</th>\n      <th>Highschool</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>2.776300e+04</td>\n      <td>27763.000000</td>\n      <td>27763.000000</td>\n      <td>27763.000000</td>\n      <td>27763.000000</td>\n      <td>27763.000000</td>\n      <td>27763.000000</td>\n      <td>27763.000000</td>\n      <td>27763.000000</td>\n      <td>27763.000000</td>\n      <td>27763.000000</td>\n      <td>27763.000000</td>\n      <td>27763.000000</td>\n      <td>27763.000000</td>\n      <td>27763.000000</td>\n      <td>27763.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>2.039209e+05</td>\n      <td>7.171073</td>\n      <td>2.707162</td>\n      <td>136773.799661</td>\n      <td>47489.200195</td>\n      <td>19008.752656</td>\n      <td>0.496848</td>\n      <td>0.427800</td>\n      <td>0.055037</td>\n      <td>0.011166</td>\n      <td>0.012535</td>\n      <td>0.411123</td>\n      <td>0.276627</td>\n      <td>0.027591</td>\n      <td>0.023845</td>\n      <td>0.038468</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>1.330307e+05</td>\n      <td>5.807141</td>\n      <td>3.293359</td>\n      <td>56781.128163</td>\n      <td>74428.782590</td>\n      <td>25545.132804</td>\n      <td>0.499999</td>\n      <td>0.494769</td>\n      <td>0.228057</td>\n      <td>0.105079</td>\n      <td>0.111256</td>\n      <td>0.492046</td>\n      <td>0.447339</td>\n      <td>0.163800</td>\n      <td>0.152568</td>\n      <td>0.192328</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>1.000000e+04</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>4000.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>1.240000e+05</td>\n      <td>3.000000</td>\n      <td>0.000000</td>\n      <td>105000.000000</td>\n      <td>0.000000</td>\n      <td>3000.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>1.800000e+05</td>\n      <td>6.000000</td>\n      <td>2.000000</td>\n      <td>138000.000000</td>\n      <td>22000.000000</td>\n      <td>14000.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>2.500000e+05</td>\n      <td>10.000000</td>\n      <td>4.000000</td>\n      <td>165000.000000</td>\n      <td>60000.000000</td>\n      <td>25000.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>4.980000e+06</td>\n      <td>45.000000</td>\n      <td>40.000000</td>\n      <td>900000.000000</td>\n      <td>1000000.000000</td>\n      <td>900000.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"       totalyearlycompensation  yearsofexperience  yearsatcompany  \\\ncount             2.776300e+04       27763.000000    27763.000000   \nmean              2.039209e+05           7.171073        2.707162   \nstd               1.330307e+05           5.807141        3.293359   \nmin               1.000000e+04           0.000000        0.000000   \n25%               1.240000e+05           3.000000        0.000000   \n50%               1.800000e+05           6.000000        2.000000   \n75%               2.500000e+05          10.000000        4.000000   \nmax               4.980000e+06          45.000000       40.000000   \n\n          basesalary  stockgrantvalue          bonus  Masters_Degree  \\\ncount   27763.000000     27763.000000   27763.000000    27763.000000   \nmean   136773.799661     47489.200195   19008.752656        0.496848   \nstd     56781.128163     74428.782590   25545.132804        0.499999   \nmin      4000.000000         0.000000       0.000000        0.000000   \n25%    105000.000000         0.000000    3000.000000        0.000000   \n50%    138000.000000     22000.000000   14000.000000        0.000000   \n75%    165000.000000     60000.000000   25000.000000        1.000000   \nmax    900000.000000   1000000.000000  900000.000000        1.000000   \n\n       Bachelors_Degree  Doctorate_Degree    Highschool  Some_College  \\\ncount      27763.000000      27763.000000  27763.000000  27763.000000   \nmean           0.427800          0.055037      0.011166      0.012535   \nstd            0.494769          0.228057      0.105079      0.111256   \nmin            0.000000          0.000000      0.000000      0.000000   \n25%            0.000000          0.000000      0.000000      0.000000   \n50%            0.000000          0.000000      0.000000      0.000000   \n75%            1.000000          0.000000      0.000000      0.000000   \nmax            1.000000          1.000000      1.000000      1.000000   \n\n         Race_Asian    Race_White  Race_Two_Or_More    Race_Black  \\\ncount  27763.000000  27763.000000      27763.000000  27763.000000   \nmean       0.411123      0.276627          0.027591      0.023845   \nstd        0.492046      0.447339          0.163800      0.152568   \nmin        0.000000      0.000000          0.000000      0.000000   \n25%        0.000000      0.000000          0.000000      0.000000   \n50%        0.000000      0.000000          0.000000      0.000000   \n75%        1.000000      1.000000          0.000000      0.000000   \nmax        1.000000      1.000000          1.000000      1.000000   \n\n       Race_Hispanic  \ncount   27763.000000  \nmean        0.038468  \nstd         0.192328  \nmin         0.000000  \n25%         0.000000  \n50%         0.000000  \n75%         0.000000  \nmax         1.000000  "},"exec_count":53}},"pos":54,"start":1659461603512,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461603592,"exec_count":54,"id":"82ef59","input":"# Convert out categorical data into numbers, using one hot encoding\nprint(df['gender'].unique())","kernel":"ds_env","output":{"0":{"name":"stdout","text":"['Male' 'Female' 'Other']\n"}},"pos":55,"start":1659461603587,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461603607,"exec_count":55,"id":"5fa9dd","input":"df['gender'].value_counts()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"Male      22677\nFemale     4909\nOther       177\nName: gender, dtype: int64"},"exec_count":55}},"pos":56,"start":1659461603595,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461603656,"exec_count":56,"id":"32dd64","input":"one_hot_encoded_df = pd.get_dummies(df, columns = ['gender'])\nprint(one_hot_encoded_df)","kernel":"ds_env","output":{"0":{"name":"stdout","text":"           company                         title  totalyearlycompensation  \\\n0      Capital One                Data Scientist                   125000   \n1        Bloomberg             Software Engineer                   170000   \n2           Amazon                Data Scientist                   332000   \n3            Apple             Software Engineer                   240000   \n4         Synopsys             Software Engineer                   310000   \n...            ...                           ...                      ...   \n27758     Facebook  Software Engineering Manager                  1470000   \n27759       Google               Product Manager                  4500000   \n27760       Zapier  Software Engineering Manager                  1605000   \n27761     Facebook  Software Engineering Manager                  2372000   \n27762     Facebook               Product Manager                  4980000   \n\n       yearsofexperience  yearsatcompany  basesalary  stockgrantvalue  \\\n0                    1.0             0.0    121000.0              0.0   \n1                    0.0             0.0    142000.0              0.0   \n2                    1.0             0.0    185000.0          17000.0   \n3                    3.0             3.0    150000.0          75000.0   \n4                   25.0             9.0    210000.0          40000.0   \n...                  ...             ...         ...              ...   \n27758                9.0             7.0    290000.0           1100.0   \n27759               20.0            14.0    450000.0           3700.0   \n27760               16.0             2.0    250000.0           1305.0   \n27761               22.0             2.0    315000.0           1933.0   \n27762               17.0             0.0    380000.0           4400.0   \n\n          bonus  Masters_Degree  Bachelors_Degree  ...  Race_White  \\\n0        4000.0               0                 0  ...           0   \n1       18000.0               1                 0  ...           0   \n2      130000.0               0                 0  ...           0   \n3       15000.0               0                 0  ...           0   \n4       60000.0               0                 0  ...           0   \n...         ...             ...               ...  ...         ...   \n27758   80000.0               0                 1  ...           0   \n27759  350000.0               1                 0  ...           0   \n27760   50000.0               1                 0  ...           1   \n27761  124000.0               1                 0  ...           0   \n27762  200000.0               1                 0  ...           0   \n\n       Race_Two_Or_More  Race_Black  Race_Hispanic  education  state  \\\n0                     0           0              0        PHD  Other   \n1                     0           0              0    Masters     NY   \n2                     0           0              0        PHD     CA   \n3                     0           0              0        PHD     CA   \n4                     0           0              0        PHD     CA   \n...                 ...         ...            ...        ...    ...   \n27758                 0           0              0  Bachelors     CA   \n27759                 0           0              0    Masters     CA   \n27760                 0           0              0    Masters  Other   \n27761                 0           1              0    Masters     CA   \n27762                 0           0              0    Masters     CA   \n\n       in_top_15  gender_Female gender_Male gender_Other  \n0           True              0           1            0  \n1           True              0           1            0  \n2           True              0           1            0  \n3           True              1           0            0  \n4          False              0           1            0  \n...          ...            ...         ...          ...  \n27758       True              0           1            0  \n27759       True              0           1            0  \n27760      False              1           0            0  \n27761       True              0           1            0  \n27762       True              0           1            0  \n\n[27763 rows x 24 columns]\n"}},"pos":57,"start":1659461603620,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461603700,"exec_count":57,"id":"74ae31","input":"df['Female_gender'] = one_hot_encoded_df['gender_Female']\ndf['Male_gender'] = one_hot_encoded_df['gender_Male']\ndf['Other_Gender'] = one_hot_encoded_df['gender_Other']\ndf.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>...</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>education</th>\n      <th>state</th>\n      <th>in_top_15</th>\n      <th>Female_gender</th>\n      <th>Male_gender</th>\n      <th>Other_Gender</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Capital One</td>\n      <td>Data Scientist</td>\n      <td>125000</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>121000.0</td>\n      <td>0.0</td>\n      <td>4000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>PHD</td>\n      <td>Other</td>\n      <td>True</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Bloomberg</td>\n      <td>Software Engineer</td>\n      <td>170000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>142000.0</td>\n      <td>0.0</td>\n      <td>18000.0</td>\n      <td>Male</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Masters</td>\n      <td>NY</td>\n      <td>True</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Amazon</td>\n      <td>Data Scientist</td>\n      <td>332000</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>185000.0</td>\n      <td>17000.0</td>\n      <td>130000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>PHD</td>\n      <td>CA</td>\n      <td>True</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Apple</td>\n      <td>Software Engineer</td>\n      <td>240000</td>\n      <td>3.0</td>\n      <td>3.0</td>\n      <td>150000.0</td>\n      <td>75000.0</td>\n      <td>15000.0</td>\n      <td>Female</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>PHD</td>\n      <td>CA</td>\n      <td>True</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Synopsys</td>\n      <td>Software Engineer</td>\n      <td>310000</td>\n      <td>25.0</td>\n      <td>9.0</td>\n      <td>210000.0</td>\n      <td>40000.0</td>\n      <td>60000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>PHD</td>\n      <td>CA</td>\n      <td>False</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 25 columns</p>\n</div>","text/plain":"       company              title  totalyearlycompensation  yearsofexperience  \\\n0  Capital One     Data Scientist                   125000                1.0   \n1    Bloomberg  Software Engineer                   170000                0.0   \n2       Amazon     Data Scientist                   332000                1.0   \n3        Apple  Software Engineer                   240000                3.0   \n4     Synopsys  Software Engineer                   310000               25.0   \n\n   yearsatcompany  basesalary  stockgrantvalue     bonus  gender  \\\n0             0.0    121000.0              0.0    4000.0    Male   \n1             0.0    142000.0              0.0   18000.0    Male   \n2             0.0    185000.0          17000.0  130000.0    Male   \n3             3.0    150000.0          75000.0   15000.0  Female   \n4             9.0    210000.0          40000.0   60000.0    Male   \n\n   Masters_Degree  ...  Race_White  Race_Two_Or_More  Race_Black  \\\n0               0  ...           0                 0           0   \n1               1  ...           0                 0           0   \n2               0  ...           0                 0           0   \n3               0  ...           0                 0           0   \n4               0  ...           0                 0           0   \n\n   Race_Hispanic  education  state  in_top_15  Female_gender  Male_gender  \\\n0              0        PHD  Other       True              0            1   \n1              0    Masters     NY       True              0            1   \n2              0        PHD     CA       True              0            1   \n3              0        PHD     CA       True              1            0   \n4              0        PHD     CA      False              0            1   \n\n  Other_Gender  \n0            0  \n1            0  \n2            0  \n3            0  \n4            0  \n\n[5 rows x 25 columns]"},"exec_count":57}},"pos":58,"start":1659461603661,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461603711,"exec_count":58,"id":"7d709b","input":"df.columns","kernel":"ds_env","output":{"0":{"data":{"text/plain":"Index(['company', 'title', 'totalyearlycompensation', 'yearsofexperience',\n       'yearsatcompany', 'basesalary', 'stockgrantvalue', 'bonus', 'gender',\n       'Masters_Degree', 'Bachelors_Degree', 'Doctorate_Degree', 'Highschool',\n       'Some_College', 'Race_Asian', 'Race_White', 'Race_Two_Or_More',\n       'Race_Black', 'Race_Hispanic', 'education', 'state', 'in_top_15',\n       'Female_gender', 'Male_gender', 'Other_Gender'],\n      dtype='object')"},"exec_count":58}},"pos":59,"start":1659461603706,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461603721,"exec_count":59,"id":"4a7e3a","input":"print(df['state'].unique())","kernel":"ds_env","output":{"0":{"name":"stdout","text":"['Other' 'NY' 'CA' 'WA']\n"}},"pos":60,"start":1659461603719,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461603734,"exec_count":60,"id":"bce0d0","input":"df['state'].value_counts()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"Other    11907\nCA        9042\nWA        4742\nNY        2072\nName: state, dtype: int64"},"exec_count":60}},"pos":61,"start":1659461603728,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461603762,"exec_count":61,"id":"388600","input":"one_hot_encoded_df = pd.get_dummies(df, columns = ['state'])\nprint(one_hot_encoded_df)","kernel":"ds_env","output":{"0":{"name":"stdout","text":"           company                         title  totalyearlycompensation  \\\n0      Capital One                Data Scientist                   125000   \n1        Bloomberg             Software Engineer                   170000   \n2           Amazon                Data Scientist                   332000   \n3            Apple             Software Engineer                   240000   \n4         Synopsys             Software Engineer                   310000   \n...            ...                           ...                      ...   \n27758     Facebook  Software Engineering Manager                  1470000   \n27759       Google               Product Manager                  4500000   \n27760       Zapier  Software Engineering Manager                  1605000   \n27761     Facebook  Software Engineering Manager                  2372000   \n27762     Facebook               Product Manager                  4980000   \n\n       yearsofexperience  yearsatcompany  basesalary  stockgrantvalue  \\\n0                    1.0             0.0    121000.0              0.0   \n1                    0.0             0.0    142000.0              0.0   \n2                    1.0             0.0    185000.0          17000.0   \n3                    3.0             3.0    150000.0          75000.0   \n4                   25.0             9.0    210000.0          40000.0   \n...                  ...             ...         ...              ...   \n27758                9.0             7.0    290000.0           1100.0   \n27759               20.0            14.0    450000.0           3700.0   \n27760               16.0             2.0    250000.0           1305.0   \n27761               22.0             2.0    315000.0           1933.0   \n27762               17.0             0.0    380000.0           4400.0   \n\n          bonus  gender  Masters_Degree  ...  Race_Hispanic  education  \\\n0        4000.0    Male               0  ...              0        PHD   \n1       18000.0    Male               1  ...              0    Masters   \n2      130000.0    Male               0  ...              0        PHD   \n3       15000.0  Female               0  ...              0        PHD   \n4       60000.0    Male               0  ...              0        PHD   \n...         ...     ...             ...  ...            ...        ...   \n27758   80000.0    Male               0  ...              0  Bachelors   \n27759  350000.0    Male               1  ...              0    Masters   \n27760   50000.0  Female               1  ...              0    Masters   \n27761  124000.0    Male               1  ...              0    Masters   \n27762  200000.0    Male               1  ...              0    Masters   \n\n       in_top_15  Female_gender  Male_gender  Other_Gender  state_CA  \\\n0           True              0            1             0         0   \n1           True              0            1             0         0   \n2           True              0            1             0         1   \n3           True              1            0             0         1   \n4          False              0            1             0         1   \n...          ...            ...          ...           ...       ...   \n27758       True              0            1             0         1   \n27759       True              0            1             0         1   \n27760      False              1            0             0         0   \n27761       True              0            1             0         1   \n27762       True              0            1             0         1   \n\n       state_NY  state_Other state_WA  \n0             0            1        0  \n1             1            0        0  \n2             0            0        0  \n3             0            0        0  \n4             0            0        0  \n...         ...          ...      ...  \n27758         0            0        0  \n27759         0            0        0  \n27760         0            1        0  \n27761         0            0        0  \n27762         0            0        0  \n\n[27763 rows x 28 columns]\n"}},"pos":62,"start":1659461603742,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461603796,"exec_count":62,"id":"a861ba","input":"df['state_NY'] = one_hot_encoded_df['state_NY']\ndf['state_other'] = one_hot_encoded_df['state_Other']\ndf['state_WA'] = one_hot_encoded_df['state_WA']\ndf.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>...</th>\n      <th>Race_Hispanic</th>\n      <th>education</th>\n      <th>state</th>\n      <th>in_top_15</th>\n      <th>Female_gender</th>\n      <th>Male_gender</th>\n      <th>Other_Gender</th>\n      <th>state_NY</th>\n      <th>state_other</th>\n      <th>state_WA</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Capital One</td>\n      <td>Data Scientist</td>\n      <td>125000</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>121000.0</td>\n      <td>0.0</td>\n      <td>4000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>PHD</td>\n      <td>Other</td>\n      <td>True</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Bloomberg</td>\n      <td>Software Engineer</td>\n      <td>170000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>142000.0</td>\n      <td>0.0</td>\n      <td>18000.0</td>\n      <td>Male</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>Masters</td>\n      <td>NY</td>\n      <td>True</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Amazon</td>\n      <td>Data Scientist</td>\n      <td>332000</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>185000.0</td>\n      <td>17000.0</td>\n      <td>130000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>PHD</td>\n      <td>CA</td>\n      <td>True</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Apple</td>\n      <td>Software Engineer</td>\n      <td>240000</td>\n      <td>3.0</td>\n      <td>3.0</td>\n      <td>150000.0</td>\n      <td>75000.0</td>\n      <td>15000.0</td>\n      <td>Female</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>PHD</td>\n      <td>CA</td>\n      <td>True</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Synopsys</td>\n      <td>Software Engineer</td>\n      <td>310000</td>\n      <td>25.0</td>\n      <td>9.0</td>\n      <td>210000.0</td>\n      <td>40000.0</td>\n      <td>60000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>PHD</td>\n      <td>CA</td>\n      <td>False</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 28 columns</p>\n</div>","text/plain":"       company              title  totalyearlycompensation  yearsofexperience  \\\n0  Capital One     Data Scientist                   125000                1.0   \n1    Bloomberg  Software Engineer                   170000                0.0   \n2       Amazon     Data Scientist                   332000                1.0   \n3        Apple  Software Engineer                   240000                3.0   \n4     Synopsys  Software Engineer                   310000               25.0   \n\n   yearsatcompany  basesalary  stockgrantvalue     bonus  gender  \\\n0             0.0    121000.0              0.0    4000.0    Male   \n1             0.0    142000.0              0.0   18000.0    Male   \n2             0.0    185000.0          17000.0  130000.0    Male   \n3             3.0    150000.0          75000.0   15000.0  Female   \n4             9.0    210000.0          40000.0   60000.0    Male   \n\n   Masters_Degree  ...  Race_Hispanic  education  state  in_top_15  \\\n0               0  ...              0        PHD  Other       True   \n1               1  ...              0    Masters     NY       True   \n2               0  ...              0        PHD     CA       True   \n3               0  ...              0        PHD     CA       True   \n4               0  ...              0        PHD     CA      False   \n\n   Female_gender  Male_gender  Other_Gender  state_NY  state_other state_WA  \n0              0            1             0         0            1        0  \n1              0            1             0         1            0        0  \n2              0            1             0         0            0        0  \n3              1            0             0         0            0        0  \n4              0            1             0         0            0        0  \n\n[5 rows x 28 columns]"},"exec_count":62}},"pos":63,"start":1659461603769,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461603821,"exec_count":63,"id":"5d64b0","input":"print(df['title'].unique())","kernel":"ds_env","output":{"0":{"name":"stdout","text":"['Data Scientist' 'Software Engineer' 'Hardware Engineer'\n 'Product Manager' 'Solution Architect' 'Software Engineering Manager'\n 'Product Designer' 'Mechanical Engineer' 'Human Resources'\n 'Business Analyst' 'Marketing' 'Sales' 'Technical Program Manager'\n 'Management Consultant' 'Recruiter']\n"}},"pos":64,"start":1659461603803,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461603850,"exec_count":64,"id":"7f3ef2","input":"df['title'].value_counts()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"Software Engineer               17648\nProduct Manager                  1998\nSoftware Engineering Manager     1362\nData Scientist                   1264\nHardware Engineer                1118\nTechnical Program Manager         763\nProduct Designer                  735\nManagement Consultant             546\nSolution Architect                501\nBusiness Analyst                  487\nMarketing                         390\nMechanical Engineer               286\nSales                             245\nRecruiter                         235\nHuman Resources                   185\nName: title, dtype: int64"},"exec_count":64}},"pos":65,"start":1659461603830,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461603896,"exec_count":65,"id":"ea6cbf","input":"one_hot_encoded_df = pd.get_dummies(df, columns = ['title'])\nprint(one_hot_encoded_df)","kernel":"ds_env","output":{"0":{"name":"stdout","text":"           company  totalyearlycompensation  yearsofexperience  \\\n0      Capital One                   125000                1.0   \n1        Bloomberg                   170000                0.0   \n2           Amazon                   332000                1.0   \n3            Apple                   240000                3.0   \n4         Synopsys                   310000               25.0   \n...            ...                      ...                ...   \n27758     Facebook                  1470000                9.0   \n27759       Google                  4500000               20.0   \n27760       Zapier                  1605000               16.0   \n27761     Facebook                  2372000               22.0   \n27762     Facebook                  4980000               17.0   \n\n       yearsatcompany  basesalary  stockgrantvalue     bonus  gender  \\\n0                 0.0    121000.0              0.0    4000.0    Male   \n1                 0.0    142000.0              0.0   18000.0    Male   \n2                 0.0    185000.0          17000.0  130000.0    Male   \n3                 3.0    150000.0          75000.0   15000.0  Female   \n4                 9.0    210000.0          40000.0   60000.0    Male   \n...               ...         ...              ...       ...     ...   \n27758             7.0    290000.0           1100.0   80000.0    Male   \n27759            14.0    450000.0           3700.0  350000.0    Male   \n27760             2.0    250000.0           1305.0   50000.0  Female   \n27761             2.0    315000.0           1933.0  124000.0    Male   \n27762             0.0    380000.0           4400.0  200000.0    Male   \n\n       Masters_Degree  Bachelors_Degree  ...  title_Marketing  \\\n0                   0                 0  ...                0   \n1                   1                 0  ...                0   \n2                   0                 0  ...                0   \n3                   0                 0  ...                0   \n4                   0                 0  ...                0   \n...               ...               ...  ...              ...   \n27758               0                 1  ...                0   \n27759               1                 0  ...                0   \n27760               1                 0  ...                0   \n27761               1                 0  ...                0   \n27762               1                 0  ...                0   \n\n       title_Mechanical Engineer  title_Product Designer  \\\n0                              0                       0   \n1                              0                       0   \n2                              0                       0   \n3                              0                       0   \n4                              0                       0   \n...                          ...                     ...   \n27758                          0                       0   \n27759                          0                       0   \n27760                          0                       0   \n27761                          0                       0   \n27762                          0                       0   \n\n       title_Product Manager  title_Recruiter  title_Sales  \\\n0                          0                0            0   \n1                          0                0            0   \n2                          0                0            0   \n3                          0                0            0   \n4                          0                0            0   \n...                      ...              ...          ...   \n27758                      0                0            0   \n27759                      1                0            0   \n27760                      0                0            0   \n27761                      0                0            0   \n27762                      1                0            0   \n\n       title_Software Engineer  title_Software Engineering Manager  \\\n0                            0                                   0   \n1                            1                                   0   \n2                            0                                   0   \n3                            1                                   0   \n4                            1                                   0   \n...                        ...                                 ...   \n27758                        0                                   1   \n27759                        0                                   0   \n27760                        0                                   1   \n27761                        0                                   1   \n27762                        0                                   0   \n\n      title_Solution Architect title_Technical Program Manager  \n0                            0                               0  \n1                            0                               0  \n2                            0                               0  \n3                            0                               0  \n4                            0                               0  \n...                        ...                             ...  \n27758                        0                               0  \n27759                        0                               0  \n27760                        0                               0  \n27761                        0                               0  \n27762                        0                               0  \n\n[27763 rows x 42 columns]\n"}},"pos":66,"start":1659461603855,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461603954,"exec_count":66,"id":"b9bd60","input":"df['Marketing_title'] = one_hot_encoded_df['title_Marketing']\ndf['Mechanical Engineer_title'] = one_hot_encoded_df['title_Mechanical Engineer']\ndf['Product Designer_title'] = one_hot_encoded_df['title_Product Designer']\ndf['Recruiter_title'] = one_hot_encoded_df['title_Recruiter']\ndf['Sales_title'] = one_hot_encoded_df['title_Sales']\ndf['Software Engineer_title'] = one_hot_encoded_df['title_Software Engineer']\ndf['Software Engineering Manager_title'] = one_hot_encoded_df['title_Software Engineering Manager']\ndf['Solution Architect_title'] = one_hot_encoded_df['title_Solution Architect']\ndf['Technical Program Manager_title'] = one_hot_encoded_df['title_Technical Program Manager']\ndf['Human Resources_title'] = one_hot_encoded_df['title_Human Resources']\ndf['Product Manager_title'] = one_hot_encoded_df['title_Product Manager']\ndf['Business Analyst_title'] = one_hot_encoded_df['title_Business Analyst']\ndf['Management Consultant_title'] = one_hot_encoded_df['title_Management Consultant']\ndf['Data Scientist_title'] = one_hot_encoded_df['title_Data Scientist']\ndf['Hardware Engineer_title'] = one_hot_encoded_df['title_Hardware Engineer']\ndf.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>...</th>\n      <th>Software Engineer_title</th>\n      <th>Software Engineering Manager_title</th>\n      <th>Solution Architect_title</th>\n      <th>Technical Program Manager_title</th>\n      <th>Human Resources_title</th>\n      <th>Product Manager_title</th>\n      <th>Business Analyst_title</th>\n      <th>Management Consultant_title</th>\n      <th>Data Scientist_title</th>\n      <th>Hardware Engineer_title</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Capital One</td>\n      <td>Data Scientist</td>\n      <td>125000</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>121000.0</td>\n      <td>0.0</td>\n      <td>4000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Bloomberg</td>\n      <td>Software Engineer</td>\n      <td>170000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>142000.0</td>\n      <td>0.0</td>\n      <td>18000.0</td>\n      <td>Male</td>\n      <td>1</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Amazon</td>\n      <td>Data Scientist</td>\n      <td>332000</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>185000.0</td>\n      <td>17000.0</td>\n      <td>130000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Apple</td>\n      <td>Software Engineer</td>\n      <td>240000</td>\n      <td>3.0</td>\n      <td>3.0</td>\n      <td>150000.0</td>\n      <td>75000.0</td>\n      <td>15000.0</td>\n      <td>Female</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Synopsys</td>\n      <td>Software Engineer</td>\n      <td>310000</td>\n      <td>25.0</td>\n      <td>9.0</td>\n      <td>210000.0</td>\n      <td>40000.0</td>\n      <td>60000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 43 columns</p>\n</div>","text/plain":"       company              title  totalyearlycompensation  yearsofexperience  \\\n0  Capital One     Data Scientist                   125000                1.0   \n1    Bloomberg  Software Engineer                   170000                0.0   \n2       Amazon     Data Scientist                   332000                1.0   \n3        Apple  Software Engineer                   240000                3.0   \n4     Synopsys  Software Engineer                   310000               25.0   \n\n   yearsatcompany  basesalary  stockgrantvalue     bonus  gender  \\\n0             0.0    121000.0              0.0    4000.0    Male   \n1             0.0    142000.0              0.0   18000.0    Male   \n2             0.0    185000.0          17000.0  130000.0    Male   \n3             3.0    150000.0          75000.0   15000.0  Female   \n4             9.0    210000.0          40000.0   60000.0    Male   \n\n   Masters_Degree  ...  Software Engineer_title  \\\n0               0  ...                        0   \n1               1  ...                        1   \n2               0  ...                        0   \n3               0  ...                        1   \n4               0  ...                        1   \n\n   Software Engineering Manager_title  Solution Architect_title  \\\n0                                   0                         0   \n1                                   0                         0   \n2                                   0                         0   \n3                                   0                         0   \n4                                   0                         0   \n\n   Technical Program Manager_title  Human Resources_title  \\\n0                                0                      0   \n1                                0                      0   \n2                                0                      0   \n3                                0                      0   \n4                                0                      0   \n\n   Product Manager_title  Business Analyst_title  Management Consultant_title  \\\n0                      0                       0                            0   \n1                      0                       0                            0   \n2                      0                       0                            0   \n3                      0                       0                            0   \n4                      0                       0                            0   \n\n   Data Scientist_title Hardware Engineer_title  \n0                     1                       0  \n1                     0                       0  \n2                     1                       0  \n3                     0                       0  \n4                     0                       0  \n\n[5 rows x 43 columns]"},"exec_count":66}},"pos":67,"start":1659461603906,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461604010,"exec_count":67,"id":"52e8c4","input":"df.columns","kernel":"ds_env","output":{"0":{"data":{"text/plain":"Index(['company', 'title', 'totalyearlycompensation', 'yearsofexperience',\n       'yearsatcompany', 'basesalary', 'stockgrantvalue', 'bonus', 'gender',\n       'Masters_Degree', 'Bachelors_Degree', 'Doctorate_Degree', 'Highschool',\n       'Some_College', 'Race_Asian', 'Race_White', 'Race_Two_Or_More',\n       'Race_Black', 'Race_Hispanic', 'education', 'state', 'in_top_15',\n       'Female_gender', 'Male_gender', 'Other_Gender', 'state_NY',\n       'state_other', 'state_WA', 'Marketing_title',\n       'Mechanical Engineer_title', 'Product Designer_title',\n       'Recruiter_title', 'Sales_title', 'Software Engineer_title',\n       'Software Engineering Manager_title', 'Solution Architect_title',\n       'Technical Program Manager_title', 'Human Resources_title',\n       'Product Manager_title', 'Business Analyst_title',\n       'Management Consultant_title', 'Data Scientist_title',\n       'Hardware Engineer_title'],\n      dtype='object')"},"exec_count":67}},"pos":68,"start":1659461603970,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461604066,"exec_count":68,"id":"896766","input":"df = df.drop(['gender'], axis = 1)","kernel":"ds_env","pos":69,"start":1659461604036,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461604105,"exec_count":69,"id":"2d1f04","input":"df = df.drop(['state'], axis = 1)","kernel":"ds_env","pos":70,"start":1659461604086,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461604128,"exec_count":70,"id":"e2e3f1","input":"df = df.drop(['title'], axis = 1)","kernel":"ds_env","pos":71,"start":1659461604117,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461604151,"exec_count":71,"id":"616d79","input":"df = df.drop(['company'], axis = 1)","kernel":"ds_env","pos":72,"start":1659461604148,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461604165,"exec_count":72,"id":"40eb6e","input":"df = df.drop(['education'], axis = 1)","kernel":"ds_env","pos":73,"start":1659461604161,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461604187,"exec_count":73,"id":"416902","input":"df.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>Masters_Degree</th>\n      <th>Bachelors_Degree</th>\n      <th>Doctorate_Degree</th>\n      <th>Highschool</th>\n      <th>...</th>\n      <th>Software Engineer_title</th>\n      <th>Software Engineering Manager_title</th>\n      <th>Solution Architect_title</th>\n      <th>Technical Program Manager_title</th>\n      <th>Human Resources_title</th>\n      <th>Product Manager_title</th>\n      <th>Business Analyst_title</th>\n      <th>Management Consultant_title</th>\n      <th>Data Scientist_title</th>\n      <th>Hardware Engineer_title</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>125000</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>121000.0</td>\n      <td>0.0</td>\n      <td>4000.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>170000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>142000.0</td>\n      <td>0.0</td>\n      <td>18000.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>332000</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>185000.0</td>\n      <td>17000.0</td>\n      <td>130000.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>240000</td>\n      <td>3.0</td>\n      <td>3.0</td>\n      <td>150000.0</td>\n      <td>75000.0</td>\n      <td>15000.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>310000</td>\n      <td>25.0</td>\n      <td>9.0</td>\n      <td>210000.0</td>\n      <td>40000.0</td>\n      <td>60000.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 38 columns</p>\n</div>","text/plain":"   totalyearlycompensation  yearsofexperience  yearsatcompany  basesalary  \\\n0                   125000                1.0             0.0    121000.0   \n1                   170000                0.0             0.0    142000.0   \n2                   332000                1.0             0.0    185000.0   \n3                   240000                3.0             3.0    150000.0   \n4                   310000               25.0             9.0    210000.0   \n\n   stockgrantvalue     bonus  Masters_Degree  Bachelors_Degree  \\\n0              0.0    4000.0               0                 0   \n1              0.0   18000.0               1                 0   \n2          17000.0  130000.0               0                 0   \n3          75000.0   15000.0               0                 0   \n4          40000.0   60000.0               0                 0   \n\n   Doctorate_Degree  Highschool  ...  Software Engineer_title  \\\n0                 1           0  ...                        0   \n1                 0           0  ...                        1   \n2                 1           0  ...                        0   \n3                 1           0  ...                        1   \n4                 1           0  ...                        1   \n\n   Software Engineering Manager_title  Solution Architect_title  \\\n0                                   0                         0   \n1                                   0                         0   \n2                                   0                         0   \n3                                   0                         0   \n4                                   0                         0   \n\n   Technical Program Manager_title  Human Resources_title  \\\n0                                0                      0   \n1                                0                      0   \n2                                0                      0   \n3                                0                      0   \n4                                0                      0   \n\n   Product Manager_title  Business Analyst_title  Management Consultant_title  \\\n0                      0                       0                            0   \n1                      0                       0                            0   \n2                      0                       0                            0   \n3                      0                       0                            0   \n4                      0                       0                            0   \n\n   Data Scientist_title  Hardware Engineer_title  \n0                     1                        0  \n1                     0                        0  \n2                     1                        0  \n3                     0                        0  \n4                     0                        0  \n\n[5 rows x 38 columns]"},"exec_count":73}},"pos":74,"start":1659461604171,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461604201,"exec_count":74,"id":"f541fc","input":"#Splitting the data","kernel":"ds_env","pos":75,"start":1659461604199,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461604628,"exec_count":75,"id":"e65104","input":"import sklearn\nfrom sklearn.model_selection import train_test_split\nx = df.loc[:, df.columns !=  'totalyearlycompensation']\ny = df.totalyearlycompensation","kernel":"ds_env","pos":76,"start":1659461604206,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461604651,"exec_count":76,"id":"7ff688","input":"x_train, x_test, y_train, y_test = train_test_split(x, y, random_state=42)","kernel":"ds_env","pos":77,"start":1659461604637,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461604675,"exec_count":77,"id":"90875b","input":"#Stochastic Gradient Descent Regression\nfrom sklearn.linear_model import SGDRegressor \nclf = SGDRegressor()","kernel":"ds_env","pos":78,"start":1659461604656,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461605105,"exec_count":78,"id":"77b3f5","input":"#fit your model\nclf.fit(x_train, y_train)","kernel":"ds_env","output":{"0":{"data":{"text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SGDRegressor()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SGDRegressor</label><div class=\"sk-toggleable__content\"><pre>SGDRegressor()</pre></div></div></div></div></div>","text/plain":"SGDRegressor()"},"exec_count":78}},"pos":79,"start":1659461604679,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461605126,"exec_count":79,"id":"53dac8","input":"#create some predictions on your testing inputs and set them equal to y_hat.\ny_hat = clf.predict(x_test)\ny_hat","kernel":"ds_env","output":{"0":{"data":{"text/plain":"array([-2.11654108e+17, -4.56791235e+17,  2.54371227e+17, ...,\n       -4.65135950e+17, -4.18260914e+17,  5.35350660e+17])"},"exec_count":79}},"pos":80,"start":1659461605117,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461605136,"exec_count":80,"id":"600bda","input":"#Compute your MSE.\ntotal_squared_error = (np.sum((y_test - y_hat)**2)) #get the sum of all the errors (error = what we want (y_test) - what we predicted (y_hat))\nmean_squared_error = total_squared_error/len(y_test) #divide this by how many rows/observations we have\nprint(mean_squared_error)","kernel":"ds_env","output":{"0":{"name":"stdout","text":"3.247404454289407e+36\n"}},"pos":81,"start":1659461605131,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461605149,"exec_count":81,"id":"1f410a","input":"clf.score(x_test, y_test)","kernel":"ds_env","output":{"0":{"data":{"text/plain":"-1.613046133159533e+26"},"exec_count":81}},"pos":82,"start":1659461605144,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461606332,"exec_count":82,"id":"c8fbc9","input":"#Plot Findings\nimport matplotlib.pyplot as plt\nplt.figure(figsize=(10,5))\nplt.plot(y_test, y_test, '--')\n#plt.scatter(y_test,y_test, c='green')\nplt.scatter(y_test, y_hat, c='orange')  \nplt.xlabel('x', fontsize = 20) \nplt.ylabel('y', fontsize = 20)\nplt.title('Predicted Results compared to Actual Results')\nplt.grid('on')\nplt.show()","kernel":"ds_env","output":{"0":{"data":{"image/png":"b70f34b1d832c49655abd66faab5422b028ca9cd","text/plain":"<Figure size 720x360 with 1 Axes>"},"metadata":{"needs_background":"light"}}},"pos":83,"start":1659461605152,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461606353,"exec_count":83,"id":"894fed","input":"#Nearest Neighbors Regression\nfrom sklearn.neighbors import KNeighborsRegressor\nneigh = KNeighborsRegressor()","kernel":"ds_env","pos":84,"start":1659461606341,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461606378,"exec_count":84,"id":"02698a","input":"neigh.fit(x_train, y_train)","kernel":"ds_env","output":{"0":{"data":{"text/html":"<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsRegressor()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsRegressor</label><div class=\"sk-toggleable__content\"><pre>KNeighborsRegressor()</pre></div></div></div></div></div>","text/plain":"KNeighborsRegressor()"},"exec_count":84}},"pos":85,"start":1659461606362,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461607099,"exec_count":85,"id":"05f375","input":"y_hat = neigh.predict(x_test)\ny_hat","kernel":"ds_env","output":{"0":{"data":{"text/plain":"array([ 29400., 110000., 224200., ...,  83200., 192600., 245800.])"},"exec_count":85}},"pos":86,"start":1659461606384,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461607120,"exec_count":86,"id":"11e1d6","input":"np.array(y_test) #these are what actually happened for our x_test inputs.","kernel":"ds_env","output":{"0":{"data":{"text/plain":"array([ 29000, 110000, 225000, ...,  85000, 192000, 246000])"},"exec_count":86}},"pos":87,"start":1659461607115,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461607134,"exec_count":87,"id":"02a132","input":"#Find MSE\ntotal_squared_error = (np.sum((y_test - y_hat)**2)) #get the sum of all the errors (error = what we want (y_test) - what we predicted (y_hat))\nmean_squared_error = total_squared_error/len(y_test) #divide this by how many rows/observations we have \nprint(mean_squared_error)","kernel":"ds_env","output":{"0":{"name":"stdout","text":"3225660521.5386834\n"}},"pos":88,"start":1659461607130,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461607739,"exec_count":88,"id":"ead0ac","input":"neigh.score(x_test, y_test)","kernel":"ds_env","output":{"0":{"data":{"text/plain":"0.8397754482266399"},"exec_count":88}},"pos":89,"start":1659461607141,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461607991,"exec_count":89,"id":"035659","input":"#Plot Findings\nplt.figure(figsize=(10,5))\nplt.plot(y_test, y_test, '--')\n#plt.scatter(y_test,y_test, c='green')\nplt.scatter(y_test, y_hat, c='orange')  \nplt.xlabel('x', fontsize = 20) \nplt.ylabel('y', fontsize = 20)\nplt.title('Predicted Results compared to Actual Results')\nplt.grid('on')\nplt.show()","kernel":"ds_env","output":{"0":{"data":{"image/png":"a1d5cfbc4f38b684ad0a04953fc1be67c438315d","text/plain":"<Figure size 720x360 with 1 Axes>"},"metadata":{"needs_background":"light"}}},"pos":90,"start":1659461607748,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461609018,"exec_count":90,"id":"bb2731","input":"#Decision Trees Regression\nfrom sklearn import tree\nfrom sklearn.model_selection import GridSearchCV\nparameters = {'splitter':('best', 'random'), 'max_depth':[3, 5, 7]}\nclf = tree.DecisionTreeRegressor()\ngrid = GridSearchCV(clf, parameters)\ngrid.fit(x_train, y_train)","kernel":"ds_env","output":{"0":{"data":{"text/html":"<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(estimator=DecisionTreeRegressor(),\n             param_grid={&#x27;max_depth&#x27;: [3, 5, 7],\n                         &#x27;splitter&#x27;: (&#x27;best&#x27;, &#x27;random&#x27;)})</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(estimator=DecisionTreeRegressor(),\n             param_grid={&#x27;max_depth&#x27;: [3, 5, 7],\n                         &#x27;splitter&#x27;: (&#x27;best&#x27;, &#x27;random&#x27;)})</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" ><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: DecisionTreeRegressor</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeRegressor()</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" ><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeRegressor</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeRegressor()</pre></div></div></div></div></div></div></div></div></div></div>","text/plain":"GridSearchCV(estimator=DecisionTreeRegressor(),\n             param_grid={'max_depth': [3, 5, 7],\n                         'splitter': ('best', 'random')})"},"exec_count":90}},"pos":91,"start":1659461608007,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461609030,"exec_count":91,"id":"52c42e","input":"grid.best_params_","kernel":"ds_env","output":{"0":{"data":{"text/plain":"{'max_depth': 7, 'splitter': 'best'}"},"exec_count":91}},"pos":92,"start":1659461609028,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461609041,"exec_count":92,"id":"c19787","input":"clf_pred = grid.predict(x_test)","kernel":"ds_env","pos":93,"start":1659461609034,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461609206,"exec_count":93,"id":"ea6b8f","input":"clf.fit(x_train, y_train)","kernel":"ds_env","output":{"0":{"data":{"text/html":"<style>#sk-container-id-4 {color: black;background-color: white;}#sk-container-id-4 pre{padding: 0;}#sk-container-id-4 div.sk-toggleable {background-color: white;}#sk-container-id-4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-4 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-4 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-4 div.sk-item {position: relative;z-index: 1;}#sk-container-id-4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-4 div.sk-item::before, #sk-container-id-4 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-4 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-4 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-4 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-4 div.sk-label-container {text-align: center;}#sk-container-id-4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-4 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeRegressor()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-6\" type=\"checkbox\" checked><label for=\"sk-estimator-id-6\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeRegressor</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeRegressor()</pre></div></div></div></div></div>","text/plain":"DecisionTreeRegressor()"},"exec_count":93}},"pos":94,"start":1659461609046,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461609217,"exec_count":94,"id":"fcacb1","input":"#Find MSE\ntotal_squared_error = (np.sum((y_test - y_hat)**2)) #get the sum of all the errors (error = what we want (y_test) - what we predicted (y_hat))\nmean_squared_error = total_squared_error/len(y_test) #divide this by how many rows/observations we have \nprint(mean_squared_error)","kernel":"ds_env","output":{"0":{"name":"stdout","text":"3225660521.5386834\n"}},"pos":95,"start":1659461609212,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461609232,"exec_count":95,"id":"f145a0","input":"clf.score(x_test, y_test)","kernel":"ds_env","output":{"0":{"data":{"text/plain":"0.8164282153192235"},"exec_count":95}},"pos":96,"start":1659461609224,"state":"done","type":"cell"}
{"cell_type":"code","end":1659461609447,"exec_count":96,"id":"c24d2e","input":"#Plot Findings\nplt.figure(figsize=(10,5))\nplt.plot(y_test, y_test, '--')\n#plt.scatter(y_test,y_test, c='green')\nplt.scatter(y_test, y_hat, c='orange')\nplt.xlabel('x', fontsize = 20)\nplt.ylabel('y', fontsize = 20)\nplt.title('Predicted Results compared to Actual Results')\nplt.grid('on')\nplt.show()","kernel":"ds_env","output":{"0":{"data":{"image/png":"a1d5cfbc4f38b684ad0a04953fc1be67c438315d","text/plain":"<Figure size 720x360 with 1 Axes>"},"metadata":{"needs_background":"light"}}},"pos":97,"start":1659461609235,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"959725","input":"Our dataset is from: [https://www.kaggle.com/datasets/jackogozaly/data\\-science\\-and\\-stem\\-salaries?datasetId=1640011&sortBy=voteCount](https://www.kaggle.com/datasets/jackogozaly/data-science-and-stem-salaries?datasetId=1640011&sortBy=voteCount)\n","pos":2,"type":"cell"}
{"cell_type":"markdown","id":"c1323b","input":"**Exploring Our Data**\n\n","pos":35,"type":"cell"}
{"id":"b4d30e","input":"","pos":18.5,"type":"cell"}
{"id":0,"time":1659471628108,"type":"user"}
{"last_load":1659461510519,"type":"file"}