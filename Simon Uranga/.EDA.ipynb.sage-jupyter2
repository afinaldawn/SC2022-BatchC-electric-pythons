{"backend_state":"running","connection_file":"/projects/0bcf82e6-7441-4432-a339-19b67c22cc5c/.local/share/jupyter/runtime/kernel-24bdc170-44cd-458d-8a8a-bce67cc3cf45.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1658510356624,"exec_count":3,"id":"9a24ec","input":"import pandas as pd\n\nimport numpy as np","kernel":"ds_env","pos":0,"start":1658510356229,"state":"done","type":"cell"}
{"cell_type":"code","end":1658510357219,"exec_count":4,"id":"656ecc","input":"df = pd.read_csv(\"Levels_Fyi_Salary_Data.csv\")","kernel":"ds_env","pos":2,"start":1658510356640,"state":"done","type":"cell"}
{"cell_type":"code","end":1658510357269,"exec_count":5,"id":"edebb6","input":"df.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>timestamp</th>\n      <th>company</th>\n      <th>level</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>location</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>tag</th>\n      <th>basesalary</th>\n      <th>...</th>\n      <th>Doctorate_Degree</th>\n      <th>Highschool</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>Race</th>\n      <th>Education</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>6/7/2017 11:33:27</td>\n      <td>Oracle</td>\n      <td>L3</td>\n      <td>Product Manager</td>\n      <td>127000</td>\n      <td>Redwood City, CA</td>\n      <td>1.5</td>\n      <td>1.5</td>\n      <td>NaN</td>\n      <td>107000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>6/10/2017 17:11:29</td>\n      <td>eBay</td>\n      <td>SE 2</td>\n      <td>Software Engineer</td>\n      <td>100000</td>\n      <td>San Francisco, CA</td>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>6/11/2017 14:53:57</td>\n      <td>Amazon</td>\n      <td>L7</td>\n      <td>Product Manager</td>\n      <td>310000</td>\n      <td>Seattle, WA</td>\n      <td>8.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>155000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>6/17/2017 0:23:14</td>\n      <td>Apple</td>\n      <td>M1</td>\n      <td>Software Engineering Manager</td>\n      <td>372000</td>\n      <td>Sunnyvale, CA</td>\n      <td>7.0</td>\n      <td>5.0</td>\n      <td>NaN</td>\n      <td>157000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>6/20/2017 10:58:51</td>\n      <td>Microsoft</td>\n      <td>60</td>\n      <td>Software Engineer</td>\n      <td>157000</td>\n      <td>Mountain View, CA</td>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 29 columns</p>\n</div>","text/plain":"            timestamp    company level                         title  \\\n0   6/7/2017 11:33:27     Oracle    L3               Product Manager   \n1  6/10/2017 17:11:29       eBay  SE 2             Software Engineer   \n2  6/11/2017 14:53:57     Amazon    L7               Product Manager   \n3   6/17/2017 0:23:14      Apple    M1  Software Engineering Manager   \n4  6/20/2017 10:58:51  Microsoft    60             Software Engineer   \n\n   totalyearlycompensation           location  yearsofexperience  \\\n0                   127000   Redwood City, CA                1.5   \n1                   100000  San Francisco, CA                5.0   \n2                   310000        Seattle, WA                8.0   \n3                   372000      Sunnyvale, CA                7.0   \n4                   157000  Mountain View, CA                5.0   \n\n   yearsatcompany  tag  basesalary  ...  Doctorate_Degree  Highschool  \\\n0             1.5  NaN    107000.0  ...                 0           0   \n1             3.0  NaN         0.0  ...                 0           0   \n2             0.0  NaN    155000.0  ...                 0           0   \n3             5.0  NaN    157000.0  ...                 0           0   \n4             3.0  NaN         0.0  ...                 0           0   \n\n  Some_College Race_Asian  Race_White  Race_Two_Or_More  Race_Black  \\\n0            0          0           0                 0           0   \n1            0          0           0                 0           0   \n2            0          0           0                 0           0   \n3            0          0           0                 0           0   \n4            0          0           0                 0           0   \n\n   Race_Hispanic  Race  Education  \n0              0   NaN        NaN  \n1              0   NaN        NaN  \n2              0   NaN        NaN  \n3              0   NaN        NaN  \n4              0   NaN        NaN  \n\n[5 rows x 29 columns]"},"exec_count":5}},"pos":3,"start":1658510357234,"state":"done","type":"cell"}
{"cell_type":"code","end":1658510357281,"exec_count":6,"id":"b28698","input":"df.columns","kernel":"ds_env","output":{"0":{"data":{"text/plain":"Index(['timestamp', 'company', 'level', 'title', 'totalyearlycompensation',\n       'location', 'yearsofexperience', 'yearsatcompany', 'tag', 'basesalary',\n       'stockgrantvalue', 'bonus', 'gender', 'otherdetails', 'cityid', 'dmaid',\n       'rowNumber', 'Masters_Degree', 'Bachelors_Degree', 'Doctorate_Degree',\n       'Highschool', 'Some_College', 'Race_Asian', 'Race_White',\n       'Race_Two_Or_More', 'Race_Black', 'Race_Hispanic', 'Race', 'Education'],\n      dtype='object')"},"exec_count":6}},"pos":4,"start":1658510357273,"state":"done","type":"cell"}
{"cell_type":"code","end":1658510357300,"exec_count":7,"id":"997642","input":"df['company'].isnull().values.any()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"True"},"exec_count":7}},"pos":5,"start":1658510357297,"state":"done","type":"cell"}
{"cell_type":"code","end":1658510369590,"exec_count":9,"id":"2a8da6","input":"import plotly.express as px","kernel":"ds_env","pos":48,"start":1658510369432,"state":"done","type":"cell"}
{"cell_type":"code","end":1658510387367,"exec_count":11,"id":"e4f2ab","input":"fig = px.histogram(df, x='title', y='basesalary', title='Title and Sum of Base Salaries Histogram')\nfig.show()","kernel":"ds_env","output":{"0":{"data":{"iframe":"9d24237e5dff8914c226b5fc1a61c607ab3c32f0"}}},"pos":50,"start":1658510386741,"state":"done","type":"cell"}
{"cell_type":"code","end":1658512235055,"exec_count":18,"id":"bfc76f","input":"bf = df[df['company'] == 'Google']\nbf.groupby('gender')['totalyearlycompensation'].mean()\n","kernel":"ds_env","output":{"0":{"data":{"text/plain":"gender\nFemale    255969.635628\nMale      282906.237260\nOther     284193.548387\nName: totalyearlycompensation, dtype: float64"},"exec_count":18}},"pos":56,"start":1658512235026,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"da6577","input":"","pos":47,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"f4b2ae","input":"","pos":49,"type":"cell"}
{"cell_type":"code","exec_count":10,"id":"ff54f3","input":"df = df.drop([])","pos":39,"type":"cell"}
{"cell_type":"code","exec_count":104,"id":"942118","input":"df['title'].isnull().values.any()","output":{"0":{"data":{"text/plain":"False"},"exec_count":104,"output_type":"execute_result"}},"pos":9,"type":"cell"}
{"cell_type":"code","exec_count":105,"id":"1824b6","input":"df['totalyearlycompensation'].isnull().values.any()","output":{"0":{"data":{"text/plain":"False"},"exec_count":105,"output_type":"execute_result"}},"pos":10,"type":"cell"}
{"cell_type":"code","exec_count":106,"id":"bec785","input":"df['location'].isnull().values.any()","output":{"0":{"data":{"text/plain":"False"},"exec_count":106,"output_type":"execute_result"}},"pos":11,"type":"cell"}
{"cell_type":"code","exec_count":107,"id":"83aab0","input":"df['yearsofexperience'].isnull().values.any()","output":{"0":{"data":{"text/plain":"False"},"exec_count":107,"output_type":"execute_result"}},"pos":12,"type":"cell"}
{"cell_type":"code","exec_count":108,"id":"069e49","input":"df['yearsatcompany'].isnull().values.any()","output":{"0":{"data":{"text/plain":"False"},"exec_count":108,"output_type":"execute_result"}},"pos":13,"type":"cell"}
{"cell_type":"code","exec_count":109,"id":"559736","input":"df['tag'].isnull().values.any()","output":{"0":{"data":{"text/plain":"True"},"exec_count":109,"output_type":"execute_result"}},"pos":14,"type":"cell"}
{"cell_type":"code","exec_count":110,"id":"c1c967","input":"df['tag'].isnull().sum()","output":{"0":{"data":{"text/plain":"854"},"exec_count":110,"output_type":"execute_result"}},"pos":15,"type":"cell"}
{"cell_type":"code","exec_count":111,"id":"6a8c69","input":"df['basesalary'].isnull().values.any()","output":{"0":{"data":{"text/plain":"False"},"exec_count":111,"output_type":"execute_result"}},"pos":16,"type":"cell"}
{"cell_type":"code","exec_count":112,"id":"7e7854","input":"df['Doctorate_Degree'].isnull().values.any()","output":{"0":{"data":{"text/plain":"False"},"exec_count":112,"output_type":"execute_result"}},"pos":17,"type":"cell"}
{"cell_type":"code","exec_count":113,"id":"b85083","input":"df['Highschool'].isnull().values.any()","output":{"0":{"data":{"text/plain":"False"},"exec_count":113,"output_type":"execute_result"}},"pos":18,"type":"cell"}
{"cell_type":"code","exec_count":114,"id":"2e9613","input":"df['Some_College'].isnull().values.any()","output":{"0":{"data":{"text/plain":"False"},"exec_count":114,"output_type":"execute_result"}},"pos":19,"type":"cell"}
{"cell_type":"code","exec_count":115,"id":"45e600","input":"df['Race_Asian'].isnull().values.any()","output":{"0":{"data":{"text/plain":"False"},"exec_count":115,"output_type":"execute_result"}},"pos":20,"type":"cell"}
{"cell_type":"code","exec_count":116,"id":"b856ef","input":"df['Race_White'].isnull().values.any()","output":{"0":{"data":{"text/plain":"False"},"exec_count":116,"output_type":"execute_result"}},"pos":21,"type":"cell"}
{"cell_type":"code","exec_count":117,"id":"4be410","input":"df['Race_Two_Or_More'].isnull().values.any()","output":{"0":{"data":{"text/plain":"False"},"exec_count":117,"output_type":"execute_result"}},"pos":22,"type":"cell"}
{"cell_type":"code","exec_count":118,"id":"562ecb","input":"df['Race_Black'].isnull().values.any()","output":{"0":{"data":{"text/plain":"False"},"exec_count":118,"output_type":"execute_result"}},"pos":23,"type":"cell"}
{"cell_type":"code","exec_count":119,"id":"0fd0f8","input":"df['Race_Hispanic'].isnull().values.any()","output":{"0":{"data":{"text/plain":"False"},"exec_count":119,"output_type":"execute_result"}},"pos":24,"type":"cell"}
{"cell_type":"code","exec_count":120,"id":"3d20fe","input":"df['Race'].isnull().values.any()","output":{"0":{"data":{"text/plain":"True"},"exec_count":120,"output_type":"execute_result"}},"pos":25,"type":"cell"}
{"cell_type":"code","exec_count":121,"id":"7dd451","input":"df['Race'].isnull().sum() ","output":{"0":{"data":{"text/plain":"40215"},"exec_count":121,"output_type":"execute_result"}},"pos":26,"type":"cell"}
{"cell_type":"code","exec_count":122,"id":"866e11","input":"df['Education'].isnull().values.any()","output":{"0":{"data":{"text/plain":"True"},"exec_count":122,"output_type":"execute_result"}},"pos":27,"type":"cell"}
{"cell_type":"code","exec_count":123,"id":"595219","input":"df['Education'].isnull().sum()","output":{"0":{"data":{"text/plain":"32272"},"exec_count":123,"output_type":"execute_result"}},"pos":28,"type":"cell"}
{"cell_type":"code","exec_count":125,"id":"9fbceb","input":"df = df.drop(['Race'], axis = 1)","pos":30,"type":"cell"}
{"cell_type":"code","exec_count":127,"id":"b81ce1","input":"df = df.drop(['Education'], axis = 1)","pos":31,"type":"cell"}
{"cell_type":"code","exec_count":128,"id":"069f7b","input":"df = df.drop(['otherdetails'], axis = 1)","pos":32,"type":"cell"}
{"cell_type":"code","exec_count":131,"id":"c9a53a","input":"df = df.drop(['dmaid'], axis = 1)","pos":34,"type":"cell"}
{"cell_type":"code","exec_count":132,"id":"4d8403","input":"df = df.drop(['level'], axis = 1)","pos":33,"type":"cell"}
{"cell_type":"code","exec_count":133,"id":"e2fed9","input":"df = df.drop(['tag'], axis = 1)","pos":35,"type":"cell"}
{"cell_type":"code","exec_count":134,"id":"48b4c8","input":"df.columns","output":{"0":{"data":{"text/plain":"Index(['timestamp', 'company', 'title', 'totalyearlycompensation', 'location',\n       'yearsofexperience', 'yearsatcompany', 'basesalary', 'stockgrantvalue',\n       'bonus', 'gender', 'cityid', 'rowNumber', 'Masters_Degree',\n       'Bachelors_Degree', 'Doctorate_Degree', 'Highschool', 'Some_College',\n       'Race_Asian', 'Race_White', 'Race_Two_Or_More', 'Race_Black',\n       'Race_Hispanic'],\n      dtype='object')"},"exec_count":134,"output_type":"execute_result"}},"pos":29,"type":"cell"}
{"cell_type":"code","exec_count":16,"id":"676fb1","input":"def get_state(x):\n    words = x.split(', ')\n    state = words[1]\n    if state == 'CA':\n        return \"CA\"\n    elif state == 'WA':\n        return 'WA'\n    elif state == \"NY\":\n        return \"NY\"\n    else:\n        return 'Other'","pos":40,"type":"cell"}
{"cell_type":"code","exec_count":18,"id":"afd6bd","input":"df.dropna()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>timestamp</th>\n      <th>company</th>\n      <th>level</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>location</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>tag</th>\n      <th>basesalary</th>\n      <th>...</th>\n      <th>Doctorate_Degree</th>\n      <th>Highschool</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>Race</th>\n      <th>Education</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>15710</th>\n      <td>1/27/2020 22:59:06</td>\n      <td>Google</td>\n      <td>L6</td>\n      <td>Software Engineer</td>\n      <td>400000</td>\n      <td>Sunnyvale, CA</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>Distributed Systems (Back-End)</td>\n      <td>210000.0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Asian</td>\n      <td>PhD</td>\n    </tr>\n    <tr>\n      <th>23532</th>\n      <td>7/3/2020 19:56:38</td>\n      <td>Microsoft</td>\n      <td>61</td>\n      <td>Software Engineer</td>\n      <td>136000</td>\n      <td>Redmond, WA</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>DevOps</td>\n      <td>124000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Two Or More</td>\n      <td>Bachelor's Degree</td>\n    </tr>\n    <tr>\n      <th>23533</th>\n      <td>7/3/2020 20:03:57</td>\n      <td>Google</td>\n      <td>L5</td>\n      <td>Software Engineer</td>\n      <td>337000</td>\n      <td>San Bruno, CA</td>\n      <td>6.0</td>\n      <td>6.0</td>\n      <td>Full Stack</td>\n      <td>177000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Asian</td>\n      <td>Bachelor's Degree</td>\n    </tr>\n    <tr>\n      <th>23534</th>\n      <td>7/3/2020 20:05:37</td>\n      <td>Microsoft</td>\n      <td>62</td>\n      <td>Software Engineer</td>\n      <td>222000</td>\n      <td>Seattle, WA</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>API Development (Back-End)</td>\n      <td>164000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Asian</td>\n      <td>Master's Degree</td>\n    </tr>\n    <tr>\n      <th>23535</th>\n      <td>7/3/2020 20:19:06</td>\n      <td>Blend</td>\n      <td>IC3</td>\n      <td>Software Engineer</td>\n      <td>187000</td>\n      <td>San Francisco, CA</td>\n      <td>5.0</td>\n      <td>0.0</td>\n      <td>Full Stack</td>\n      <td>165000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>White</td>\n      <td>Bachelor's Degree</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>61981</th>\n      <td>2/15/2021 19:50:36</td>\n      <td>Facebook</td>\n      <td>M2</td>\n      <td>Software Engineering Manager</td>\n      <td>1470000</td>\n      <td>Menlo Park, CA</td>\n      <td>9.0</td>\n      <td>7.0</td>\n      <td>Full Stack</td>\n      <td>290000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Asian</td>\n      <td>Bachelor's Degree</td>\n    </tr>\n    <tr>\n      <th>61982</th>\n      <td>3/9/2021 17:03:07</td>\n      <td>Google</td>\n      <td>L10</td>\n      <td>Product Manager</td>\n      <td>4500000</td>\n      <td>San Francisco, CA</td>\n      <td>20.0</td>\n      <td>14.0</td>\n      <td>Consumer</td>\n      <td>450000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Asian</td>\n      <td>Master's Degree</td>\n    </tr>\n    <tr>\n      <th>61984</th>\n      <td>3/25/2021 10:45:03</td>\n      <td>Zapier</td>\n      <td>L8</td>\n      <td>Software Engineering Manager</td>\n      <td>1605000</td>\n      <td>Denver, CO</td>\n      <td>16.0</td>\n      <td>2.0</td>\n      <td>Full Stack</td>\n      <td>250000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>White</td>\n      <td>Master's Degree</td>\n    </tr>\n    <tr>\n      <th>61987</th>\n      <td>5/18/2021 15:34:21</td>\n      <td>Facebook</td>\n      <td>D1</td>\n      <td>Software Engineering Manager</td>\n      <td>2372000</td>\n      <td>Menlo Park, CA</td>\n      <td>22.0</td>\n      <td>2.0</td>\n      <td>ML / AI</td>\n      <td>315000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>Black</td>\n      <td>Master's Degree</td>\n    </tr>\n    <tr>\n      <th>61991</th>\n      <td>7/30/2021 22:23:24</td>\n      <td>Facebook</td>\n      <td>E9</td>\n      <td>Product Manager</td>\n      <td>4980000</td>\n      <td>Menlo Park, CA</td>\n      <td>17.0</td>\n      <td>0.0</td>\n      <td>Product</td>\n      <td>380000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Asian</td>\n      <td>Master's Degree</td>\n    </tr>\n  </tbody>\n</table>\n<p>21521 rows Ã— 29 columns</p>\n</div>","text/plain":"                timestamp    company level                         title  \\\n15710  1/27/2020 22:59:06     Google    L6             Software Engineer   \n23532   7/3/2020 19:56:38  Microsoft    61             Software Engineer   \n23533   7/3/2020 20:03:57     Google    L5             Software Engineer   \n23534   7/3/2020 20:05:37  Microsoft    62             Software Engineer   \n23535   7/3/2020 20:19:06      Blend   IC3             Software Engineer   \n...                   ...        ...   ...                           ...   \n61981  2/15/2021 19:50:36   Facebook    M2  Software Engineering Manager   \n61982   3/9/2021 17:03:07     Google   L10               Product Manager   \n61984  3/25/2021 10:45:03     Zapier    L8  Software Engineering Manager   \n61987  5/18/2021 15:34:21   Facebook    D1  Software Engineering Manager   \n61991  7/30/2021 22:23:24   Facebook    E9               Product Manager   \n\n       totalyearlycompensation           location  yearsofexperience  \\\n15710                   400000      Sunnyvale, CA                5.0   \n23532                   136000        Redmond, WA                3.0   \n23533                   337000      San Bruno, CA                6.0   \n23534                   222000        Seattle, WA                4.0   \n23535                   187000  San Francisco, CA                5.0   \n...                        ...                ...                ...   \n61981                  1470000     Menlo Park, CA                9.0   \n61982                  4500000  San Francisco, CA               20.0   \n61984                  1605000         Denver, CO               16.0   \n61987                  2372000     Menlo Park, CA               22.0   \n61991                  4980000     Menlo Park, CA               17.0   \n\n       yearsatcompany                             tag  basesalary  ...  \\\n15710             5.0  Distributed Systems (Back-End)    210000.0  ...   \n23532             2.0                          DevOps    124000.0  ...   \n23533             6.0                      Full Stack    177000.0  ...   \n23534             4.0      API Development (Back-End)    164000.0  ...   \n23535             0.0                      Full Stack    165000.0  ...   \n...               ...                             ...         ...  ...   \n61981             7.0                      Full Stack    290000.0  ...   \n61982            14.0                        Consumer    450000.0  ...   \n61984             2.0                      Full Stack    250000.0  ...   \n61987             2.0                         ML / AI    315000.0  ...   \n61991             0.0                         Product    380000.0  ...   \n\n       Doctorate_Degree  Highschool Some_College Race_Asian  Race_White  \\\n15710                 1           0            0          1           0   \n23532                 0           0            0          0           0   \n23533                 0           0            0          1           0   \n23534                 0           0            0          1           0   \n23535                 0           0            0          0           1   \n...                 ...         ...          ...        ...         ...   \n61981                 0           0            0          1           0   \n61982                 0           0            0          1           0   \n61984                 0           0            0          0           1   \n61987                 0           0            0          0           0   \n61991                 0           0            0          1           0   \n\n       Race_Two_Or_More  Race_Black  Race_Hispanic         Race  \\\n15710                 0           0              0        Asian   \n23532                 1           0              0  Two Or More   \n23533                 0           0              0        Asian   \n23534                 0           0              0        Asian   \n23535                 0           0              0        White   \n...                 ...         ...            ...          ...   \n61981                 0           0              0        Asian   \n61982                 0           0              0        Asian   \n61984                 0           0              0        White   \n61987                 0           1              0        Black   \n61991                 0           0              0        Asian   \n\n               Education  \n15710                PhD  \n23532  Bachelor's Degree  \n23533  Bachelor's Degree  \n23534    Master's Degree  \n23535  Bachelor's Degree  \n...                  ...  \n61981  Bachelor's Degree  \n61982    Master's Degree  \n61984    Master's Degree  \n61987    Master's Degree  \n61991    Master's Degree  \n\n[21521 rows x 29 columns]"},"exec_count":18,"output_type":"execute_result"}},"pos":36,"type":"cell"}
{"cell_type":"code","exec_count":21,"id":"5eae7e","input":"df['state'] = df['location'].apply(get_state)\ndf.drop(['location'], axis = 1, inplace = True)\n","pos":42,"type":"cell"}
{"cell_type":"code","exec_count":23,"id":"589819","input":"df.state.value_counts()","output":{"0":{"data":{"text/plain":"CA       22824\nOther    22747\nWA       12356\nNY        4715\nName: state, dtype: int64"},"exec_count":23,"output_type":"execute_result"}},"pos":43,"type":"cell"}
{"cell_type":"code","exec_count":26,"id":"57ec3a","input":"top_15_popular = list(df['company'].value_counts().index)[:15]\ndef in_popular(x):\n    if x in top_15_popular:\n        return True\n    else:\n        return False\n    \ndf['in_top_15'] = df['company'].apply(in_popular)","pos":44,"type":"cell"}
{"cell_type":"code","exec_count":27,"id":"2bdd45","input":"fig = px.histogram(df, x = 'gender', y = 'basesalary', title = 'Basesalary and Gender Histogram')\nfig.show()","output":{"0":{"data":{"iframe":"041415676b7c6fde1f6d910bca79641bf6518ff2"},"exec_count":27,"output_type":"execute_result"}},"pos":51,"type":"cell"}
{"cell_type":"code","exec_count":27,"id":"ac9d22","input":"df.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>timestamp</th>\n      <th>company</th>\n      <th>level</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>tag</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>...</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>Race</th>\n      <th>Education</th>\n      <th>state</th>\n      <th>in_top_15</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>6/7/2017 11:33:27</td>\n      <td>Oracle</td>\n      <td>L3</td>\n      <td>Product Manager</td>\n      <td>127000</td>\n      <td>1.5</td>\n      <td>1.5</td>\n      <td>NaN</td>\n      <td>107000.0</td>\n      <td>20000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>CA</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>6/10/2017 17:11:29</td>\n      <td>eBay</td>\n      <td>SE 2</td>\n      <td>Software Engineer</td>\n      <td>100000</td>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>CA</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>6/11/2017 14:53:57</td>\n      <td>Amazon</td>\n      <td>L7</td>\n      <td>Product Manager</td>\n      <td>310000</td>\n      <td>8.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>155000.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>WA</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>6/17/2017 0:23:14</td>\n      <td>Apple</td>\n      <td>M1</td>\n      <td>Software Engineering Manager</td>\n      <td>372000</td>\n      <td>7.0</td>\n      <td>5.0</td>\n      <td>NaN</td>\n      <td>157000.0</td>\n      <td>180000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>CA</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>6/20/2017 10:58:51</td>\n      <td>Microsoft</td>\n      <td>60</td>\n      <td>Software Engineer</td>\n      <td>157000</td>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>CA</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 30 columns</p>\n</div>","text/plain":"            timestamp    company level                         title  \\\n0   6/7/2017 11:33:27     Oracle    L3               Product Manager   \n1  6/10/2017 17:11:29       eBay  SE 2             Software Engineer   \n2  6/11/2017 14:53:57     Amazon    L7               Product Manager   \n3   6/17/2017 0:23:14      Apple    M1  Software Engineering Manager   \n4  6/20/2017 10:58:51  Microsoft    60             Software Engineer   \n\n   totalyearlycompensation  yearsofexperience  yearsatcompany  tag  \\\n0                   127000                1.5             1.5  NaN   \n1                   100000                5.0             3.0  NaN   \n2                   310000                8.0             0.0  NaN   \n3                   372000                7.0             5.0  NaN   \n4                   157000                5.0             3.0  NaN   \n\n   basesalary  stockgrantvalue  ...  Some_College Race_Asian Race_White  \\\n0    107000.0          20000.0  ...             0          0          0   \n1         0.0              0.0  ...             0          0          0   \n2    155000.0              0.0  ...             0          0          0   \n3    157000.0         180000.0  ...             0          0          0   \n4         0.0              0.0  ...             0          0          0   \n\n   Race_Two_Or_More  Race_Black  Race_Hispanic  Race  Education  state  \\\n0                 0           0              0   NaN        NaN     CA   \n1                 0           0              0   NaN        NaN     CA   \n2                 0           0              0   NaN        NaN     WA   \n3                 0           0              0   NaN        NaN     CA   \n4                 0           0              0   NaN        NaN     CA   \n\n   in_top_15  \n0       True  \n1      False  \n2       True  \n3       True  \n4       True  \n\n[5 rows x 30 columns]"},"exec_count":27,"output_type":"execute_result"}},"pos":41,"type":"cell"}
{"cell_type":"code","exec_count":28,"id":"1bfe56","input":"df.groupby('title')['yearsofexperience'].mean()","output":{"0":{"data":{"text/plain":"title\nBusiness Analyst                 5.624859\nData Scientist                   5.059348\nHardware Engineer                8.176818\nHuman Resources                 10.085165\nManagement Consultant            7.348361\nMarketing                        9.321127\nMechanical Engineer              5.802041\nProduct Designer                 7.585092\nProduct Manager                  9.212176\nRecruiter                        7.942350\nSales                            8.941432\nSoftware Engineer                6.088087\nSoftware Engineering Manager    14.040067\nSolution Architect              12.645635\nTechnical Program Manager       12.279508\nName: yearsofexperience, dtype: float64"},"exec_count":28,"output_type":"execute_result"}},"pos":45,"type":"cell"}
{"cell_type":"code","exec_count":31,"id":"e66fe7","input":"x = df.groupby('title')['basesalary'].mean().to_frame().reset_index()\nx","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>title</th>\n      <th>basesalary</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Business Analyst</td>\n      <td>103505.084746</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Data Scientist</td>\n      <td>138054.693561</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Hardware Engineer</td>\n      <td>139628.181818</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Human Resources</td>\n      <td>128590.659341</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Management Consultant</td>\n      <td>136195.696721</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Marketing</td>\n      <td>140957.746479</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Mechanical Engineer</td>\n      <td>118455.102041</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Product Designer</td>\n      <td>137163.588391</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Product Manager</td>\n      <td>148663.562166</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Recruiter</td>\n      <td>117496.674058</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>Sales</td>\n      <td>118470.715835</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>Software Engineer</td>\n      <td>132414.623681</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>Software Engineering Manager</td>\n      <td>174204.469039</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>Solution Architect</td>\n      <td>140173.509075</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>Technical Program Manager</td>\n      <td>156454.742940</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"                           title     basesalary\n0               Business Analyst  103505.084746\n1                 Data Scientist  138054.693561\n2              Hardware Engineer  139628.181818\n3                Human Resources  128590.659341\n4          Management Consultant  136195.696721\n5                      Marketing  140957.746479\n6            Mechanical Engineer  118455.102041\n7               Product Designer  137163.588391\n8                Product Manager  148663.562166\n9                      Recruiter  117496.674058\n10                         Sales  118470.715835\n11             Software Engineer  132414.623681\n12  Software Engineering Manager  174204.469039\n13            Solution Architect  140173.509075\n14     Technical Program Manager  156454.742940"},"exec_count":31,"output_type":"execute_result"}},"pos":46,"type":"cell"}
{"cell_type":"code","exec_count":47,"id":"5d3958","input":"df['company'].isnull().sum() ","output":{"0":{"data":{"text/plain":"5"},"exec_count":47,"output_type":"execute_result"}},"pos":6,"type":"cell"}
{"cell_type":"code","exec_count":48,"id":"3003c2","input":"df['level'].isnull().values.any()","output":{"0":{"data":{"text/plain":"True"},"exec_count":48,"output_type":"execute_result"}},"pos":7,"type":"cell"}
{"cell_type":"code","exec_count":49,"id":"b3a144","input":"df['level'].isnull().sum() ","output":{"0":{"data":{"text/plain":"119"},"exec_count":49,"output_type":"execute_result"}},"pos":8,"type":"cell"}
{"cell_type":"code","exec_count":51,"id":"d9afd7","input":"fig = px.scatter(df, x='basesalary',  y='totalyearlycompensation', title='Gender and their base salaries', color='gender')fig.show()\n","output":{"0":{"ename":"SyntaxError","evalue":"invalid syntax (1270507567.py, line 1)","output_type":"error","traceback":["\u001b[0;36m  Input \u001b[0;32mIn [51]\u001b[0;36m\u001b[0m\n\u001b[0;31m    fig = px.scatter(df, x='basesalary',  y='totalyearlycompensation', title='Gender and their base salaries', color='gender')fig.show()\u001b[0m\n\u001b[0m                                                                                                                              ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}},"pos":53,"type":"cell"}
{"cell_type":"code","exec_count":52,"id":"f29a45","input":"fig = px.pie(df, names='title', title = 'Most popular Titles Pie Plot')\nfig.show()","output":{"0":{"data":{"iframe":"311d237e42d8e23bbfc973d4789976b9bb5359a8"},"exec_count":52,"output_type":"execute_result"}},"pos":54,"type":"cell"}
{"cell_type":"code","exec_count":56,"id":"258ce9","input":"bf = adf.groupby('gender')['totalyearlycompensation'].mean()","output":{"0":{"data":{"text/plain":"gender\nFemale                             195119.588513\nMale                               212446.977928\nOther                              232347.500000\nTitle: Senior Software Engineer    205000.000000\nName: totalyearlycompensation, dtype: float64"},"exec_count":56,"output_type":"execute_result"}},"pos":55,"type":"cell"}
{"cell_type":"code","exec_count":8,"id":"6ff81c","input":"df.value_counts('title')","output":{"0":{"data":{"text/plain":"title\nSoftware Engineer               41231\nProduct Manager                  4673\nSoftware Engineering Manager     3569\nData Scientist                   2578\nHardware Engineer                2200\nProduct Designer                 1516\nTechnical Program Manager        1381\nSolution Architect               1157\nManagement Consultant             976\nBusiness Analyst                  885\nMarketing                         710\nMechanical Engineer               490\nSales                             461\nRecruiter                         451\nHuman Resources                   364\ndtype: int64"},"exec_count":8,"output_type":"execute_result"}},"pos":37,"type":"cell"}
{"cell_type":"code","exec_count":9,"id":"80ab03","input":"df.value_counts('totalyearlycompensation')","output":{"0":{"data":{"text/plain":"totalyearlycompensation\n200000     1196\n150000     1106\n250000      907\n180000      904\n160000      874\n           ... \n792000        1\n794000        1\n799000        1\n144500        1\n4980000       1\nLength: 893, dtype: int64"},"exec_count":9,"output_type":"execute_result"}},"pos":38,"type":"cell"}
{"cell_type":"code","id":"2e0d11","input":"","kernel":"ds_env","pos":52,"type":"cell"}
{"cell_type":"markdown","id":"2382a9","input":"Our dataset is from: [https://www.kaggle.com/datasets/jackogozaly/data\\-science\\-and\\-stem\\-salaries?datasetId=1640011&sortBy=voteCount](https://www.kaggle.com/datasets/jackogozaly/data-science-and-stem-salaries?datasetId=1640011&sortBy=voteCount)\n","pos":1,"type":"cell"}
{"end":1658521453611,"exec_count":19,"id":"cfeb88","input":"df = df[df['basesalary'] != 0]","kernel":"ds_env","pos":57,"start":1658521453578,"state":"done","type":"cell"}
{"exec_count":23,"id":"68a899","input":"def check_education(master, bach, doc, high, some):\n    if master == 1:\n        return \"Masters\"\n    elif bach == 1:\n        return \"Bachelors\"\n    elif doc == 1:\n        return \"PHD\"\n    elif high == 1:\n        return 'Highschool'\n    elif some == 1:\n        return \"Some\"\n    else:\n        return \"Missing\"","kernel":"ds_env","output":{"0":{"ename":"SyntaxError","evalue":"invalid syntax (3909582184.py, line 1)","traceback":["\u001b[0;36m  Input \u001b[0;32mIn [23]\u001b[0;36m\u001b[0m\n\u001b[0;31m    me = def check_education(master, bach, doc, high, some):\u001b[0m\n\u001b[0m         ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}},"pos":58,"state":"done","type":"cell"}
{"exec_count":25,"id":"9e675b","input":"df['education'] = df.apply(lambda x: check_education(x.masters","kernel":"ds_env","output":{"0":{"ename":"NameError","evalue":"name 'f' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","Input \u001b[0;32mIn [25]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0m df[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mcol_3\u001b[39m\u001b[38;5;124m'\u001b[39m] \u001b[38;5;241m=\u001b[39m \u001b[43mdf\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mapply\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43;01mlambda\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43mx\u001b[49m\u001b[43m:\u001b[49m\u001b[43m \u001b[49m\u001b[43mf\u001b[49m\u001b[43m(\u001b[49m\u001b[43mx\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcol_1\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mx\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcol_2\u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43maxis\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;241;43m1\u001b[39;49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/frame.py:8839\u001b[0m, in \u001b[0;36mDataFrame.apply\u001b[0;34m(self, func, axis, raw, result_type, args, **kwargs)\u001b[0m\n\u001b[1;32m   8828\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mpandas\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mcore\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mapply\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m frame_apply\n\u001b[1;32m   8830\u001b[0m op \u001b[38;5;241m=\u001b[39m frame_apply(\n\u001b[1;32m   8831\u001b[0m     \u001b[38;5;28mself\u001b[39m,\n\u001b[1;32m   8832\u001b[0m     func\u001b[38;5;241m=\u001b[39mfunc,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   8837\u001b[0m     kwargs\u001b[38;5;241m=\u001b[39mkwargs,\n\u001b[1;32m   8838\u001b[0m )\n\u001b[0;32m-> 8839\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mop\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mapply\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241m.\u001b[39m__finalize__(\u001b[38;5;28mself\u001b[39m, method\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mapply\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/apply.py:727\u001b[0m, in \u001b[0;36mFrameApply.apply\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    724\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mraw:\n\u001b[1;32m    725\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mapply_raw()\n\u001b[0;32m--> 727\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mapply_standard\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/apply.py:851\u001b[0m, in \u001b[0;36mFrameApply.apply_standard\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    850\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mapply_standard\u001b[39m(\u001b[38;5;28mself\u001b[39m):\n\u001b[0;32m--> 851\u001b[0m     results, res_index \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mapply_series_generator\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    853\u001b[0m     \u001b[38;5;66;03m# wrap results\u001b[39;00m\n\u001b[1;32m    854\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mwrap_results(results, res_index)\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/apply.py:867\u001b[0m, in \u001b[0;36mFrameApply.apply_series_generator\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    864\u001b[0m \u001b[38;5;28;01mwith\u001b[39;00m option_context(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mmode.chained_assignment\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m):\n\u001b[1;32m    865\u001b[0m     \u001b[38;5;28;01mfor\u001b[39;00m i, v \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28menumerate\u001b[39m(series_gen):\n\u001b[1;32m    866\u001b[0m         \u001b[38;5;66;03m# ignore SettingWithCopy here in case the user mutates\u001b[39;00m\n\u001b[0;32m--> 867\u001b[0m         results[i] \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mf\u001b[49m\u001b[43m(\u001b[49m\u001b[43mv\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    868\u001b[0m         \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(results[i], ABCSeries):\n\u001b[1;32m    869\u001b[0m             \u001b[38;5;66;03m# If we have a view on v, we need to make a copy because\u001b[39;00m\n\u001b[1;32m    870\u001b[0m             \u001b[38;5;66;03m#  series_generator will swap out the underlying data\u001b[39;00m\n\u001b[1;32m    871\u001b[0m             results[i] \u001b[38;5;241m=\u001b[39m results[i]\u001b[38;5;241m.\u001b[39mcopy(deep\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mFalse\u001b[39;00m)\n","Input \u001b[0;32mIn [25]\u001b[0m, in \u001b[0;36m<lambda>\u001b[0;34m(x)\u001b[0m\n\u001b[0;32m----> 1\u001b[0m df[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mcol_3\u001b[39m\u001b[38;5;124m'\u001b[39m] \u001b[38;5;241m=\u001b[39m df\u001b[38;5;241m.\u001b[39mapply(\u001b[38;5;28;01mlambda\u001b[39;00m x: \u001b[43mf\u001b[49m(x\u001b[38;5;241m.\u001b[39mcol_1, x\u001b[38;5;241m.\u001b[39mcol_2), axis\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m1\u001b[39m)\n","\u001b[0;31mNameError\u001b[0m: name 'f' is not defined"]}},"pos":59,"state":"done","type":"cell"}
{"id":"16199f","input":"df.","pos":43.5,"type":"cell"}
{"id":"fe21e8","input":"len(df[df['education'] == 'missing'])","pos":60,"type":"cell"}
{"id":0,"time":1658429648473,"type":"user"}
{"last_load":1658510217436,"type":"file"}