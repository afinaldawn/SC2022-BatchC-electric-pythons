{"backend_state":"running","connection_file":"/projects/0bcf82e6-7441-4432-a339-19b67c22cc5c/.local/share/jupyter/runtime/kernel-054007f0-4fe6-4dc6-8da8-20a8efb45ce2.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"trust":true,"type":"settings"}
{"cell_type":"code","end":1659547251587,"exec_count":1,"id":"fcbb36","input":"import pandas as pd\nimport numpy as np","kernel":"ds_env","pos":0,"start":1659547251146,"state":"done","type":"cell"}
{"cell_type":"code","end":1659547253048,"exec_count":2,"id":"edde76","input":"df = pd.read_csv('cleaned_data')\ndf.drop(['Unnamed: 0'], axis = 1, inplace = True)","kernel":"ds_env","pos":1,"start":1659547252853,"state":"done","type":"cell"}
{"cell_type":"code","end":1659547254219,"exec_count":3,"id":"719808","input":"df.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>...</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>state</th>\n      <th>in_top_15</th>\n      <th>education</th>\n      <th>race</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>400000</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>210000.0</td>\n      <td>145000.0</td>\n      <td>45000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>True</td>\n      <td>PHD</td>\n      <td>Asian</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>136000</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>124000.0</td>\n      <td>1000.0</td>\n      <td>11000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>WA</td>\n      <td>True</td>\n      <td>Bachelors</td>\n      <td>Two</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>337000</td>\n      <td>6.0</td>\n      <td>6.0</td>\n      <td>177000.0</td>\n      <td>125000.0</td>\n      <td>36000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>True</td>\n      <td>Bachelors</td>\n      <td>Asian</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>222000</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>164000.0</td>\n      <td>38000.0</td>\n      <td>20000.0</td>\n      <td>Male</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>WA</td>\n      <td>True</td>\n      <td>Masters</td>\n      <td>Asian</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Blend</td>\n      <td>Software Engineer</td>\n      <td>187000</td>\n      <td>5.0</td>\n      <td>0.0</td>\n      <td>165000.0</td>\n      <td>22000.0</td>\n      <td>0.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>False</td>\n      <td>Bachelors</td>\n      <td>White</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 23 columns</p>\n</div>","text/plain":"     company              title  totalyearlycompensation  yearsofexperience  \\\n0     Google  Software Engineer                   400000                5.0   \n1  Microsoft  Software Engineer                   136000                3.0   \n2     Google  Software Engineer                   337000                6.0   \n3  Microsoft  Software Engineer                   222000                4.0   \n4      Blend  Software Engineer                   187000                5.0   \n\n   yearsatcompany  basesalary  stockgrantvalue    bonus gender  \\\n0             5.0    210000.0         145000.0  45000.0   Male   \n1             2.0    124000.0           1000.0  11000.0   Male   \n2             6.0    177000.0         125000.0  36000.0   Male   \n3             4.0    164000.0          38000.0  20000.0   Male   \n4             0.0    165000.0          22000.0      0.0   Male   \n\n   Masters_Degree  ...  Some_College  Race_Asian  Race_White  \\\n0               0  ...             0           1           0   \n1               0  ...             0           0           0   \n2               0  ...             0           1           0   \n3               1  ...             0           1           0   \n4               0  ...             0           0           1   \n\n   Race_Two_Or_More  Race_Black  Race_Hispanic  state  in_top_15  education  \\\n0                 0           0              0     CA       True        PHD   \n1                 1           0              0     WA       True  Bachelors   \n2                 0           0              0     CA       True  Bachelors   \n3                 0           0              0     WA       True    Masters   \n4                 0           0              0     CA      False  Bachelors   \n\n    race  \n0  Asian  \n1    Two  \n2  Asian  \n3  Asian  \n4  White  \n\n[5 rows x 23 columns]"},"exec_count":3}},"pos":2,"start":1659547254172,"state":"done","type":"cell"}
{"cell_type":"code","end":1659547375160,"exec_count":7,"id":"b32751","input":"df.columns","kernel":"ds_env","output":{"0":{"data":{"text/plain":"Index(['company', 'title', 'totalyearlycompensation', 'yearsofexperience',\n       'yearsatcompany', 'basesalary', 'stockgrantvalue', 'bonus', 'gender',\n       'Masters_Degree', 'Bachelors_Degree', 'Doctorate_Degree', 'Highschool',\n       'Some_College', 'Race_Asian', 'Race_White', 'Race_Two_Or_More',\n       'Race_Black', 'Race_Hispanic', 'state', 'in_top_15', 'education',\n       'race'],\n      dtype='object')"},"exec_count":7}},"pos":3,"scrolled":true,"start":1659547375148,"state":"done","type":"cell"}
{"cell_type":"code","end":1659547376725,"exec_count":8,"id":"a975a9","input":"#state, title, race, education, company, gender, experience","kernel":"ds_env","pos":4,"start":1659547376721,"state":"done","type":"cell"}
{"cell_type":"code","end":1659547377839,"exec_count":9,"id":"0a58e4","input":"input = ['state', 'title', 'race', 'gender', 'experience', 'education', 'in_top_15']\nfiller = df.groupby(by = input)['yearsatcompany', 'basesalary', 'stockgrantvalue', 'bonus'].mean()\nfiller.reset_index(inplace = True)\nfiller","kernel":"ds_env","output":{"0":{"ename":"KeyError","evalue":"'experience'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","Input \u001b[0;32mIn [9]\u001b[0m, in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[38;5;28minput\u001b[39m \u001b[38;5;241m=\u001b[39m [\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mstate\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mtitle\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mrace\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mgender\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mexperience\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124meducation\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124min_top_15\u001b[39m\u001b[38;5;124m'\u001b[39m]\n\u001b[0;32m----> 2\u001b[0m filler \u001b[38;5;241m=\u001b[39m \u001b[43mdf\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mgroupby\u001b[49m\u001b[43m(\u001b[49m\u001b[43mby\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43m \u001b[49m\u001b[38;5;28;43minput\u001b[39;49m\u001b[43m)\u001b[49m[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124myearsatcompany\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mbasesalary\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mstockgrantvalue\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mbonus\u001b[39m\u001b[38;5;124m'\u001b[39m]\u001b[38;5;241m.\u001b[39mmean()\n\u001b[1;32m      3\u001b[0m filler\u001b[38;5;241m.\u001b[39mreset_index(inplace \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mTrue\u001b[39;00m)\n\u001b[1;32m      4\u001b[0m filler\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/frame.py:7712\u001b[0m, in \u001b[0;36mDataFrame.groupby\u001b[0;34m(self, by, axis, level, as_index, sort, group_keys, squeeze, observed, dropna)\u001b[0m\n\u001b[1;32m   7707\u001b[0m axis \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_get_axis_number(axis)\n\u001b[1;32m   7709\u001b[0m \u001b[38;5;66;03m# https://github.com/python/mypy/issues/7642\u001b[39;00m\n\u001b[1;32m   7710\u001b[0m \u001b[38;5;66;03m# error: Argument \"squeeze\" to \"DataFrameGroupBy\" has incompatible type\u001b[39;00m\n\u001b[1;32m   7711\u001b[0m \u001b[38;5;66;03m# \"Union[bool, NoDefault]\"; expected \"bool\"\u001b[39;00m\n\u001b[0;32m-> 7712\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mDataFrameGroupBy\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m   7713\u001b[0m \u001b[43m    \u001b[49m\u001b[43mobj\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[1;32m   7714\u001b[0m \u001b[43m    \u001b[49m\u001b[43mkeys\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mby\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   7715\u001b[0m \u001b[43m    \u001b[49m\u001b[43maxis\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43maxis\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   7716\u001b[0m \u001b[43m    \u001b[49m\u001b[43mlevel\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlevel\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   7717\u001b[0m \u001b[43m    \u001b[49m\u001b[43mas_index\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mas_index\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   7718\u001b[0m \u001b[43m    \u001b[49m\u001b[43msort\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43msort\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   7719\u001b[0m \u001b[43m    \u001b[49m\u001b[43mgroup_keys\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mgroup_keys\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   7720\u001b[0m \u001b[43m    \u001b[49m\u001b[43msqueeze\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43msqueeze\u001b[49m\u001b[43m,\u001b[49m\u001b[43m  \u001b[49m\u001b[38;5;66;43;03m# type: ignore[arg-type]\u001b[39;49;00m\n\u001b[1;32m   7721\u001b[0m \u001b[43m    \u001b[49m\u001b[43mobserved\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mobserved\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   7722\u001b[0m \u001b[43m    \u001b[49m\u001b[43mdropna\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mdropna\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   7723\u001b[0m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/groupby/groupby.py:882\u001b[0m, in \u001b[0;36mGroupBy.__init__\u001b[0;34m(self, obj, keys, axis, level, grouper, exclusions, selection, as_index, sort, group_keys, squeeze, observed, mutated, dropna)\u001b[0m\n\u001b[1;32m    879\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m grouper \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[1;32m    880\u001b[0m     \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mpandas\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mcore\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mgroupby\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mgrouper\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m get_grouper\n\u001b[0;32m--> 882\u001b[0m     grouper, exclusions, obj \u001b[38;5;241m=\u001b[39m \u001b[43mget_grouper\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m    883\u001b[0m \u001b[43m        \u001b[49m\u001b[43mobj\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    884\u001b[0m \u001b[43m        \u001b[49m\u001b[43mkeys\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    885\u001b[0m \u001b[43m        \u001b[49m\u001b[43maxis\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43maxis\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    886\u001b[0m \u001b[43m        \u001b[49m\u001b[43mlevel\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlevel\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    887\u001b[0m \u001b[43m        \u001b[49m\u001b[43msort\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43msort\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    888\u001b[0m \u001b[43m        \u001b[49m\u001b[43mobserved\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mobserved\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    889\u001b[0m \u001b[43m        \u001b[49m\u001b[43mmutated\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mmutated\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    890\u001b[0m \u001b[43m        \u001b[49m\u001b[43mdropna\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mdropna\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    891\u001b[0m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    893\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mobj \u001b[38;5;241m=\u001b[39m obj\n\u001b[1;32m    894\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39maxis \u001b[38;5;241m=\u001b[39m obj\u001b[38;5;241m.\u001b[39m_get_axis_number(axis)\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/groupby/grouper.py:882\u001b[0m, in \u001b[0;36mget_grouper\u001b[0;34m(obj, key, axis, level, sort, observed, mutated, validate, dropna)\u001b[0m\n\u001b[1;32m    880\u001b[0m         in_axis, level, gpr \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mFalse\u001b[39;00m, gpr, \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[1;32m    881\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m--> 882\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(gpr)\n\u001b[1;32m    883\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(gpr, Grouper) \u001b[38;5;129;01mand\u001b[39;00m gpr\u001b[38;5;241m.\u001b[39mkey \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[1;32m    884\u001b[0m     \u001b[38;5;66;03m# Add key to exclusions\u001b[39;00m\n\u001b[1;32m    885\u001b[0m     exclusions\u001b[38;5;241m.\u001b[39madd(gpr\u001b[38;5;241m.\u001b[39mkey)\n","\u001b[0;31mKeyError\u001b[0m: 'experience'"]}},"pos":5,"start":1659547377597,"state":"done","type":"cell"}
{"cell_type":"code","end":1659547378870,"exec_count":10,"id":"0420c6","input":"[(filler['state'] == 'CA') & (filler['title'] == 'Business Analyst') & (filler['race'] == 'Asian') & (filler['gender'] == 'Female') & (filler['in_top_15'] == True) & (filler['education'] == 'Bachelor')]","kernel":"ds_env","output":{"0":{"ename":"NameError","evalue":"name 'filler' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","Input \u001b[0;32mIn [10]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0m [(\u001b[43mfiller\u001b[49m[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mstate\u001b[39m\u001b[38;5;124m'\u001b[39m] \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mCA\u001b[39m\u001b[38;5;124m'\u001b[39m) \u001b[38;5;241m&\u001b[39m (filler[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mtitle\u001b[39m\u001b[38;5;124m'\u001b[39m] \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mBusiness Analyst\u001b[39m\u001b[38;5;124m'\u001b[39m) \u001b[38;5;241m&\u001b[39m (filler[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mrace\u001b[39m\u001b[38;5;124m'\u001b[39m] \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mAsian\u001b[39m\u001b[38;5;124m'\u001b[39m) \u001b[38;5;241m&\u001b[39m (filler[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mgender\u001b[39m\u001b[38;5;124m'\u001b[39m] \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mFemale\u001b[39m\u001b[38;5;124m'\u001b[39m) \u001b[38;5;241m&\u001b[39m (filler[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124min_top_15\u001b[39m\u001b[38;5;124m'\u001b[39m] \u001b[38;5;241m==\u001b[39m \u001b[38;5;28;01mTrue\u001b[39;00m) \u001b[38;5;241m&\u001b[39m (filler[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124meducation\u001b[39m\u001b[38;5;124m'\u001b[39m] \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mBachelor\u001b[39m\u001b[38;5;124m'\u001b[39m)]\n","\u001b[0;31mNameError\u001b[0m: name 'filler' is not defined"]}},"pos":6,"start":1659547378785,"state":"done","type":"cell"}
{"cell_type":"code","end":1659547379719,"exec_count":11,"id":"d06ade","input":"#when there is no filler data it returns an empty df\ndef find filler data ( user input) \n    if df is empty\n        return sorry no data found\n    else\n        return filler data","kernel":"ds_env","output":{"0":{"ename":"SyntaxError","evalue":"invalid syntax (544958570.py, line 2)","traceback":["\u001b[0;36m  Input \u001b[0;32mIn [11]\u001b[0;36m\u001b[0m\n\u001b[0;31m    def find filler data ( user input)\u001b[0m\n\u001b[0m             ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}},"pos":7,"start":1659547379712,"state":"done","type":"cell"}
{"cell_type":"code","end":1659547381301,"exec_count":12,"id":"02f4cc","input":"#ca, data scientist, asian, bachelors, apple, 4, male","kernel":"ds_env","pos":8,"start":1659547381289,"state":"done","type":"cell"}
{"cell_type":"code","end":1659547390515,"exec_count":13,"id":"e692a4","input":"def prediction(fillter data):\n    best ml model = whatever() - knn\n    predict(filler)_data\n    return prediction","kernel":"ds_env","output":{"0":{"ename":"SyntaxError","evalue":"invalid syntax (219307475.py, line 1)","traceback":["\u001b[0;36m  Input \u001b[0;32mIn [13]\u001b[0;36m\u001b[0m\n\u001b[0;31m    def prediction(fillter data):\u001b[0m\n\u001b[0m                           ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}},"pos":14,"start":1659547390484,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"b325b5","input":"#change experience from numerical values to categorical\nno = 0 years\nlittle = 1 - 3\nmedium = 4 - 6\na lot = 6+","pos":9,"type":"cell"}
{"cell_type":"code","exec_count":36,"id":"4c5845","input":"user_input = ['state', 'title', 'race', 'education', 'in_top_15', 'gender', 'yearsofexperience']\nfill = df.groupby(by = user_input)['yearsatcompany', 'basesalary', 'stockgrantvalue', 'bonus'].mean()\nfill.reset_index(inplace = True)df.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>...</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>state</th>\n      <th>in_top_15</th>\n      <th>education</th>\n      <th>race</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>400000</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>210000.0</td>\n      <td>145000.0</td>\n      <td>45000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>True</td>\n      <td>PHD</td>\n      <td>Asian</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>136000</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>124000.0</td>\n      <td>1000.0</td>\n      <td>11000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>WA</td>\n      <td>True</td>\n      <td>Bachelors</td>\n      <td>Two</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>337000</td>\n      <td>6.0</td>\n      <td>6.0</td>\n      <td>177000.0</td>\n      <td>125000.0</td>\n      <td>36000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>True</td>\n      <td>Bachelors</td>\n      <td>Asian</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>222000</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>164000.0</td>\n      <td>38000.0</td>\n      <td>20000.0</td>\n      <td>Male</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>WA</td>\n      <td>True</td>\n      <td>Masters</td>\n      <td>Asian</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Blend</td>\n      <td>Software Engineer</td>\n      <td>187000</td>\n      <td>5.0</td>\n      <td>0.0</td>\n      <td>165000.0</td>\n      <td>22000.0</td>\n      <td>0.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>False</td>\n      <td>Bachelors</td>\n      <td>White</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 23 columns</p>\n</div>","text/plain":"     company              title  totalyearlycompensation  yearsofexperience  \\\n0     Google  Software Engineer                   400000                5.0   \n1  Microsoft  Software Engineer                   136000                3.0   \n2     Google  Software Engineer                   337000                6.0   \n3  Microsoft  Software Engineer                   222000                4.0   \n4      Blend  Software Engineer                   187000                5.0   \n\n   yearsatcompany  basesalary  stockgrantvalue    bonus gender  \\\n0             5.0    210000.0         145000.0  45000.0   Male   \n1             2.0    124000.0           1000.0  11000.0   Male   \n2             6.0    177000.0         125000.0  36000.0   Male   \n3             4.0    164000.0          38000.0  20000.0   Male   \n4             0.0    165000.0          22000.0      0.0   Male   \n\n   Masters_Degree  ...  Some_College  Race_Asian  Race_White  \\\n0               0  ...             0           1           0   \n1               0  ...             0           0           0   \n2               0  ...             0           1           0   \n3               1  ...             0           1           0   \n4               0  ...             0           0           1   \n\n   Race_Two_Or_More  Race_Black  Race_Hispanic  state  in_top_15  education  \\\n0                 0           0              0     CA       True        PHD   \n1                 1           0              0     WA       True  Bachelors   \n2                 0           0              0     CA       True  Bachelors   \n3                 0           0              0     WA       True    Masters   \n4                 0           0              0     CA      False  Bachelors   \n\n    race  \n0  Asian  \n1    Two  \n2  Asian  \n3  Asian  \n4  White  \n\n[5 rows x 23 columns]"},"exec_count":36,"output_type":"execute_result"}},"pos":10,"type":"cell"}
{"cell_type":"code","exec_count":37,"id":"9a3ac1","input":"def convert(years):\n    if years == 0:\n        return 'No Experience'\n    elif 1 <= years <= 3:\n        return 'Little Experience'\n    elif 4 <= years <= 6:\n        return 'Medium Experienced'\n    else:\n        return 'Very Experienced'","pos":11,"type":"cell"}
{"cell_type":"code","exec_count":44,"id":"245eea","input":"df['experience'] = df['yearsofexperience'].apply(convert)","pos":12,"type":"cell"}
{"cell_type":"code","exec_count":45,"id":"beda33","input":"df.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>...</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>state</th>\n      <th>in_top_15</th>\n      <th>education</th>\n      <th>race</th>\n      <th>experience</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>400000</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>210000.0</td>\n      <td>145000.0</td>\n      <td>45000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>True</td>\n      <td>PHD</td>\n      <td>Asian</td>\n      <td>Medium Experienced</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>136000</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>124000.0</td>\n      <td>1000.0</td>\n      <td>11000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>WA</td>\n      <td>True</td>\n      <td>Bachelors</td>\n      <td>Two</td>\n      <td>LITTLE EXPERIENCE</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>337000</td>\n      <td>6.0</td>\n      <td>6.0</td>\n      <td>177000.0</td>\n      <td>125000.0</td>\n      <td>36000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>True</td>\n      <td>Bachelors</td>\n      <td>Asian</td>\n      <td>Medium Experienced</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>222000</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>164000.0</td>\n      <td>38000.0</td>\n      <td>20000.0</td>\n      <td>Male</td>\n      <td>1</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>WA</td>\n      <td>True</td>\n      <td>Masters</td>\n      <td>Asian</td>\n      <td>Medium Experienced</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Blend</td>\n      <td>Software Engineer</td>\n      <td>187000</td>\n      <td>5.0</td>\n      <td>0.0</td>\n      <td>165000.0</td>\n      <td>22000.0</td>\n      <td>0.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>False</td>\n      <td>Bachelors</td>\n      <td>White</td>\n      <td>Medium Experienced</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 24 columns</p>\n</div>","text/plain":"     company              title  totalyearlycompensation  yearsofexperience  \\\n0     Google  Software Engineer                   400000                5.0   \n1  Microsoft  Software Engineer                   136000                3.0   \n2     Google  Software Engineer                   337000                6.0   \n3  Microsoft  Software Engineer                   222000                4.0   \n4      Blend  Software Engineer                   187000                5.0   \n\n   yearsatcompany  basesalary  stockgrantvalue    bonus gender  \\\n0             5.0    210000.0         145000.0  45000.0   Male   \n1             2.0    124000.0           1000.0  11000.0   Male   \n2             6.0    177000.0         125000.0  36000.0   Male   \n3             4.0    164000.0          38000.0  20000.0   Male   \n4             0.0    165000.0          22000.0      0.0   Male   \n\n   Masters_Degree  ...  Race_Asian  Race_White  Race_Two_Or_More  Race_Black  \\\n0               0  ...           1           0                 0           0   \n1               0  ...           0           0                 1           0   \n2               0  ...           1           0                 0           0   \n3               1  ...           1           0                 0           0   \n4               0  ...           0           1                 0           0   \n\n   Race_Hispanic  state  in_top_15  education   race          experience  \n0              0     CA       True        PHD  Asian  Medium Experienced  \n1              0     WA       True  Bachelors    Two   LITTLE EXPERIENCE  \n2              0     CA       True  Bachelors  Asian  Medium Experienced  \n3              0     WA       True    Masters  Asian  Medium Experienced  \n4              0     CA      False  Bachelors  White  Medium Experienced  \n\n[5 rows x 24 columns]"},"exec_count":45,"output_type":"execute_result"}},"pos":13,"scrolled":true,"type":"cell"}
{"end":1659548968934,"exec_count":14,"id":"3ceb73","input":"user_input = ['state', 'title', 'race', 'education', 'in_top_15', 'gender', 'yearsofexperience']\nfill = df.groupby(by = user_input)['yearsatcompany', 'basesalary', 'stockgrantvalue', 'bonus'].mean()\nfill.reset_index(inplace = True)","kernel":"ds_env","output":{"0":{"name":"stderr","text":"/tmp/ipykernel_15290/3653865278.py:2: FutureWarning: Indexing with multiple keys (implicitly converted to a tuple of keys) will be deprecated, use a list instead.\n  fill = df.groupby(by = user_input)['yearsatcompany', 'basesalary', 'stockgrantvalue', 'bonus'].mean()\n"}},"pos":15,"start":1659548968379,"state":"done","type":"cell"}
{"end":1659548976192,"exec_count":15,"id":"091ee4","input":"top_15 = list(df['company'].value_counts().head(15).index)\ntop_15","kernel":"ds_env","output":{"0":{"data":{"text/plain":"['Amazon',\n 'Microsoft',\n 'Google',\n 'Facebook',\n 'Apple',\n 'Oracle',\n 'IBM',\n 'Intel',\n 'Cisco',\n 'Salesforce',\n 'Capital One',\n 'VMware',\n 'JPMorgan Chase',\n 'Deloitte',\n 'Uber']"},"exec_count":15}},"pos":16,"start":1659548976161,"state":"done","type":"cell"}
{"end":1659549480046,"exec_count":35,"id":"9dc571","input":"len(impute('CA', 'Data Scientist', 'Asian', 'Bachelors', 'Apple', 'Male', 0))","kernel":"ds_env","output":{"0":{"data":{"text/plain":"0"},"exec_count":35}},"pos":18,"start":1659549480025,"state":"done","type":"cell"}
{"end":1659561387937,"exec_count":44,"id":"613df9","input":"from sklearn.preprocessing import MultiLabelBinarizer","kernel":"ds_env","pos":19,"start":1659561387928,"state":"done","type":"cell"}
{"end":1659561440625,"exec_count":45,"id":"35c078","input":"mlb=MultiLabelBinarizer()","kernel":"ds_env","pos":20,"start":1659561440622,"state":"done","type":"cell"}
{"end":1659561546719,"exec_count":46,"id":"4e82df","input":"mlb.fit_transform([(1,2),(3,)])","kernel":"ds_env","output":{"0":{"data":{"text/plain":"array([[1, 1, 0],\n       [0, 0, 1]])"},"exec_count":46}},"pos":21,"start":1659561546715,"state":"done","type":"cell"}
{"exec_count":30,"id":"f74edb","input":"def impute(state, title, race, education, company, gender, experience):\n    top_15_data = None\n    if company in top_15:\n        top_15_data = True\n    else:\n        top_15_data = False\n\n    new_data = fill[(fill['state'] == state) & \n         (fill['title'] == title) & \n         (fill['race'] == race) & \n         (fill['gender'] == gender) & \n         (fill['in_top_15'] == top_15_data) &     \n         (fill['education'] == education) &\n         (fill['yearsofexperience'] == experience)]\n\n    if len(fill) == 0:\n        return \"Sorry, no matching data found\"\n    else:\n        return new_data","kernel":"ds_env","pos":17,"state":"done","type":"cell"}
{"id":"5eaf8a","input":"","pos":22,"type":"cell"}
{"id":0,"time":1659563723881,"type":"user"}
{"last_load":1659546433357,"type":"file"}