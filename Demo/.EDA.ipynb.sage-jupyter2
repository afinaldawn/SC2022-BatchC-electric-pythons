{"backend_state":"running","connection_file":"/projects/0bcf82e6-7441-4432-a339-19b67c22cc5c/.local/share/jupyter/runtime/kernel-e5b3aa8e-a0aa-4bf3-9d06-ee0afb6f02e8.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1658512550998,"exec_count":17,"id":"d4db35","input":"# name_of_dataframe.groupby(by = name of column you want to group by)[column of data you want to look at].what function you want to apply","kernel":"ds_env","pos":17,"start":1658512550987,"state":"done","type":"cell"}
{"cell_type":"code","end":1658512552028,"exec_count":18,"id":"206fca","input":"goog = df[df['company'] == 'Google']\ngoog.groupby('gender')['totalyearlycompensation'].mean().to_frame()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>totalyearlycompensation</th>\n    </tr>\n    <tr>\n      <th>gender</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Female</th>\n      <td>255969.635628</td>\n    </tr>\n    <tr>\n      <th>Male</th>\n      <td>282906.237260</td>\n    </tr>\n    <tr>\n      <th>Other</th>\n      <td>284193.548387</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"        totalyearlycompensation\ngender                         \nFemale            255969.635628\nMale              282906.237260\nOther             284193.548387"},"exec_count":18}},"pos":18,"start":1658512552007,"state":"done","type":"cell"}
{"cell_type":"code","end":1658512554179,"exec_count":19,"id":"2496e2","input":"x = df.groupby(by = ['company', 'gender'])['totalyearlycompensation'].mean().to_frame().reset_index()\nx[x['company'] == 'Google']","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>gender</th>\n      <th>totalyearlycompensation</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>867</th>\n      <td>Google</td>\n      <td>Female</td>\n      <td>255969.635628</td>\n    </tr>\n    <tr>\n      <th>868</th>\n      <td>Google</td>\n      <td>Male</td>\n      <td>282906.237260</td>\n    </tr>\n    <tr>\n      <th>869</th>\n      <td>Google</td>\n      <td>Other</td>\n      <td>284193.548387</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"    company  gender  totalyearlycompensation\n867  Google  Female            255969.635628\n868  Google    Male            282906.237260\n869  Google   Other            284193.548387"},"exec_count":19}},"pos":19,"start":1658512554145,"state":"done","type":"cell"}
{"cell_type":"code","end":1658523650763,"exec_count":77,"id":"fd9853","input":"import plotly.express as px","kernel":"ds_env","pos":25,"start":1658523650639,"state":"done","type":"cell"}
{"cell_type":"code","end":1658523655658,"exec_count":78,"id":"bb1786","input":"fig = px.histogram(df, x=\"yearsofexperience\", title = 'Distribution of Years of Experience in STEM')\nfig.show()","kernel":"ds_env","output":{"0":{"data":{"iframe":"56ef1b257735c883bfe708106a8f1936121fa731"}}},"pos":26,"start":1658523654996,"state":"done","type":"cell"}
{"cell_type":"code","end":1658523665654,"exec_count":79,"id":"427f40","input":"fig = px.histogram(df, x=\"basesalary\", title = 'Distribution of Base Salaries in STEM')\nfig.show()","kernel":"ds_env","output":{"0":{"data":{"iframe":"6c23ad050344f056bd6630f967a9a6e4c8a36df7"}}},"pos":27,"start":1658523665277,"state":"done","type":"cell"}
{"cell_type":"code","end":1658523667106,"exec_count":80,"id":"7d34df","input":"fig = px.histogram(df, x=\"totalyearlycompensation\", title = 'Distribution of Total Yearly Compensation in STEM', color = 'in_top_15')\nfig.show()","kernel":"ds_env","output":{"0":{"data":{"iframe":"b243b4985fee750f34462c9402407cf0d79c3e1b"}}},"pos":28,"start":1658523666960,"state":"done","type":"cell"}
{"cell_type":"code","end":1658523670704,"exec_count":82,"id":"1b6b5b","input":"fig = px.pie(companys, values='title', names='company', title='Top 10 Most Popular Tech Companies')\nfig.show()","kernel":"ds_env","output":{"0":{"data":{"iframe":"2060fa29d9edb36114b5f272887b65acfd8df399"}}},"pos":30,"start":1658523670598,"state":"done","type":"cell"}
{"cell_type":"code","end":1658523672358,"exec_count":83,"id":"165441","input":"gender_counts = df.groupby(by = 'gender')['company'].count().reset_index().head(3)\nfig = px.pie(gender_counts, values='company', names='gender', title='Gender Breakdown in STEM')\nfig.show()","kernel":"ds_env","output":{"0":{"data":{"iframe":"d43e84b9855bb582a41927f039e70a9c5c9c1564"}}},"pos":31,"start":1658523672303,"state":"done","type":"cell"}
{"cell_type":"code","end":1658523673759,"exec_count":84,"id":"c09b5e","input":"top_pay = df.groupby(by = 'company')['totalyearlycompensation'].mean().reset_index().sort_values(by = 'totalyearlycompensation', ascending = False).head(30)","kernel":"ds_env","pos":32,"start":1658523673746,"state":"done","type":"cell"}
{"cell_type":"code","end":1658523675649,"exec_count":85,"id":"962968","input":"fig = px.bar(top_pay, x='company', y='totalyearlycompensation', title = 'Top 30 STEM Companies with the Highest Average Yearly Pay')\nfig.show()","kernel":"ds_env","output":{"0":{"data":{"iframe":"cd98763506f152e581946878a7cd261ca72cc7ee"}}},"pos":33,"start":1658523675550,"state":"done","type":"cell"}
{"cell_type":"code","end":1658523676990,"exec_count":86,"id":"de98fb","input":"sw = df[df['title'] == 'Software Engineer']\nfig = px.histogram(sw, x=\"totalyearlycompensation\", title = 'Distribution of Software Engineers Total Yearly Compensation in STEM', color = 'state')\nfig.show()","kernel":"ds_env","output":{"0":{"data":{"iframe":"cb88bbe19d373df7a4e8c3e140a018afe975f0be"}}},"pos":34,"start":1658523676858,"state":"done","type":"cell"}
{"cell_type":"code","end":1658523683226,"exec_count":87,"id":"3fd2f5","input":"ds = df[df['title'] == 'Data Scientist']\nfig = px.histogram(ds, x=\"totalyearlycompensation\", title = 'Distribution of Data Scientists Total Yearly Compensation in STEM', color = 'state')\nfig.show()","kernel":"ds_env","output":{"0":{"data":{"iframe":"76a4ae4c478b53b31376362a3b7e7a023f342e1f"}}},"pos":35,"start":1658523683128,"state":"done","type":"cell"}
{"cell_type":"code","end":1658523757493,"exec_count":89,"id":"c64098","input":"companys = df.groupby(by = 'company').count().reset_index().sort_values(by = 'title', ascending = False).head(10)","kernel":"ds_env","pos":29,"start":1658523757465,"state":"done","type":"cell"}
{"cell_type":"code","end":1658525081812,"exec_count":113,"id":"603342","input":"import pandas as pd \nimport numpy as np","kernel":"ds_env","pos":0,"start":1658525081809,"state":"done","type":"cell"}
{"cell_type":"code","end":1658525083185,"exec_count":114,"id":"1a68e2","input":"df = pd.read_csv('Levels_Fyi_Salary_Data.csv') #reading in the data","kernel":"ds_env","pos":1,"start":1658525082701,"state":"done","type":"cell"}
{"cell_type":"code","end":1658525084032,"exec_count":115,"id":"c59768","input":"missing_cols = [] #checking what cols have nans\nfor col in df.columns:\n    if df[col].isnull().values.any():\n        num = df[col].isnull().sum()\n        missing_cols.append([col, num])","kernel":"ds_env","pos":3,"start":1658525083978,"state":"done","type":"cell"}
{"cell_type":"code","end":1658525085214,"exec_count":116,"id":"b4ca69","input":"missing_cols","kernel":"ds_env","output":{"0":{"data":{"text/plain":"[['company', 5],\n ['level', 119],\n ['tag', 854],\n ['gender', 19540],\n ['otherdetails', 22505],\n ['dmaid', 2],\n ['Race', 40215],\n ['Education', 32272]]"},"exec_count":116}},"pos":4,"scrolled":true,"start":1658525085206,"state":"done","type":"cell"}
{"cell_type":"code","end":1658525086409,"exec_count":117,"id":"eb8b2d","input":"df = df.drop(['Race', 'Education', 'otherdetails', 'level', 'tag', 'dmaid', 'cityid', 'rowNumber', 'timestamp'], axis = 1) #dropping useless cols","kernel":"ds_env","pos":5,"start":1658525086391,"state":"done","type":"cell"}
{"cell_type":"code","end":1658525088205,"exec_count":118,"id":"195bf8","input":"df.dropna(inplace = True) #dropping rows with nans\ndf.reset_index(drop=True, inplace=True) ","kernel":"ds_env","pos":6,"start":1658525088178,"state":"done","type":"cell"}
{"cell_type":"code","end":1658525091847,"exec_count":119,"id":"f8b460","input":"def get_state(x):\n    words = x.split(', ')\n    state = words[1]\n    if state == 'CA':\n        return 'CA'\n    elif state == 'WA':\n        return 'WA'\n    elif state == 'NY':\n        return 'NY'\n    else:\n        return 'Other'","kernel":"ds_env","pos":10,"start":1658525091844,"state":"done","type":"cell"}
{"cell_type":"code","end":1658525092681,"exec_count":120,"id":"fe547c","input":"df['state'] = df['location'].apply(get_state) #new cols abt states\ndf.drop(['location'], axis = 1, inplace = True)","kernel":"ds_env","pos":11,"start":1658525092653,"state":"done","type":"cell"}
{"cell_type":"code","end":1658525094586,"exec_count":121,"id":"cfe0bb","input":"top_15_popular = list(df['company'].value_counts().index)[:15]\ndef in_popular(x):\n    if x in top_15_popular:\n        return True\n    else:\n        return False\n    \ndf['in_top_15'] = df['company'].apply(in_popular) #new col abt top 15 companies","kernel":"ds_env","pos":14,"start":1658525094567,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":18,"id":"de362f","input":"df.groupby(by='gender')['basesalary'].mean()","output":{"0":{"data":{"text/plain":"gender\nFemale                             133823.203315\nMale                               136322.098381\nOther                              141050.000000\nTitle: Senior Software Engineer    177000.000000\nName: basesalary, dtype: float64"},"exec_count":18,"output_type":"execute_result"}},"pos":22,"type":"cell"}
{"cell_type":"code","exec_count":28,"id":"a5d38c","input":"df['gender'].value_counts()","output":{"0":{"data":{"text/plain":"Male                               35698\nFemale                              6999\nOther                                400\nTitle: Senior Software Engineer        1\nName: gender, dtype: int64"},"exec_count":28,"output_type":"execute_result"}},"pos":20,"type":"cell"}
{"cell_type":"code","exec_count":30,"id":"d9c1d1","input":"df = df[df['gender'] != 'Title: Senior Software Engineer']\ndf['gender'].value_counts()","output":{"0":{"data":{"text/plain":"Male      35698\nFemale     6999\nOther       400\nName: gender, dtype: int64"},"exec_count":30,"output_type":"execute_result"}},"pos":21,"type":"cell"}
{"cell_type":"markdown","id":"53c44c","input":"## Advanced Features\n\n","pos":38,"type":"cell"}
{"cell_type":"markdown","id":"b4af23","input":"## Feature Engineering and more Cleaning\n\n","pos":9,"type":"cell"}
{"cell_type":"markdown","id":"eacb79","input":"## Graphs\n\n","pos":24,"type":"cell"}
{"cell_type":"markdown","id":"f92802","input":"## Group By\n\n","pos":16,"type":"cell"}
{"end":1658512619086,"exec_count":21,"id":"299591","input":"df.bonus.describe()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"count      43098.000000\nmean       19077.574708\nstd        26566.573108\nmin            0.000000\n25%         2000.000000\n50%        14000.000000\n75%        26000.000000\nmax      1000000.000000\nName: bonus, dtype: float64"},"exec_count":21}},"pos":19.5,"start":1658512619068,"state":"done","type":"cell"}
{"end":1658523683235,"exec_count":88,"id":"3fc7d6","input":"#bryce simon - gender vs totalyearconsumption - scatterplots\n#cassidy max - totalyearlycompensation - legend with in top15 - histogram\n#aadya anaya - job positions in stem - pie chart\n#bryce simon - job titles and their base salarys - barchart\n#four groups - swe basesalary - histogram - states as legend","kernel":"ds_env","pos":37,"start":1658523683232,"state":"done","type":"cell"}
{"end":1658524343925,"exec_count":109,"id":"1bca34","input":"df = df[df['education'] != 'Missing']\ndf.reset_index(drop=True, inplace=True)\ndf.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>...</th>\n      <th>Highschool</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>state</th>\n      <th>in_top_15</th>\n      <th>education</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Capital One</td>\n      <td>Data Scientist</td>\n      <td>125000</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>121000.0</td>\n      <td>0.0</td>\n      <td>4000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Other</td>\n      <td>True</td>\n      <td>PHD</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Bloomberg</td>\n      <td>Software Engineer</td>\n      <td>170000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>142000.0</td>\n      <td>0.0</td>\n      <td>18000.0</td>\n      <td>Male</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NY</td>\n      <td>False</td>\n      <td>Masters</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Amazon</td>\n      <td>Data Scientist</td>\n      <td>332000</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>185000.0</td>\n      <td>17000.0</td>\n      <td>130000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>True</td>\n      <td>PHD</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Apple</td>\n      <td>Software Engineer</td>\n      <td>240000</td>\n      <td>3.0</td>\n      <td>3.0</td>\n      <td>150000.0</td>\n      <td>75000.0</td>\n      <td>15000.0</td>\n      <td>Female</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>True</td>\n      <td>PHD</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Synopsys</td>\n      <td>Software Engineer</td>\n      <td>310000</td>\n      <td>25.0</td>\n      <td>9.0</td>\n      <td>210000.0</td>\n      <td>40000.0</td>\n      <td>60000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>False</td>\n      <td>PHD</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 22 columns</p>\n</div>","text/plain":"       company              title  totalyearlycompensation  yearsofexperience  \\\n0  Capital One     Data Scientist                   125000                1.0   \n1    Bloomberg  Software Engineer                   170000                0.0   \n2       Amazon     Data Scientist                   332000                1.0   \n3        Apple  Software Engineer                   240000                3.0   \n4     Synopsys  Software Engineer                   310000               25.0   \n\n   yearsatcompany  basesalary  stockgrantvalue     bonus  gender  \\\n0             0.0    121000.0              0.0    4000.0    Male   \n1             0.0    142000.0              0.0   18000.0    Male   \n2             0.0    185000.0          17000.0  130000.0    Male   \n3             3.0    150000.0          75000.0   15000.0  Female   \n4             9.0    210000.0          40000.0   60000.0    Male   \n\n   Masters_Degree  ...  Highschool  Some_College  Race_Asian  Race_White  \\\n0               0  ...           0             0           0           0   \n1               1  ...           0             0           0           0   \n2               0  ...           0             0           0           0   \n3               0  ...           0             0           0           0   \n4               0  ...           0             0           0           0   \n\n   Race_Two_Or_More  Race_Black  Race_Hispanic  state  in_top_15 education  \n0                 0           0              0  Other       True       PHD  \n1                 0           0              0     NY      False   Masters  \n2                 0           0              0     CA       True       PHD  \n3                 0           0              0     CA       True       PHD  \n4                 0           0              0     CA      False       PHD  \n\n[5 rows x 22 columns]"},"exec_count":109}},"pos":15.875,"start":1658524343894,"state":"done","type":"cell"}
{"end":1658524346493,"exec_count":110,"id":"364d81","input":"def check_race(asian, white, two, black, hispanic):\n    if asian == 1:\n        return 'Asian'\n    elif white == 1:\n        return 'White'\n    elif two == 1:\n        return 'Two'\n    elif black == 1:\n        return \"Black\"\n    elif hispanic == 1:\n        return 'Hispanic'\n    else:\n        return 'Missing'\n    \ndf['race'] = df.apply(lambda x: check_race(x.Race_Asian, x.Race_White, x.Race_Two_Or_More, x.Race_Black, x.Race_Hispanic), axis=1)","kernel":"ds_env","pos":15.9375,"start":1658524345131,"state":"done","type":"cell"}
{"end":1658524346518,"exec_count":111,"id":"3fd6a4","input":"len(df[df['race'] == 'Missing'])","kernel":"ds_env","output":{"0":{"data":{"text/plain":"6175"},"exec_count":111}},"pos":15.96875,"start":1658524346502,"state":"done","type":"cell"}
{"end":1658524347734,"exec_count":112,"id":"7fedb7","input":"df = df[df['race'] != 'Missing']\ndf.reset_index(drop=True, inplace=True)\ndf","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>company</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>basesalary</th>\n      <th>stockgrantvalue</th>\n      <th>bonus</th>\n      <th>gender</th>\n      <th>Masters_Degree</th>\n      <th>...</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>state</th>\n      <th>in_top_15</th>\n      <th>education</th>\n      <th>race</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>400000</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>210000.0</td>\n      <td>145000.0</td>\n      <td>45000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>True</td>\n      <td>PHD</td>\n      <td>Asian</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>136000</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>124000.0</td>\n      <td>1000.0</td>\n      <td>11000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>WA</td>\n      <td>True</td>\n      <td>Bachelors</td>\n      <td>Two</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Google</td>\n      <td>Software Engineer</td>\n      <td>337000</td>\n      <td>6.0</td>\n      <td>6.0</td>\n      <td>177000.0</td>\n      <td>125000.0</td>\n      <td>36000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>True</td>\n      <td>Bachelors</td>\n      <td>Asian</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Microsoft</td>\n      <td>Software Engineer</td>\n      <td>222000</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>164000.0</td>\n      <td>38000.0</td>\n      <td>20000.0</td>\n      <td>Male</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>WA</td>\n      <td>True</td>\n      <td>Masters</td>\n      <td>Asian</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Blend</td>\n      <td>Software Engineer</td>\n      <td>187000</td>\n      <td>5.0</td>\n      <td>0.0</td>\n      <td>165000.0</td>\n      <td>22000.0</td>\n      <td>0.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>False</td>\n      <td>Bachelors</td>\n      <td>White</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>21584</th>\n      <td>Facebook</td>\n      <td>Software Engineering Manager</td>\n      <td>1470000</td>\n      <td>9.0</td>\n      <td>7.0</td>\n      <td>290000.0</td>\n      <td>1100.0</td>\n      <td>80000.0</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>True</td>\n      <td>Bachelors</td>\n      <td>Asian</td>\n    </tr>\n    <tr>\n      <th>21585</th>\n      <td>Google</td>\n      <td>Product Manager</td>\n      <td>4500000</td>\n      <td>20.0</td>\n      <td>14.0</td>\n      <td>450000.0</td>\n      <td>3700.0</td>\n      <td>350000.0</td>\n      <td>Male</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>True</td>\n      <td>Masters</td>\n      <td>Asian</td>\n    </tr>\n    <tr>\n      <th>21586</th>\n      <td>Zapier</td>\n      <td>Software Engineering Manager</td>\n      <td>1605000</td>\n      <td>16.0</td>\n      <td>2.0</td>\n      <td>250000.0</td>\n      <td>1305.0</td>\n      <td>50000.0</td>\n      <td>Female</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Other</td>\n      <td>False</td>\n      <td>Masters</td>\n      <td>White</td>\n    </tr>\n    <tr>\n      <th>21587</th>\n      <td>Facebook</td>\n      <td>Software Engineering Manager</td>\n      <td>2372000</td>\n      <td>22.0</td>\n      <td>2.0</td>\n      <td>315000.0</td>\n      <td>1933.0</td>\n      <td>124000.0</td>\n      <td>Male</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>True</td>\n      <td>Masters</td>\n      <td>Black</td>\n    </tr>\n    <tr>\n      <th>21588</th>\n      <td>Facebook</td>\n      <td>Product Manager</td>\n      <td>4980000</td>\n      <td>17.0</td>\n      <td>0.0</td>\n      <td>380000.0</td>\n      <td>4400.0</td>\n      <td>200000.0</td>\n      <td>Male</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>CA</td>\n      <td>True</td>\n      <td>Masters</td>\n      <td>Asian</td>\n    </tr>\n  </tbody>\n</table>\n<p>21589 rows × 23 columns</p>\n</div>","text/plain":"         company                         title  totalyearlycompensation  \\\n0         Google             Software Engineer                   400000   \n1      Microsoft             Software Engineer                   136000   \n2         Google             Software Engineer                   337000   \n3      Microsoft             Software Engineer                   222000   \n4          Blend             Software Engineer                   187000   \n...          ...                           ...                      ...   \n21584   Facebook  Software Engineering Manager                  1470000   \n21585     Google               Product Manager                  4500000   \n21586     Zapier  Software Engineering Manager                  1605000   \n21587   Facebook  Software Engineering Manager                  2372000   \n21588   Facebook               Product Manager                  4980000   \n\n       yearsofexperience  yearsatcompany  basesalary  stockgrantvalue  \\\n0                    5.0             5.0    210000.0         145000.0   \n1                    3.0             2.0    124000.0           1000.0   \n2                    6.0             6.0    177000.0         125000.0   \n3                    4.0             4.0    164000.0          38000.0   \n4                    5.0             0.0    165000.0          22000.0   \n...                  ...             ...         ...              ...   \n21584                9.0             7.0    290000.0           1100.0   \n21585               20.0            14.0    450000.0           3700.0   \n21586               16.0             2.0    250000.0           1305.0   \n21587               22.0             2.0    315000.0           1933.0   \n21588               17.0             0.0    380000.0           4400.0   \n\n          bonus  gender  Masters_Degree  ...  Some_College  Race_Asian  \\\n0       45000.0    Male               0  ...             0           1   \n1       11000.0    Male               0  ...             0           0   \n2       36000.0    Male               0  ...             0           1   \n3       20000.0    Male               1  ...             0           1   \n4           0.0    Male               0  ...             0           0   \n...         ...     ...             ...  ...           ...         ...   \n21584   80000.0    Male               0  ...             0           1   \n21585  350000.0    Male               1  ...             0           1   \n21586   50000.0  Female               1  ...             0           0   \n21587  124000.0    Male               1  ...             0           0   \n21588  200000.0    Male               1  ...             0           1   \n\n       Race_White  Race_Two_Or_More  Race_Black  Race_Hispanic  state  \\\n0               0                 0           0              0     CA   \n1               0                 1           0              0     WA   \n2               0                 0           0              0     CA   \n3               0                 0           0              0     WA   \n4               1                 0           0              0     CA   \n...           ...               ...         ...            ...    ...   \n21584           0                 0           0              0     CA   \n21585           0                 0           0              0     CA   \n21586           1                 0           0              0  Other   \n21587           0                 0           1              0     CA   \n21588           0                 0           0              0     CA   \n\n       in_top_15  education   race  \n0           True        PHD  Asian  \n1           True  Bachelors    Two  \n2           True  Bachelors  Asian  \n3           True    Masters  Asian  \n4          False  Bachelors  White  \n...          ...        ...    ...  \n21584       True  Bachelors  Asian  \n21585       True    Masters  Asian  \n21586      False    Masters  White  \n21587       True    Masters  Black  \n21588       True    Masters  Asian  \n\n[21589 rows x 23 columns]"},"exec_count":112}},"pos":15.984375,"start":1658524347696,"state":"done","type":"cell"}
{"end":1658525095905,"exec_count":122,"id":"ded399","input":"def check_education(master, bach, doc, high, some):\n    if master == 1:\n        return \"Masters\"\n    elif bach == 1:\n        return \"Bachelors\"\n    elif doc == 1:\n        return \"PHD\"\n    elif high == 1:\n        return 'Highschool'\n    elif some == 1:\n        return \"Some\"\n    else:\n        return \"Missing\"","kernel":"ds_env","pos":15,"start":1658525095891,"state":"done","type":"cell"}
{"end":1658525099571,"exec_count":123,"id":"dc5b51","input":"df['education'] = df.apply(lambda x: check_education(x.Masters_Degree, x.Bachelors_Degree, x.Doctorate_Degree, x.Highschool, x.Some_College), axis=1) #new cols abt education","kernel":"ds_env","pos":15.5,"start":1658525097933,"state":"done","type":"cell"}
{"end":1658525101461,"exec_count":124,"id":"9b9bd4","input":"len(df[df['education'] == 'Missing'])","kernel":"ds_env","output":{"0":{"data":{"text/plain":"15334"},"exec_count":124}},"pos":15.75,"start":1658525101451,"state":"done","type":"cell"}
{"id":"030f8f","input":"#company, title, location, race, gender, education, experience so far","pos":39,"type":"cell"}
{"id":"1efb86","input":"","pos":49,"type":"cell"}
{"id":0,"time":1658507337568,"type":"user"}
{"last_load":1658507339367,"type":"file"}