{"backend_state":"running","connection_file":"/projects/0bcf82e6-7441-4432-a339-19b67c22cc5c/.local/share/jupyter/runtime/kernel-661d6df2-5308-49e2-8180-df2b3bb6a972.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1658867668004,"exec_count":86,"id":"1685b7","input":"y=np.sin(x)","kernel":"ds_env","pos":37,"start":1658867668002,"state":"done","type":"cell"}
{"cell_type":"code","end":1658867668560,"exec_count":87,"id":"6ac446","input":"plt.plot(x,y,'-ok');","kernel":"ds_env","pos":38,"start":1658867668486,"state":"done","type":"cell"}
{"cell_type":"code","end":1658867684028,"exec_count":90,"id":"a8c33a","input":"markersize=15","kernel":"ds_env","pos":39,"start":1658867684021,"state":"done","type":"cell"}
{"cell_type":"code","end":1658867685128,"exec_count":91,"id":"864437","input":"fig=px.pie(popular_title,values='company',names='title',title='Job Positions in the Data Science and STEM Feild') fig.show()x","kernel":"ds_env","output":{"0":{"ename":"SyntaxError","evalue":"invalid syntax (3559243612.py, line 1)","traceback":["\u001b[0;36m  Input \u001b[0;32mIn [91]\u001b[0;36m\u001b[0m\n\u001b[0;31m    fig=px.pie(popular_title,values='company',names='title',title='Job Positions in the Data Science and STEM Feild') fig.show()x\u001b[0m\n\u001b[0m                                                                                                                      ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}},"pos":40,"start":1658867685110,"state":"done","type":"cell"}
{"cell_type":"code","end":1658867686397,"exec_count":92,"id":"e366c3","input":"import numpy as np","kernel":"ds_env","pos":41,"start":1658867686391,"state":"done","type":"cell"}
{"cell_type":"code","end":1658867687412,"exec_count":93,"id":"ac7e7f","input":"x=np.random.normal(size=20, loc=2)","kernel":"ds_env","pos":42,"start":1658867687401,"state":"done","type":"cell"}
{"cell_type":"code","end":1658867688300,"exec_count":94,"id":"e7b157","input":"y=np.random.normal(size=20, loc=6)","kernel":"ds_env","pos":43,"start":1658867688295,"state":"done","type":"cell"}
{"cell_type":"code","end":1658867689242,"exec_count":95,"id":"dc225b","input":"import matplotlib.pyplot as plt","kernel":"ds_env","pos":44,"start":1658867689124,"state":"done","type":"cell"}
{"cell_type":"code","end":1658867690098,"exec_count":96,"id":"b37624","input":"plt.scatter(x,y)","kernel":"ds_env","output":{"0":{"data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7f38b063a310>"},"exec_count":96}},"pos":45,"start":1658867690039,"state":"done","type":"cell"}
{"cell_type":"code","end":1658867690912,"exec_count":97,"id":"7b33e0","input":"plt.title('Basic Scatter plot')","kernel":"ds_env","output":{"0":{"data":{"text/plain":"Text(0.5, 1.0, 'Basic Scatter plot')"},"exec_count":97}},"pos":46,"start":1658867690860,"state":"done","type":"cell"}
{"cell_type":"code","end":1658867691758,"exec_count":98,"id":"9e5676","input":"plt.xlabel('x')","kernel":"ds_env","output":{"0":{"data":{"text/plain":"Text(0.5, 28.383333333333326, 'x')"},"exec_count":98}},"pos":47,"start":1658867691708,"state":"done","type":"cell"}
{"cell_type":"code","end":1658867692604,"exec_count":99,"id":"ba7587","input":"plt.ylabel('y')","kernel":"ds_env","output":{"0":{"data":{"text/plain":"Text(61.83333333333333, 0.5, 'y')"},"exec_count":99}},"pos":48,"start":1658867692562,"state":"done","type":"cell"}
{"cell_type":"code","end":1658867693319,"exec_count":100,"id":"fdb34b","input":"plt.show()","kernel":"ds_env","pos":49,"start":1658867693313,"state":"done","type":"cell"}
{"cell_type":"code","end":1658867694106,"exec_count":101,"id":"473dc2","input":"fig=px.pie(popular_titles,values='company',names='title',title='Job Positions in the Data Science and STEM Feild')fig.show()","kernel":"ds_env","output":{"0":{"ename":"SyntaxError","evalue":"invalid syntax (2524585650.py, line 1)","traceback":["\u001b[0;36m  Input \u001b[0;32mIn [101]\u001b[0;36m\u001b[0m\n\u001b[0;31m    fig=px.pie(popular_titles,values='company',names='title',title='Job Positions in the Data Science and STEM Feild')fig.show()\u001b[0m\n\u001b[0m                                                                                                                      ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}},"pos":50,"start":1658867694097,"state":"done","type":"cell"}
{"cell_type":"code","end":1658867695220,"exec_count":102,"id":"b73d33","input":"px.scatter(df,x='basesalary',y='years'ofexperince',title='c'orrelation Between Base Salary,Years Of Experince Of Different Companies,And Gender',color='gender')","kernel":"ds_env","output":{"0":{"ename":"SyntaxError","evalue":"invalid syntax (1148687744.py, line 1)","traceback":["\u001b[0;36m  Input \u001b[0;32mIn [102]\u001b[0;36m\u001b[0m\n\u001b[0;31m    px.scatter(df,x='basesalary',y='years'ofexperince',title='c'orrelation Between Base Salary,Years Of Experince Of Different Companies,And Gender',color='gender')\u001b[0m\n\u001b[0m                                          ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}},"pos":51,"start":1658867695218,"state":"done","type":"cell"}
{"cell_type":"code","end":1658867696073,"exec_count":103,"id":"95af35","input":"datafram.describe(based.coding)find","kernel":"ds_env","output":{"0":{"ename":"SyntaxError","evalue":"invalid syntax (2728870374.py, line 1)","traceback":["\u001b[0;36m  Input \u001b[0;32mIn [103]\u001b[0;36m\u001b[0m\n\u001b[0;31m    datafram.describe(based.coding)find\u001b[0m\n\u001b[0m                                   ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}},"pos":52,"start":1658867696069,"state":"done","type":"cell"}
{"cell_type":"code","end":1658867696921,"exec_count":104,"id":"18137a","input":"def Average(l):avg=sum(1)/len(1)return.avg.my_list=[2,4,6,8,10]average","kernel":"ds_env","output":{"0":{"ename":"SyntaxError","evalue":"invalid syntax (2189669405.py, line 1)","traceback":["\u001b[0;36m  Input \u001b[0;32mIn [104]\u001b[0;36m\u001b[0m\n\u001b[0;31m    def Average(l):avg=sum(1)/len(1)return.avg.my_list=[2,4,6,8,10]average\u001b[0m\n\u001b[0m                                    ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}},"pos":53,"start":1658867696901,"state":"done","type":"cell"}
{"cell_type":"code","end":1658867697744,"exec_count":105,"id":"6793b9","input":"softeng=df[df['title']=='Software Engineer'] plot12=px.histogram(softeng,x='basesalary',title='Software Engineer Base Salary per State',color='state'","kernel":"ds_env","output":{"0":{"ename":"SyntaxError","evalue":"invalid syntax (1518489324.py, line 1)","traceback":["\u001b[0;36m  Input \u001b[0;32mIn [105]\u001b[0;36m\u001b[0m\n\u001b[0;31m    softeng=df[df['title']=='Software Engineer'] plot12=px.histogram(softeng,x='basesalary',title='Software Engineer Base Salary per State',color='state'\u001b[0m\n\u001b[0m                                                 ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}},"pos":54,"start":1658867697740,"state":"done","type":"cell"}
{"cell_type":"code","end":1658867698592,"exec_count":106,"id":"8b8a5c","input":"df = df[df['basesalary']!= 0]","kernel":"ds_env","output":{"0":{"ename":"KeyError","evalue":"'basesalary'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/indexes/base.py:3621\u001b[0m, in \u001b[0;36mIndex.get_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3620\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[0;32m-> 3621\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_engine\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mcasted_key\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   3622\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/_libs/index.pyx:136\u001b[0m, in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/_libs/index.pyx:163\u001b[0m, in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n","File \u001b[0;32mpandas/_libs/hashtable_class_helper.pxi:5198\u001b[0m, in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n","File \u001b[0;32mpandas/_libs/hashtable_class_helper.pxi:5206\u001b[0m, in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'basesalary'","\nThe above exception was the direct cause of the following exception:\n","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","Input \u001b[0;32mIn [106]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0m df \u001b[38;5;241m=\u001b[39m df[\u001b[43mdf\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mbasesalary\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[38;5;241m!=\u001b[39m \u001b[38;5;241m0\u001b[39m]\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/frame.py:3505\u001b[0m, in \u001b[0;36mDataFrame.__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3503\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mcolumns\u001b[38;5;241m.\u001b[39mnlevels \u001b[38;5;241m>\u001b[39m \u001b[38;5;241m1\u001b[39m:\n\u001b[1;32m   3504\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_getitem_multilevel(key)\n\u001b[0;32m-> 3505\u001b[0m indexer \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcolumns\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mkey\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   3506\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m is_integer(indexer):\n\u001b[1;32m   3507\u001b[0m     indexer \u001b[38;5;241m=\u001b[39m [indexer]\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/indexes/base.py:3623\u001b[0m, in \u001b[0;36mIndex.get_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3621\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_engine\u001b[38;5;241m.\u001b[39mget_loc(casted_key)\n\u001b[1;32m   3622\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n\u001b[0;32m-> 3623\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(key) \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01merr\u001b[39;00m\n\u001b[1;32m   3624\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mTypeError\u001b[39;00m:\n\u001b[1;32m   3625\u001b[0m     \u001b[38;5;66;03m# If we have a listlike key, _check_indexing_error will raise\u001b[39;00m\n\u001b[1;32m   3626\u001b[0m     \u001b[38;5;66;03m#  InvalidIndexError. Otherwise we fall through and re-raise\u001b[39;00m\n\u001b[1;32m   3627\u001b[0m     \u001b[38;5;66;03m#  the TypeError.\u001b[39;00m\n\u001b[1;32m   3628\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_check_indexing_error(key)\n","\u001b[0;31mKeyError\u001b[0m: 'basesalary'"]}},"pos":55,"scrolled":true,"start":1658867698536,"state":"done","type":"cell"}
{"cell_type":"code","end":1658867699425,"exec_count":107,"id":"07ff83","input":"defcheck_education(master,bach,doc,","kernel":"ds_env","output":{"0":{"ename":"SyntaxError","evalue":"unexpected EOF while parsing (1058456208.py, line 1)","traceback":["\u001b[0;36m  Input \u001b[0;32mIn [107]\u001b[0;36m\u001b[0m\n\u001b[0;31m    defcheck_education(master,bach,doc,\u001b[0m\n\u001b[0m                                       ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m unexpected EOF while parsing\n"]}},"pos":56,"start":1658867699423,"state":"done","type":"cell"}
{"cell_type":"code","end":1658868080249,"exec_count":109,"id":"ef7797","input":"new.df = new_df.drop(['company', 'title', 'gender', 'education', 'race', 'state', 'in_top_15'], axis = 1)","kernel":"ds_env","output":{"0":{"ename":"NameError","evalue":"name 'new_df' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","Input \u001b[0;32mIn [109]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0m new\u001b[38;5;241m.\u001b[39mdf \u001b[38;5;241m=\u001b[39m \u001b[43mnew_df\u001b[49m\u001b[38;5;241m.\u001b[39mdrop([\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mcompany\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mtitle\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mgender\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124meducation\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mrace\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mstate\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124min_top_15\u001b[39m\u001b[38;5;124m'\u001b[39m], axis \u001b[38;5;241m=\u001b[39m \u001b[38;5;241m1\u001b[39m)\n","\u001b[0;31mNameError\u001b[0m: name 'new_df' is not defined"]}},"pos":58,"scrolled":true,"start":1658868080202,"state":"done","type":"cell"}
{"cell_type":"code","end":1658870483795,"exec_count":110,"id":"ca2ada","input":"import pandas as pd\nimport numpy as np","kernel":"ds_env","pos":0,"start":1658870483782,"state":"done","type":"cell"}
{"cell_type":"code","end":1658870486460,"exec_count":111,"id":"1f91a6","input":"df = pd.read_csv(\"Levels_Fyi_Salary_Data.csv\")","kernel":"ds_env","pos":2,"start":1658870486054,"state":"done","type":"cell"}
{"cell_type":"code","end":1658870486818,"exec_count":112,"id":"b6eafa","input":"df.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>timestamp</th>\n      <th>company</th>\n      <th>level</th>\n      <th>title</th>\n      <th>totalyearlycompensation</th>\n      <th>location</th>\n      <th>yearsofexperience</th>\n      <th>yearsatcompany</th>\n      <th>tag</th>\n      <th>basesalary</th>\n      <th>...</th>\n      <th>Doctorate_Degree</th>\n      <th>Highschool</th>\n      <th>Some_College</th>\n      <th>Race_Asian</th>\n      <th>Race_White</th>\n      <th>Race_Two_Or_More</th>\n      <th>Race_Black</th>\n      <th>Race_Hispanic</th>\n      <th>Race</th>\n      <th>Education</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>6/7/2017 11:33:27</td>\n      <td>Oracle</td>\n      <td>L3</td>\n      <td>Product Manager</td>\n      <td>127000</td>\n      <td>Redwood City, CA</td>\n      <td>1.5</td>\n      <td>1.5</td>\n      <td>NaN</td>\n      <td>107000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>6/10/2017 17:11:29</td>\n      <td>eBay</td>\n      <td>SE 2</td>\n      <td>Software Engineer</td>\n      <td>100000</td>\n      <td>San Francisco, CA</td>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>6/11/2017 14:53:57</td>\n      <td>Amazon</td>\n      <td>L7</td>\n      <td>Product Manager</td>\n      <td>310000</td>\n      <td>Seattle, WA</td>\n      <td>8.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>155000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>6/17/2017 0:23:14</td>\n      <td>Apple</td>\n      <td>M1</td>\n      <td>Software Engineering Manager</td>\n      <td>372000</td>\n      <td>Sunnyvale, CA</td>\n      <td>7.0</td>\n      <td>5.0</td>\n      <td>NaN</td>\n      <td>157000.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>6/20/2017 10:58:51</td>\n      <td>Microsoft</td>\n      <td>60</td>\n      <td>Software Engineer</td>\n      <td>157000</td>\n      <td>Mountain View, CA</td>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 29 columns</p>\n</div>","text/plain":"            timestamp    company level                         title  \\\n0   6/7/2017 11:33:27     Oracle    L3               Product Manager   \n1  6/10/2017 17:11:29       eBay  SE 2             Software Engineer   \n2  6/11/2017 14:53:57     Amazon    L7               Product Manager   \n3   6/17/2017 0:23:14      Apple    M1  Software Engineering Manager   \n4  6/20/2017 10:58:51  Microsoft    60             Software Engineer   \n\n   totalyearlycompensation           location  yearsofexperience  \\\n0                   127000   Redwood City, CA                1.5   \n1                   100000  San Francisco, CA                5.0   \n2                   310000        Seattle, WA                8.0   \n3                   372000      Sunnyvale, CA                7.0   \n4                   157000  Mountain View, CA                5.0   \n\n   yearsatcompany  tag  basesalary  ...  Doctorate_Degree  Highschool  \\\n0             1.5  NaN    107000.0  ...                 0           0   \n1             3.0  NaN         0.0  ...                 0           0   \n2             0.0  NaN    155000.0  ...                 0           0   \n3             5.0  NaN    157000.0  ...                 0           0   \n4             3.0  NaN         0.0  ...                 0           0   \n\n  Some_College Race_Asian  Race_White  Race_Two_Or_More  Race_Black  \\\n0            0          0           0                 0           0   \n1            0          0           0                 0           0   \n2            0          0           0                 0           0   \n3            0          0           0                 0           0   \n4            0          0           0                 0           0   \n\n   Race_Hispanic  Race  Education  \n0              0   NaN        NaN  \n1              0   NaN        NaN  \n2              0   NaN        NaN  \n3              0   NaN        NaN  \n4              0   NaN        NaN  \n\n[5 rows x 29 columns]"},"exec_count":112}},"pos":3,"scrolled":true,"start":1658870486799,"state":"done","type":"cell"}
{"cell_type":"code","end":1658870487600,"exec_count":113,"id":"bc70a2","input":"df.columns","kernel":"ds_env","output":{"0":{"data":{"text/plain":"Index(['timestamp', 'company', 'level', 'title', 'totalyearlycompensation',\n       'location', 'yearsofexperience', 'yearsatcompany', 'tag', 'basesalary',\n       'stockgrantvalue', 'bonus', 'gender', 'otherdetails', 'cityid', 'dmaid',\n       'rowNumber', 'Masters_Degree', 'Bachelors_Degree', 'Doctorate_Degree',\n       'Highschool', 'Some_College', 'Race_Asian', 'Race_White',\n       'Race_Two_Or_More', 'Race_Black', 'Race_Hispanic', 'Race', 'Education'],\n      dtype='object')"},"exec_count":113}},"pos":4,"scrolled":true,"start":1658870487597,"state":"done","type":"cell"}
{"cell_type":"code","end":1658870488490,"exec_count":114,"id":"2ce1f4","input":"df['company'].isnull().sum","kernel":"ds_env","output":{"0":{"data":{"text/plain":"<bound method NDFrame._add_numeric_operations.<locals>.sum of 0        False\n1        False\n2        False\n3        False\n4        False\n         ...  \n62637    False\n62638    False\n62639    False\n62640    False\n62641    False\nName: company, Length: 62642, dtype: bool>"},"exec_count":114}},"pos":5,"start":1658870488485,"state":"done","type":"cell"}
{"cell_type":"code","end":1658870489550,"exec_count":115,"id":"97b831","input":"df.columns","kernel":"ds_env","output":{"0":{"data":{"text/plain":"Index(['timestamp', 'company', 'level', 'title', 'totalyearlycompensation',\n       'location', 'yearsofexperience', 'yearsatcompany', 'tag', 'basesalary',\n       'stockgrantvalue', 'bonus', 'gender', 'otherdetails', 'cityid', 'dmaid',\n       'rowNumber', 'Masters_Degree', 'Bachelors_Degree', 'Doctorate_Degree',\n       'Highschool', 'Some_College', 'Race_Asian', 'Race_White',\n       'Race_Two_Or_More', 'Race_Black', 'Race_Hispanic', 'Race', 'Education'],\n      dtype='object')"},"exec_count":115}},"pos":6,"start":1658870489538,"state":"done","type":"cell"}
{"cell_type":"code","end":1658870490201,"exec_count":116,"id":"5e7018","input":"df['otherdetails']","kernel":"ds_env","output":{"0":{"data":{"text/plain":"0        NaN\n1        NaN\n2        NaN\n3        NaN\n4        NaN\n        ... \n62637    NaN\n62638    NaN\n62639    NaN\n62640    NaN\n62641    NaN\nName: otherdetails, Length: 62642, dtype: object"},"exec_count":116}},"pos":7,"scrolled":true,"start":1658870490189,"state":"done","type":"cell"}
{"cell_type":"code","end":1658870491034,"exec_count":117,"id":"be68c3","input":"df=df.drop(['Race'],axis=1)","kernel":"ds_env","pos":8,"start":1658870491024,"state":"done","type":"cell"}
{"cell_type":"code","end":1658870491936,"exec_count":118,"id":"0dbc6c","input":"df=df.drop(['Race'],axis=1)","kernel":"ds_env","output":{"0":{"ename":"KeyError","evalue":"\"['Race'] not found in axis\"","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","Input \u001b[0;32mIn [118]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0m df\u001b[38;5;241m=\u001b[39m\u001b[43mdf\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mdrop\u001b[49m\u001b[43m(\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mRace\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m,\u001b[49m\u001b[43maxis\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;241;43m1\u001b[39;49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/util/_decorators.py:311\u001b[0m, in \u001b[0;36mdeprecate_nonkeyword_arguments.<locals>.decorate.<locals>.wrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    305\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mlen\u001b[39m(args) \u001b[38;5;241m>\u001b[39m num_allow_args:\n\u001b[1;32m    306\u001b[0m     warnings\u001b[38;5;241m.\u001b[39mwarn(\n\u001b[1;32m    307\u001b[0m         msg\u001b[38;5;241m.\u001b[39mformat(arguments\u001b[38;5;241m=\u001b[39marguments),\n\u001b[1;32m    308\u001b[0m         \u001b[38;5;167;01mFutureWarning\u001b[39;00m,\n\u001b[1;32m    309\u001b[0m         stacklevel\u001b[38;5;241m=\u001b[39mstacklevel,\n\u001b[1;32m    310\u001b[0m     )\n\u001b[0;32m--> 311\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mfunc\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/frame.py:4954\u001b[0m, in \u001b[0;36mDataFrame.drop\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[1;32m   4806\u001b[0m \u001b[38;5;129m@deprecate_nonkeyword_arguments\u001b[39m(version\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, allowed_args\u001b[38;5;241m=\u001b[39m[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mself\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mlabels\u001b[39m\u001b[38;5;124m\"\u001b[39m])\n\u001b[1;32m   4807\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mdrop\u001b[39m(\n\u001b[1;32m   4808\u001b[0m     \u001b[38;5;28mself\u001b[39m,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   4815\u001b[0m     errors: \u001b[38;5;28mstr\u001b[39m \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mraise\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[1;32m   4816\u001b[0m ):\n\u001b[1;32m   4817\u001b[0m     \u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[1;32m   4818\u001b[0m \u001b[38;5;124;03m    Drop specified labels from rows or columns.\u001b[39;00m\n\u001b[1;32m   4819\u001b[0m \n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   4952\u001b[0m \u001b[38;5;124;03m            weight  1.0     0.8\u001b[39;00m\n\u001b[1;32m   4953\u001b[0m \u001b[38;5;124;03m    \"\"\"\u001b[39;00m\n\u001b[0;32m-> 4954\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43msuper\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mdrop\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m   4955\u001b[0m \u001b[43m        \u001b[49m\u001b[43mlabels\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlabels\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   4956\u001b[0m \u001b[43m        \u001b[49m\u001b[43maxis\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43maxis\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   4957\u001b[0m \u001b[43m        \u001b[49m\u001b[43mindex\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mindex\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   4958\u001b[0m \u001b[43m        \u001b[49m\u001b[43mcolumns\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcolumns\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   4959\u001b[0m \u001b[43m        \u001b[49m\u001b[43mlevel\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlevel\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   4960\u001b[0m \u001b[43m        \u001b[49m\u001b[43minplace\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43minplace\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   4961\u001b[0m \u001b[43m        \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43merrors\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   4962\u001b[0m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/generic.py:4267\u001b[0m, in \u001b[0;36mNDFrame.drop\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[1;32m   4265\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m axis, labels \u001b[38;5;129;01min\u001b[39;00m axes\u001b[38;5;241m.\u001b[39mitems():\n\u001b[1;32m   4266\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m labels \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m-> 4267\u001b[0m         obj \u001b[38;5;241m=\u001b[39m \u001b[43mobj\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_drop_axis\u001b[49m\u001b[43m(\u001b[49m\u001b[43mlabels\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43maxis\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlevel\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlevel\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43merrors\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   4269\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m inplace:\n\u001b[1;32m   4270\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_update_inplace(obj)\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/generic.py:4311\u001b[0m, in \u001b[0;36mNDFrame._drop_axis\u001b[0;34m(self, labels, axis, level, errors, consolidate, only_slice)\u001b[0m\n\u001b[1;32m   4309\u001b[0m         new_axis \u001b[38;5;241m=\u001b[39m axis\u001b[38;5;241m.\u001b[39mdrop(labels, level\u001b[38;5;241m=\u001b[39mlevel, errors\u001b[38;5;241m=\u001b[39merrors)\n\u001b[1;32m   4310\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m-> 4311\u001b[0m         new_axis \u001b[38;5;241m=\u001b[39m \u001b[43maxis\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mdrop\u001b[49m\u001b[43m(\u001b[49m\u001b[43mlabels\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43merrors\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   4312\u001b[0m     indexer \u001b[38;5;241m=\u001b[39m axis\u001b[38;5;241m.\u001b[39mget_indexer(new_axis)\n\u001b[1;32m   4314\u001b[0m \u001b[38;5;66;03m# Case for non-unique axis\u001b[39;00m\n\u001b[1;32m   4315\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/indexes/base.py:6644\u001b[0m, in \u001b[0;36mIndex.drop\u001b[0;34m(self, labels, errors)\u001b[0m\n\u001b[1;32m   6642\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m mask\u001b[38;5;241m.\u001b[39many():\n\u001b[1;32m   6643\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m errors \u001b[38;5;241m!=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mignore\u001b[39m\u001b[38;5;124m\"\u001b[39m:\n\u001b[0;32m-> 6644\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;132;01m{\u001b[39;00m\u001b[38;5;28mlist\u001b[39m(labels[mask])\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m not found in axis\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m   6645\u001b[0m     indexer \u001b[38;5;241m=\u001b[39m indexer[\u001b[38;5;241m~\u001b[39mmask]\n\u001b[1;32m   6646\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mdelete(indexer)\n","\u001b[0;31mKeyError\u001b[0m: \"['Race'] not found in axis\""]}},"pos":9,"scrolled":true,"start":1658870491871,"state":"done","type":"cell"}
{"cell_type":"code","end":1658870492692,"exec_count":119,"id":"8f005d","input":"df=df.drop(['Race'],axis=1","kernel":"ds_env","output":{"0":{"ename":"SyntaxError","evalue":"unexpected EOF while parsing (847039044.py, line 1)","traceback":["\u001b[0;36m  Input \u001b[0;32mIn [119]\u001b[0;36m\u001b[0m\n\u001b[0;31m    df=df.drop(['Race'],axis=1\u001b[0m\n\u001b[0m                              ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m unexpected EOF while parsing\n"]}},"pos":10,"start":1658870492683,"state":"done","type":"cell"}
{"cell_type":"code","end":1658870493553,"exec_count":120,"id":"50196e","input":"df.dropna(inplace=True)\ndf.reset_index(drop=True,inplace=True)_","kernel":"ds_env","output":{"0":{"ename":"SyntaxError","evalue":"invalid syntax (3752447574.py, line 2)","traceback":["\u001b[0;36m  Input \u001b[0;32mIn [120]\u001b[0;36m\u001b[0m\n\u001b[0;31m    df.reset_index(drop=True,inplace=True)_\u001b[0m\n\u001b[0m                                          ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}},"pos":11,"scrolled":true,"start":1658870493550,"state":"done","type":"cell"}
{"cell_type":"code","end":1658870494308,"exec_count":121,"id":"d49425","input":"len(df)","kernel":"ds_env","output":{"0":{"data":{"text/plain":"62642"},"exec_count":121}},"pos":12,"start":1658870494297,"state":"done","type":"cell"}
{"cell_type":"code","end":1658870495173,"exec_count":122,"id":"466b13","input":"df.location.value_counts()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"Seattle, WA                      8701\nSan Francisco, CA                6797\nNew York, NY                     4562\nRedmond, WA                      2649\nMountain View, CA                2275\n                                 ... \nSan Fernando, LB, Philippines       1\nSuwanee, GA                         1\nOxford, MS                          1\nWayne, PA                           1\nHilbert, WI                         1\nName: location, Length: 1050, dtype: int64"},"exec_count":122}},"pos":13,"start":1658870495161,"state":"done","type":"cell"}
{"cell_type":"code","end":1658870496017,"exec_count":123,"id":"fd6089","input":"defget_state(x):words=x.split(',')state=words[1]ifstate=='CA':return'CA'elifstate=='WA':return'WA'elifstate=='NY':return'NY'else:return'Other'df['state']=df['location'].apply(get_state)df.drop(['Race'],axis=1,inplace=True)","kernel":"ds_env","output":{"0":{"ename":"SyntaxError","evalue":"invalid syntax (2178979580.py, line 1)","traceback":["\u001b[0;36m  Input \u001b[0;32mIn [123]\u001b[0;36m\u001b[0m\n\u001b[0;31m    defget_state(x):words=x.split(',')state=words[1]ifstate=='CA':return'CA'elifstate=='WA':return'WA'elifstate=='NY':return'NY'else:return'Other'df['state']=df['location'].apply(get_state)df.drop(['Race'],axis=1,inplace=True)\u001b[0m\n\u001b[0m                                      ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}},"pos":14,"start":1658870496014,"state":"done","type":"cell"}
{"cell_type":"code","end":1658870496842,"exec_count":124,"id":"c42c20","input":"top_15_popular=list()df[]'company'].value_counts().index)[:15]defin_popular(x):if x in top_15_popular:return True else:return False df['in_top_15']=df['company'].apply(in_popular)","kernel":"ds_env","output":{"0":{"ename":"SyntaxError","evalue":"invalid syntax (1361047376.py, line 1)","traceback":["\u001b[0;36m  Input \u001b[0;32mIn [124]\u001b[0;36m\u001b[0m\n\u001b[0;31m    top_15_popular=list()df[]'company'].value_counts().index)[:15]defin_popular(x):if x in top_15_popular:return True else:return False df['in_top_15']=df['company'].apply(in_popular)\u001b[0m\n\u001b[0m                         ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}},"pos":15,"start":1658870496839,"state":"done","type":"cell"}
{"cell_type":"code","end":1658870497631,"exec_count":125,"id":"18d3b7","input":"import matplotlib.pyplot as plt","kernel":"ds_env","pos":16,"start":1658870497621,"state":"done","type":"cell"}
{"cell_type":"code","end":1658870498492,"exec_count":126,"id":"86ee83","input":"import numpy as np","kernel":"ds_env","pos":17,"start":1658870498474,"state":"done","type":"cell"}
{"cell_type":"code","end":1658870499184,"exec_count":127,"id":"95161d","input":"y=np.array([35,25,25,15])","kernel":"ds_env","pos":18,"start":1658870499179,"state":"done","type":"cell"}
{"cell_type":"code","end":1658870504520,"exec_count":128,"id":"2083c3","input":"mylabels=[\"Oracle\",\"Ebay\",\"Amazon\",\"Apple\",\"Microsoft\"]","kernel":"ds_env","pos":19,"start":1658870504460,"state":"done","type":"cell"}
{"cell_type":"code","end":1658870505598,"exec_count":129,"id":"81187f","input":"plt.pie(y,labels='Top15Companies')","kernel":"ds_env","output":{"0":{"ename":"ValueError","evalue":"'label' must be of length 'x'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","Input \u001b[0;32mIn [129]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0m \u001b[43mplt\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mpie\u001b[49m\u001b[43m(\u001b[49m\u001b[43my\u001b[49m\u001b[43m,\u001b[49m\u001b[43mlabels\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mTop15Companies\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/matplotlib/pyplot.py:2744\u001b[0m, in \u001b[0;36mpie\u001b[0;34m(x, explode, labels, colors, autopct, pctdistance, shadow, labeldistance, startangle, radius, counterclock, wedgeprops, textprops, center, frame, rotatelabels, normalize, data)\u001b[0m\n\u001b[1;32m   2737\u001b[0m \u001b[38;5;129m@_copy_docstring_and_deprecators\u001b[39m(Axes\u001b[38;5;241m.\u001b[39mpie)\n\u001b[1;32m   2738\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mpie\u001b[39m(\n\u001b[1;32m   2739\u001b[0m         x, explode\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, labels\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, colors\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, autopct\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   2742\u001b[0m         textprops\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, center\u001b[38;5;241m=\u001b[39m(\u001b[38;5;241m0\u001b[39m, \u001b[38;5;241m0\u001b[39m), frame\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mFalse\u001b[39;00m,\n\u001b[1;32m   2743\u001b[0m         rotatelabels\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mFalse\u001b[39;00m, \u001b[38;5;241m*\u001b[39m, normalize\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mTrue\u001b[39;00m, data\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m):\n\u001b[0;32m-> 2744\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mgca\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mpie\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m   2745\u001b[0m \u001b[43m        \u001b[49m\u001b[43mx\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mexplode\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mexplode\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlabels\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlabels\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcolors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcolors\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2746\u001b[0m \u001b[43m        \u001b[49m\u001b[43mautopct\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mautopct\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mpctdistance\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mpctdistance\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mshadow\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mshadow\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2747\u001b[0m \u001b[43m        \u001b[49m\u001b[43mlabeldistance\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlabeldistance\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mstartangle\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mstartangle\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2748\u001b[0m \u001b[43m        \u001b[49m\u001b[43mradius\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mradius\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcounterclock\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcounterclock\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2749\u001b[0m \u001b[43m        \u001b[49m\u001b[43mwedgeprops\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mwedgeprops\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mtextprops\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mtextprops\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcenter\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcenter\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2750\u001b[0m \u001b[43m        \u001b[49m\u001b[43mframe\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mframe\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mrotatelabels\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mrotatelabels\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mnormalize\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mnormalize\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2751\u001b[0m \u001b[43m        \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43m{\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mdata\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m:\u001b[49m\u001b[43m \u001b[49m\u001b[43mdata\u001b[49m\u001b[43m}\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mif\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43mdata\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;129;43;01mis\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[38;5;129;43;01mnot\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[38;5;28;43;01melse\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43m{\u001b[49m\u001b[43m}\u001b[49m\u001b[43m)\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/matplotlib/__init__.py:1412\u001b[0m, in \u001b[0;36m_preprocess_data.<locals>.inner\u001b[0;34m(ax, data, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1409\u001b[0m \u001b[38;5;129m@functools\u001b[39m\u001b[38;5;241m.\u001b[39mwraps(func)\n\u001b[1;32m   1410\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21minner\u001b[39m(ax, \u001b[38;5;241m*\u001b[39margs, data\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs):\n\u001b[1;32m   1411\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m data \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m-> 1412\u001b[0m         \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mfunc\u001b[49m\u001b[43m(\u001b[49m\u001b[43max\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;28;43mmap\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43msanitize_sequence\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43margs\u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1414\u001b[0m     bound \u001b[38;5;241m=\u001b[39m new_sig\u001b[38;5;241m.\u001b[39mbind(ax, \u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n\u001b[1;32m   1415\u001b[0m     auto_label \u001b[38;5;241m=\u001b[39m (bound\u001b[38;5;241m.\u001b[39marguments\u001b[38;5;241m.\u001b[39mget(label_namer)\n\u001b[1;32m   1416\u001b[0m                   \u001b[38;5;129;01mor\u001b[39;00m bound\u001b[38;5;241m.\u001b[39mkwargs\u001b[38;5;241m.\u001b[39mget(label_namer))\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/matplotlib/axes/_axes.py:3060\u001b[0m, in \u001b[0;36mAxes.pie\u001b[0;34m(self, x, explode, labels, colors, autopct, pctdistance, shadow, labeldistance, startangle, radius, counterclock, wedgeprops, textprops, center, frame, rotatelabels, normalize)\u001b[0m\n\u001b[1;32m   3058\u001b[0m     explode \u001b[38;5;241m=\u001b[39m [\u001b[38;5;241m0\u001b[39m] \u001b[38;5;241m*\u001b[39m \u001b[38;5;28mlen\u001b[39m(x)\n\u001b[1;32m   3059\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mlen\u001b[39m(x) \u001b[38;5;241m!=\u001b[39m \u001b[38;5;28mlen\u001b[39m(labels):\n\u001b[0;32m-> 3060\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mlabel\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m must be of length \u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mx\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m   3061\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mlen\u001b[39m(x) \u001b[38;5;241m!=\u001b[39m \u001b[38;5;28mlen\u001b[39m(explode):\n\u001b[1;32m   3062\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mexplode\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m must be of length \u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mx\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n","\u001b[0;31mValueError\u001b[0m: 'label' must be of length 'x'"]}},"pos":20,"scrolled":true,"start":1658870505485,"state":"done","type":"cell"}
{"cell_type":"code","end":1658870506413,"exec_count":130,"id":"c732c1","input":"plt.show('Top15Companies')","kernel":"ds_env","output":{"0":{"ename":"TypeError","evalue":"show() takes 1 positional argument but 2 were given","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","Input \u001b[0;32mIn [130]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0m \u001b[43mplt\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mshow\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mTop15Companies\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/matplotlib/pyplot.py:368\u001b[0m, in \u001b[0;36mshow\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    324\u001b[0m \u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[1;32m    325\u001b[0m \u001b[38;5;124;03mDisplay all open figures.\u001b[39;00m\n\u001b[1;32m    326\u001b[0m \n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    365\u001b[0m \u001b[38;5;124;03mexplicitly there.\u001b[39;00m\n\u001b[1;32m    366\u001b[0m \u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[1;32m    367\u001b[0m _warn_if_gui_out_of_main_thread()\n\u001b[0;32m--> 368\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43m_backend_mod\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mshow\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n","\u001b[0;31mTypeError\u001b[0m: show() takes 1 positional argument but 2 were given"]}},"pos":21,"start":1658870506276,"state":"done","type":"cell"}
{"cell_type":"code","end":1658870507294,"exec_count":131,"id":"e8e0af","input":"chart=px.pie(df,values='in_top_15',title='Top15Companies',names='company')chart.show()","kernel":"ds_env","output":{"0":{"ename":"SyntaxError","evalue":"invalid syntax (1656911999.py, line 1)","traceback":["\u001b[0;36m  Input \u001b[0;32mIn [131]\u001b[0;36m\u001b[0m\n\u001b[0;31m    chart=px.pie(df,values='in_top_15',title='Top15Companies',names='company')chart.show()\u001b[0m\n\u001b[0m                                                                              ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}},"pos":22,"start":1658870507293,"state":"done","type":"cell"}
{"cell_type":"code","end":1658870508070,"exec_count":132,"id":"2e6a72","input":"import plotly.express as px ","kernel":"ds_env","pos":23,"start":1658870508068,"state":"done","type":"cell"}
{"cell_type":"code","end":1658870509037,"exec_count":133,"id":"45761d","input":"df=px.data.tips()","kernel":"ds_env","pos":24,"start":1658870509022,"state":"done","type":"cell"}
{"cell_type":"code","end":1658870509812,"exec_count":134,"id":"17b4fb","input":"fig=px.pie(df, values='tip',names='day')","kernel":"ds_env","pos":25,"start":1658870509775,"state":"done","type":"cell"}
{"cell_type":"code","end":1658870510726,"exec_count":135,"id":"b5dff6","input":"fig.show()","kernel":"ds_env","output":{"0":{"data":{"iframe":"4a9d9708cfde0585fe1570fcf841562fb7e5b05a"}}},"pos":26,"scrolled":true,"start":1658870510717,"state":"done","type":"cell"}
{"cell_type":"code","end":1658870511638,"exec_count":136,"id":"5b0ef0","input":"from matplotlib import pyplot as plt ","kernel":"ds_env","pos":27,"start":1658870511628,"state":"done","type":"cell"}
{"cell_type":"code","end":1658870512638,"exec_count":137,"id":"29966c","input":"import numpy as np","kernel":"ds_env","pos":28,"start":1658870512628,"state":"done","type":"cell"}
{"cell_type":"code","end":1658870513477,"exec_count":138,"id":"281cf4","input":"a=np.array([22,87,5,43,56,73,55,54,11,20,51,5,79,31,27])","kernel":"ds_env","pos":29,"start":1658870513475,"state":"done","type":"cell"}
{"cell_type":"code","end":1658870514343,"exec_count":139,"id":"5bcc5b","input":"fig, ax = plt.subplots(figsize =(10,7))ax.hist(a,bins=[0,25,50,75,100])","kernel":"ds_env","output":{"0":{"ename":"SyntaxError","evalue":"invalid syntax (4105647862.py, line 1)","traceback":["\u001b[0;36m  Input \u001b[0;32mIn [139]\u001b[0;36m\u001b[0m\n\u001b[0;31m    fig, ax = plt.subplots(figsize =(10,7))ax.hist(a,bins=[0,25,50,75,100])\u001b[0m\n\u001b[0m                                           ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}},"pos":30,"start":1658870514229,"state":"done","type":"cell"}
{"cell_type":"code","end":1658870514954,"exec_count":140,"id":"a2c70a","input":"plt.show()","kernel":"ds_env","pos":31,"start":1658870514938,"state":"done","type":"cell"}
{"cell_type":"code","end":1658870515617,"exec_count":141,"id":"239d5e","input":"%matplotlib","kernel":"ds_env","output":{"0":{"name":"stdout","text":"Using matplotlib backend: agg\n"}},"pos":32,"start":1658870515602,"state":"done","type":"cell"}
{"cell_type":"code","end":1658870516298,"exec_count":142,"id":"dfc16e","input":"import matplotlib.pyplot as plt","kernel":"ds_env","pos":33,"start":1658870516288,"state":"done","type":"cell"}
{"cell_type":"code","end":1658870517153,"exec_count":143,"id":"8faa65","input":"plt.style.use('seaborn-whitegrid')","kernel":"ds_env","pos":34,"start":1658870517142,"state":"done","type":"cell"}
{"cell_type":"code","end":1658870517949,"exec_count":144,"id":"7b5b1a","input":"import numpy as np","kernel":"ds_env","pos":35,"start":1658870517946,"state":"done","type":"cell"}
{"cell_type":"code","end":1658870528684,"exec_count":145,"id":"20a9b8","input":"x=np.linspace(0,10,30)","kernel":"ds_env","pos":36,"start":1658870528675,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":61,"id":"062fbb","input":"","kernel":"ds_env","pos":59,"state":"done","type":"cell"}
{"cell_type":"code","id":"6ad6b8","input":"from sklean.metrios import confusion_matrix \nimport ","kernel":"ds_env","pos":57,"type":"cell"}
{"cell_type":"markdown","id":"f806c7","input":"Our dataset is from: [https://www.kaggle.com/datasets/jackogozaly/data\\-science\\-and\\-stem\\-salaries?datasetId=1640011&sortBy=voteCount](https://www.kaggle.com/datasets/jackogozaly/data-science-and-stem-salaries?datasetId=1640011&sortBy=voteCount)\n","pos":1,"type":"cell"}
{"exec_count":66,"id":"61ae43","input":"","kernel":"ds_env","pos":60,"state":"done","type":"cell"}
{"exec_count":67,"id":"31a4bc","input":"","kernel":"ds_env","pos":61,"state":"done","type":"cell"}
{"id":0,"time":1658871419900,"type":"user"}
{"last_load":1658858470744,"type":"file"}